import { OnDestroy, OnInit } from '@angular/core';
import { FormControl, FormGroup, UntypedFormControl } from '@angular/forms';
import { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';
import { Observable } from 'rxjs';
import { FormInputComponent } from '../../../common/component-registry-types';
import { LanguageCode, StructCustomFieldFragment } from '../../../common/generated-types';
import { DataService } from '../../../data/providers/data.service';
import * as i0 from "@angular/core";
/**
 * @description
 * A checkbox input. The default input component for `boolean` fields.
 *
 * @docsCategory custom-input-components
 * @docsPage default-inputs
 */
export declare class StructFormInputComponent implements FormInputComponent, OnInit, OnDestroy {
    private dataService;
    static readonly id: DefaultFormComponentId;
    readonly: boolean;
    formControl: UntypedFormControl;
    config: DefaultFormComponentConfig<'struct-form-input'>;
    uiLanguage$: Observable<LanguageCode>;
    protected structFormGroup: FormGroup<{}>;
    protected fields: Array<{
        def: StructCustomFieldFragment['fields'][number];
        formControl: FormControl;
    }>;
    private subscription;
    constructor(dataService: DataService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<StructFormInputComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<StructFormInputComponent, "vdr-struct-form-input", never, {}, {}, never, never, false, never>;
}
