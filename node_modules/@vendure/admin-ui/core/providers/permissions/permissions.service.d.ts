import { Permission } from '../../common/generated-types';
import * as i0 from "@angular/core";
/**
 * @description
 * This service is used internally to power components & logic that are dependent on knowing the
 * current user's permissions in the currently-active channel.
 */
export declare class PermissionsService {
    private currentUserPermissions;
    private _currentUserPermissions$;
    currentUserPermissions$: import("rxjs").Observable<string[]>;
    /**
     * @description
     * This is called whenever:
     * - the user logs in
     * - the active channel changes
     *
     * Since active user validation occurs as part of the main auth guard, we can be assured
     * that if the user is logged in, then this method will be called with the user's permissions
     * before any other components are rendered lower down in the component tree.
     */
    setCurrentUserPermissions(permissions: string[]): void;
    userHasPermissions(requiredPermissions: Array<string | Permission>): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<PermissionsService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<PermissionsService>;
}
