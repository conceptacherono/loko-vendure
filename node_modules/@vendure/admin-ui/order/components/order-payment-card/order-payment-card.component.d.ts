import { EventEmitter } from '@angular/core';
import { CurrencyCode, OrderDetailFragment } from '@vendure/admin-ui/core';
import * as i0 from "@angular/core";
type Payment = NonNullable<OrderDetailFragment['payments']>[number];
export declare class OrderPaymentCardComponent {
    payment: Payment;
    currencyCode: CurrencyCode;
    settlePayment: EventEmitter<{
        __typename?: "Payment";
        id: string;
        createdAt: any;
        transactionId?: string | null;
        amount: number;
        method: string;
        state: string;
        nextStates: Array<string>;
        errorMessage?: string | null;
        metadata?: any | null;
        refunds: Array<{
            __typename?: "Refund";
            id: string;
            createdAt: any;
            state: string;
            items: number;
            adjustment: number;
            total: number;
            paymentId: string;
            reason?: string | null;
            transactionId?: string | null;
            method?: string | null;
            metadata?: any | null;
            lines: Array<{
                __typename?: "RefundLine";
                orderLineId: string;
                quantity: number;
            }>;
        }>;
    }>;
    transitionPaymentState: EventEmitter<{
        payment: Payment;
        state: string;
    }>;
    settleRefund: EventEmitter<{
        __typename?: "Refund";
        id: string;
        createdAt: any;
        state: string;
        items: number;
        adjustment: number;
        total: number;
        paymentId: string;
        reason?: string | null;
        transactionId?: string | null;
        method?: string | null;
        metadata?: any | null;
        lines: Array<{
            __typename?: "RefundLine";
            orderLineId: string;
            quantity: number;
        }>;
    }>;
    refundHasMetadata(refund?: Payment['refunds'][number]): boolean;
    nextOtherStates(): string[];
    static ɵfac: i0.ɵɵFactoryDeclaration<OrderPaymentCardComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<OrderPaymentCardComponent, "vdr-order-payment-card", never, { "payment": { "alias": "payment"; "required": false; }; "currencyCode": { "alias": "currencyCode"; "required": false; }; }, { "settlePayment": "settlePayment"; "transitionPaymentState": "transitionPaymentState"; "settleRefund": "settleRefund"; }, never, never, false, never>;
}
export {};
