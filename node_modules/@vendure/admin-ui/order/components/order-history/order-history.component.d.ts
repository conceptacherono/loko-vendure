import { EventEmitter } from '@angular/core';
import { HistoryEntryComponentService, HistoryEntryType, OrderDetailFragment, TimelineDisplayType, TimelineHistoryEntry } from '@vendure/admin-ui/core';
import * as i0 from "@angular/core";
export declare class OrderHistoryComponent {
    private historyEntryComponentService;
    order: OrderDetailFragment;
    history: TimelineHistoryEntry[];
    addNote: EventEmitter<{
        note: string;
        isPublic: boolean;
    }>;
    updateNote: EventEmitter<{
        __typename?: "HistoryEntry";
        id: string;
        type: HistoryEntryType;
        createdAt: any;
        isPublic: boolean;
        data: any;
        administrator?: {
            __typename?: "Administrator";
            id: string;
            firstName: string;
            lastName: string;
        } | null;
    }>;
    deleteNote: EventEmitter<{
        __typename?: "HistoryEntry";
        id: string;
        type: HistoryEntryType;
        createdAt: any;
        isPublic: boolean;
        data: any;
        administrator?: {
            __typename?: "Administrator";
            id: string;
            firstName: string;
            lastName: string;
        } | null;
    }>;
    note: string;
    noteIsPrivate: boolean;
    expanded: boolean;
    readonly type: typeof HistoryEntryType;
    constructor(historyEntryComponentService: HistoryEntryComponentService);
    hasCustomComponent(type: string): boolean;
    getDisplayType(entry: TimelineHistoryEntry): TimelineDisplayType;
    getTimelineIcon(entry: TimelineHistoryEntry): string[] | "ban" | "credit-card" | "note" | "pencil" | "switch" | "truck" | undefined;
    isFeatured(entry: TimelineHistoryEntry): boolean;
    getFulfillment(entry: TimelineHistoryEntry): NonNullable<OrderDetailFragment['fulfillments']>[number] | undefined;
    getPayment(entry: TimelineHistoryEntry): NonNullable<OrderDetailFragment['payments']>[number] | undefined;
    getRefund(entry: TimelineHistoryEntry): NonNullable<OrderDetailFragment['payments']>[number]['refunds'][number] | undefined;
    getCancelledQuantity(entry: TimelineHistoryEntry): number;
    getCancelledItems(cancellationLines: Array<{
        orderLineId: string;
        quantity: number;
    }>): Array<{
        name: string;
        quantity: number;
    }>;
    getModification(id: string): {
        __typename?: "OrderModification";
        id: string;
        createdAt: any;
        isSettled: boolean;
        priceChange: number;
        note: string;
        payment?: {
            __typename?: "Payment";
            id: string;
            amount: number;
        } | null;
        lines: Array<{
            __typename?: "OrderModificationLine";
            orderLineId: string;
            quantity: number;
        }>;
        refund?: {
            __typename?: "Refund";
            id: string;
            paymentId: string;
            total: number;
        } | null;
        surcharges?: Array<{
            __typename?: "Surcharge";
            id: string;
        }> | null;
    } | undefined;
    getName(entry: TimelineHistoryEntry): string;
    addNoteToOrder(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<OrderHistoryComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<OrderHistoryComponent, "vdr-order-history", never, { "order": { "alias": "order"; "required": false; }; "history": { "alias": "history"; "required": false; }; }, { "addNote": "addNote"; "updateNote": "updateNote"; "deleteNote": "deleteNote"; }, never, never, false, never>;
}
