import { ChangeDetectionStrategy, Component } from '@angular/core';
import { titleSetter, } from '@vendure/admin-ui/core';
import { assertNever } from '@vendure/common/lib/shared-utils';
import { map, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@vendure/admin-ui/core";
import * as i2 from "@clr/angular";
import * as i3 from "@angular/common";
import * as i4 from "@angular/cdk/drag-drop";
import * as i5 from "../dashboard-widget/dashboard-widget.component";
import * as i6 from "@ngx-translate/core";
export class DashboardComponent {
    constructor(dashboardWidgetService, localStorageService, changedDetectorRef, dataService) {
        this.dashboardWidgetService = dashboardWidgetService;
        this.localStorageService = localStorageService;
        this.changedDetectorRef = changedDetectorRef;
        this.dataService = dataService;
        this.deletionMarker = '__delete__';
        this.setTitle = titleSetter();
    }
    ngOnInit() {
        this.availableWidgets$ = this.dataService.client.userStatus().stream$.pipe(map(({ userStatus }) => userStatus.permissions), map(permissions => this.dashboardWidgetService.getAvailableWidgets(permissions)), tap(widgets => (this.widgetLayout = this.initLayout(widgets.map(w => w.id)))));
        this.setTitle('breadcrumb.dashboard');
    }
    getClassForWidth(width) {
        switch (width) {
            case 3:
                return `clr-col-12 clr-col-sm-6 clr-col-lg-3`;
            case 4:
                return `clr-col-12 clr-col-sm-6 clr-col-lg-4`;
            case 6:
                return `clr-col-12 clr-col-lg-6`;
            case 8:
                return `clr-col-12 clr-col-lg-8`;
            case 12:
                return `clr-col-12`;
            default:
                assertNever(width);
        }
    }
    getSupportedWidths(config) {
        return config.supportedWidths || [3, 4, 6, 8, 12];
    }
    setWidgetWidth(widget, width) {
        widget.width = width;
        this.recalculateLayout();
    }
    trackRow(index, row) {
        const id = row.map(item => `${item.id}:${item.width}`).join('|');
        return id;
    }
    trackRowItem(index, item) {
        return item.config;
    }
    addWidget(id) {
        const config = this.dashboardWidgetService.getWidgetById(id);
        if (config) {
            const width = this.getSupportedWidths(config)[0];
            const widget = {
                id,
                config,
                width,
            };
            let targetRow;
            if (this.widgetLayout && this.widgetLayout.length) {
                targetRow = this.widgetLayout[this.widgetLayout.length - 1];
            }
            else {
                targetRow = [];
                this.widgetLayout?.push(targetRow);
            }
            targetRow.push(widget);
            this.recalculateLayout();
        }
    }
    removeWidget(widget) {
        widget.id = this.deletionMarker;
        this.recalculateLayout();
    }
    drop(event) {
        const { currentIndex, previousIndex, previousContainer, container } = event;
        if (previousIndex === currentIndex && previousContainer.data.index === container.data.index) {
            // Nothing changed
            return;
        }
        if (this.widgetLayout) {
            const previousLayoutRow = this.widgetLayout[previousContainer.data.index];
            const newLayoutRow = this.widgetLayout[container.data.index];
            previousLayoutRow.splice(previousIndex, 1);
            newLayoutRow.splice(currentIndex, 0, event.item.data);
            this.recalculateLayout();
        }
    }
    initLayout(availableIds) {
        const savedLayoutDef = this.localStorageService.get('dashboardWidgetLayout');
        let layoutDef;
        if (savedLayoutDef) {
            // validate all the IDs from the saved layout are still available
            layoutDef = savedLayoutDef.filter(item => availableIds.includes(item.id));
        }
        return this.dashboardWidgetService.getWidgetLayout(layoutDef);
    }
    recalculateLayout() {
        if (this.widgetLayout) {
            const flattened = this.widgetLayout
                .reduce((flat, row) => [...flat, ...row], [])
                .filter(item => item.id !== this.deletionMarker);
            const newLayoutDef = flattened.map(item => ({
                id: item.id,
                width: item.width,
            }));
            this.widgetLayout = this.dashboardWidgetService.getWidgetLayout(newLayoutDef);
            this.localStorageService.set('dashboardWidgetLayout', newLayoutDef);
            setTimeout(() => this.changedDetectorRef.markForCheck());
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: DashboardComponent, deps: [{ token: i1.DashboardWidgetService }, { token: i1.LocalStorageService }, { token: i0.ChangeDetectorRef }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: DashboardComponent, selector: "vdr-dashboard", ngImport: i0, template: "<vdr-page-block>\r\n    <div class=\"widget-header mb-1\">\r\n        <vdr-dropdown>\r\n            <button class=\"btn btn-secondary btn-sm\" vdrDropdownTrigger>\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'dashboard.add-widget' | translate }}\r\n                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n            </button>\r\n            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                <button\r\n                    vdrDropdownItem\r\n                    *ngFor=\"let widget of availableWidgets$ | async\"\r\n                    (click)=\"addWidget(widget.id)\"\r\n                >\r\n                    {{ (widget.config.title ?? widget.id) | translate }}\r\n                </button>\r\n            </vdr-dropdown-menu>\r\n        </vdr-dropdown>\r\n    </div>\r\n    <div cdkDropListGroup>\r\n        <div\r\n            class=\"clr-row dashboard-row\"\r\n            *ngFor=\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\"\r\n            cdkDropList\r\n            (cdkDropListDropped)=\"drop($event)\"\r\n            cdkDropListOrientation=\"horizontal\"\r\n            [cdkDropListData]=\"{ index: rowIndex }\"\r\n        >\r\n            <div\r\n                *ngFor=\"let widget of row; trackBy: trackRowItem\"\r\n                class=\"dashboard-item\"\r\n                [ngClass]=\"getClassForWidth(widget.width)\"\r\n                cdkDrag\r\n                [cdkDragData]=\"widget\"\r\n            >\r\n                <vdr-dashboard-widget\r\n                    *vdrIfPermissions=\"widget.config.requiresPermissions || null\"\r\n                    [widgetConfig]=\"widget.config\"\r\n                >\r\n                    <div class=\"flex\">\r\n                        <div class=\"drag-handle\" cdkDragHandle>\r\n                            <clr-icon shape=\"drag-handle\" size=\"24\"></clr-icon>\r\n                        </div>\r\n                        <vdr-dropdown>\r\n                            <button class=\"icon-button\" vdrDropdownTrigger>\r\n                                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                            </button>\r\n                            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                                <h4 class=\"dropdown-header\">{{ 'dashboard.widget-resize' | translate }}</h4>\r\n                                <button\r\n                                    vdrDropdownItem\r\n                                    [disabled]=\"width === widget.width\"\r\n                                    *ngFor=\"let width of getSupportedWidths(widget.config)\"\r\n                                    (click)=\"setWidgetWidth(widget, width)\"\r\n                                >\r\n                                    {{ 'dashboard.widget-width' | translate : { width: width } }}\r\n                                </button>\r\n                                <div class=\"dropdown-divider\" role=\"separator\"></div>\r\n                                <button vdrDropdownItem (click)=\"removeWidget(widget)\">\r\n                                    <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                                    {{ 'dashboard.remove-widget' | translate }}\r\n                                </button>\r\n                            </vdr-dropdown-menu>\r\n                        </vdr-dropdown>\r\n                    </div>\r\n                </vdr-dashboard-widget>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</vdr-page-block>\r\n", styles: [".widget-header{display:flex;justify-content:flex-end}.placeholder{color:var(--color-grey-300);text-align:center}.placeholder .version{font-size:3em;margin:24px;line-height:1em}.placeholder ::ng-deep .clr-i-outline{fill:var(--color-grey-200)}vdr-dashboard-widget{margin-bottom:24px}.drag-handle{cursor:move}.cdk-drag-preview{box-sizing:border-box;border-radius:4px}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.dashboard-row{padding:0;border-width:1;margin-bottom:6px;transition:padding .2s,margin .2s}.dashboard-row.cdk-drop-list-dragging,.dashboard-row.cdk-drop-list-receiving{border:2px dashed var(--color-component-border-200);border-radius:var(--border-radius);padding:6px}.dashboard-row.cdk-drop-list-dragging .dashboard-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}\n"], dependencies: [{ kind: "directive", type: i2.ClrIconCustomTag, selector: "clr-icon" }, { kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.CdkDropList, selector: "[cdkDropList], cdk-drop-list", inputs: ["cdkDropListConnectedTo", "cdkDropListData", "cdkDropListOrientation", "id", "cdkDropListLockAxis", "cdkDropListDisabled", "cdkDropListSortingDisabled", "cdkDropListEnterPredicate", "cdkDropListSortPredicate", "cdkDropListAutoScrollDisabled", "cdkDropListAutoScrollStep"], outputs: ["cdkDropListDropped", "cdkDropListEntered", "cdkDropListExited", "cdkDropListSorted"], exportAs: ["cdkDropList"] }, { kind: "directive", type: i4.CdkDropListGroup, selector: "[cdkDropListGroup]", inputs: ["cdkDropListGroupDisabled"], exportAs: ["cdkDropListGroup"] }, { kind: "directive", type: i4.CdkDrag, selector: "[cdkDrag]", inputs: ["cdkDragData", "cdkDragLockAxis", "cdkDragRootElement", "cdkDragBoundary", "cdkDragStartDelay", "cdkDragFreeDragPosition", "cdkDragDisabled", "cdkDragConstrainPosition", "cdkDragPreviewClass", "cdkDragPreviewContainer"], outputs: ["cdkDragStarted", "cdkDragReleased", "cdkDragEnded", "cdkDragEntered", "cdkDragExited", "cdkDragDropped", "cdkDragMoved"], exportAs: ["cdkDrag"] }, { kind: "directive", type: i4.CdkDragHandle, selector: "[cdkDragHandle]", inputs: ["cdkDragHandleDisabled"] }, { kind: "component", type: i1.DropdownComponent, selector: "vdr-dropdown", inputs: ["manualToggle"] }, { kind: "component", type: i1.DropdownMenuComponent, selector: "vdr-dropdown-menu", inputs: ["vdrPosition", "customClasses"] }, { kind: "directive", type: i1.DropdownTriggerDirective, selector: "[vdrDropdownTrigger]" }, { kind: "directive", type: i1.DropdownItemDirective, selector: "[vdrDropdownItem]" }, { kind: "directive", type: i1.IfPermissionsDirective, selector: "[vdrIfPermissions]", inputs: ["vdrIfPermissions", "vdrIfPermissionsElse"] }, { kind: "component", type: i1.PageBlockComponent, selector: "vdr-page-block" }, { kind: "component", type: i5.DashboardWidgetComponent, selector: "vdr-dashboard-widget", inputs: ["widgetConfig"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i6.TranslatePipe, name: "translate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: DashboardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-dashboard', changeDetection: ChangeDetectionStrategy.OnPush, template: "<vdr-page-block>\r\n    <div class=\"widget-header mb-1\">\r\n        <vdr-dropdown>\r\n            <button class=\"btn btn-secondary btn-sm\" vdrDropdownTrigger>\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'dashboard.add-widget' | translate }}\r\n                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n            </button>\r\n            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                <button\r\n                    vdrDropdownItem\r\n                    *ngFor=\"let widget of availableWidgets$ | async\"\r\n                    (click)=\"addWidget(widget.id)\"\r\n                >\r\n                    {{ (widget.config.title ?? widget.id) | translate }}\r\n                </button>\r\n            </vdr-dropdown-menu>\r\n        </vdr-dropdown>\r\n    </div>\r\n    <div cdkDropListGroup>\r\n        <div\r\n            class=\"clr-row dashboard-row\"\r\n            *ngFor=\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\"\r\n            cdkDropList\r\n            (cdkDropListDropped)=\"drop($event)\"\r\n            cdkDropListOrientation=\"horizontal\"\r\n            [cdkDropListData]=\"{ index: rowIndex }\"\r\n        >\r\n            <div\r\n                *ngFor=\"let widget of row; trackBy: trackRowItem\"\r\n                class=\"dashboard-item\"\r\n                [ngClass]=\"getClassForWidth(widget.width)\"\r\n                cdkDrag\r\n                [cdkDragData]=\"widget\"\r\n            >\r\n                <vdr-dashboard-widget\r\n                    *vdrIfPermissions=\"widget.config.requiresPermissions || null\"\r\n                    [widgetConfig]=\"widget.config\"\r\n                >\r\n                    <div class=\"flex\">\r\n                        <div class=\"drag-handle\" cdkDragHandle>\r\n                            <clr-icon shape=\"drag-handle\" size=\"24\"></clr-icon>\r\n                        </div>\r\n                        <vdr-dropdown>\r\n                            <button class=\"icon-button\" vdrDropdownTrigger>\r\n                                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                            </button>\r\n                            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                                <h4 class=\"dropdown-header\">{{ 'dashboard.widget-resize' | translate }}</h4>\r\n                                <button\r\n                                    vdrDropdownItem\r\n                                    [disabled]=\"width === widget.width\"\r\n                                    *ngFor=\"let width of getSupportedWidths(widget.config)\"\r\n                                    (click)=\"setWidgetWidth(widget, width)\"\r\n                                >\r\n                                    {{ 'dashboard.widget-width' | translate : { width: width } }}\r\n                                </button>\r\n                                <div class=\"dropdown-divider\" role=\"separator\"></div>\r\n                                <button vdrDropdownItem (click)=\"removeWidget(widget)\">\r\n                                    <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                                    {{ 'dashboard.remove-widget' | translate }}\r\n                                </button>\r\n                            </vdr-dropdown-menu>\r\n                        </vdr-dropdown>\r\n                    </div>\r\n                </vdr-dashboard-widget>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</vdr-page-block>\r\n", styles: [".widget-header{display:flex;justify-content:flex-end}.placeholder{color:var(--color-grey-300);text-align:center}.placeholder .version{font-size:3em;margin:24px;line-height:1em}.placeholder ::ng-deep .clr-i-outline{fill:var(--color-grey-200)}vdr-dashboard-widget{margin-bottom:24px}.drag-handle{cursor:move}.cdk-drag-preview{box-sizing:border-box;border-radius:4px}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.dashboard-row{padding:0;border-width:1;margin-bottom:6px;transition:padding .2s,margin .2s}.dashboard-row.cdk-drop-list-dragging,.dashboard-row.cdk-drop-list-receiving{border:2px dashed var(--color-component-border-200);border-radius:var(--border-radius);padding:6px}.dashboard-row.cdk-drop-list-dragging .dashboard-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}\n"] }]
        }], ctorParameters: () => [{ type: i1.DashboardWidgetService }, { type: i1.LocalStorageService }, { type: i0.ChangeDetectorRef }, { type: i1.DataService }] });
//# sourceMappingURL=data:application/json;base64,