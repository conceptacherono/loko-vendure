import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FormControl } from '@angular/forms';
import { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';
import { debounceTime, distinctUntilChanged, map, startWith, switchMap, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@vendure/admin-ui/core";
import * as i2 from "@clr/angular";
import * as i3 from "@angular/common";
import * as i4 from "../collection-data-table/collection-data-table.component";
import * as i5 from "@ngx-translate/core";
import * as i6 from "../collection-list/collection-breadcrumb.pipe";
export class MoveCollectionsDialogComponent {
    constructor(dataService, i18nService) {
        this.dataService = dataService;
        this.i18nService = i18nService;
        this.searchTermControl = new FormControl('');
        this.currentPage$ = new BehaviorSubject(1);
        this.itemsPerPage$ = new BehaviorSubject(10);
        this.expandedIds$ = new Subject();
        this.expandedIds = [];
    }
    ngOnInit() {
        const getCollectionsResult = this.dataService.collection.getCollections();
        const searchTerm$ = this.searchTermControl.valueChanges.pipe(debounceTime(250), distinctUntilChanged(), startWith(''));
        const currentPage$ = this.currentPage$.pipe(distinctUntilChanged());
        const itemsPerPage$ = this.itemsPerPage$.pipe(distinctUntilChanged());
        combineLatest(searchTerm$, currentPage$, itemsPerPage$).subscribe(([searchTerm, currentPage, itemsPerPage]) => {
            const topLevelOnly = searchTerm === '';
            getCollectionsResult.ref.refetch({
                options: {
                    skip: (currentPage - 1) * itemsPerPage,
                    take: itemsPerPage,
                    filter: {
                        name: { contains: searchTerm },
                    },
                    topLevelOnly,
                },
            });
        });
        const rootCollectionId$ = this.dataService.collection
            .getCollections({
            take: 1,
            topLevelOnly: true,
        })
            .mapSingle(data => data.collections.items[0].parentId);
        this.items$ = combineLatest(getCollectionsResult.mapStream(({ collections }) => collections), rootCollectionId$).pipe(map(([collections, rootCollectionId]) => [
            ...(rootCollectionId
                ? [
                    {
                        id: rootCollectionId,
                        name: this.i18nService.translate('catalog.root-collection'),
                        slug: '',
                        parentId: '__',
                        position: 0,
                        featuredAsset: null,
                        children: [],
                        breadcrumbs: [],
                        isPrivate: false,
                        createdAt: '',
                        updatedAt: '',
                    },
                ]
                : []),
            ...collections.items,
        ]));
        this.totalItems$ = getCollectionsResult.mapStream(data => data.collections.totalItems);
        this.subCollections$ = this.expandedIds$.pipe(tap(val => (this.expandedIds = val)), switchMap(ids => {
            if (ids.length) {
                return this.dataService.collection
                    .getCollections({
                    take: 999,
                    filter: {
                        parentId: { in: ids },
                    },
                })
                    .mapStream(data => data.collections.items);
            }
            else {
                return of([]);
            }
        }));
    }
    toggleExpanded(collection) {
        let expandedIds = this.expandedIds;
        if (!expandedIds.includes(collection.id)) {
            expandedIds.push(collection.id);
        }
        else {
            expandedIds = expandedIds.filter(id => id !== collection.id);
        }
        this.expandedIds$.next(expandedIds);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: MoveCollectionsDialogComponent, deps: [{ token: i1.DataService }, { token: i1.I18nService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: MoveCollectionsDialogComponent, selector: "vdr-move-collections-dialog", ngImport: i0, template: "<ng-template vdrDialogTitle>\r\n    {{ 'catalog.move-collections' | translate }}\r\n</ng-template>\r\n<vdr-collection-data-table\r\n    class=\"mt-2\"\r\n    id=\"move-collection-list\"\r\n    [items]=\"items$ | async\"\r\n    [subCollections]=\"subCollections$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    (pageChange)=\"currentPage$.next($event)\"\r\n    (itemsPerPageChange)=\"itemsPerPage$.next($event)\"\r\n>\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'common.search-by-name' | translate\"\r\n    ></vdr-dt2-search>\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-collection=\"item\">\r\n            {{ collection.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" id=\"name\" [optional]=\"false\">\r\n        <ng-template let-collection=\"item\" let-depth=\"depth\">\r\n            <div [ngClass]=\"'indent-' + depth\"></div>\r\n            <clr-icon\r\n                class=\"child-arrow\"\r\n                [class.transparent]=\"depth === 0\"\r\n                shape=\"child-arrow\"\r\n                *ngIf=\"!collection.children?.length && collection.parentId !== '__'\"\r\n            ></clr-icon>\r\n            <button\r\n                class=\"icon-button folder-button\"\r\n                *ngIf=\"collection.children?.length\"\r\n                (click)=\"toggleExpanded(collection)\"\r\n            >\r\n                <clr-icon shape=\"folder\" *ngIf=\"!expandedIds.includes(collection.id)\"></clr-icon>\r\n                <clr-icon shape=\"folder-open\" *ngIf=\"expandedIds.includes(collection.id)\"></clr-icon>\r\n            </button>\r\n            <button class=\"icon-button folder-button\" *ngIf=\"collection.parentId === '__'\" disabled>\r\n                <clr-icon shape=\"folder\" class=\"is-solid\"></clr-icon>\r\n            </button>\r\n            <button class=\"button-ghost\" (click)=\"resolveWith(collection)\">\r\n                <span>{{ 'catalog.move-collection-to' | translate : {name: collection.name} }}</span>\r\n            </button>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.breadcrumb' | translate\" id=\"breadcrumb\">\r\n        <ng-template let-collection=\"item\">\r\n            <div class=\"breadcrumb\">\r\n                <ng-container *ngIf=\"collection | collectionBreadcrumb as breadcrumbs\">\r\n                    <ng-container *ngIf=\"breadcrumbs.length\">\r\n                        <div *ngFor=\"let item of breadcrumbs\">\r\n                            <span class=\"separator\">/</span>{{ item.name }}\r\n                        </div>\r\n                    </ng-container>\r\n                    <span class=\"separator\" *ngIf=\"!breadcrumbs.length\">/</span>\r\n                </ng-container>\r\n            </div>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.slug' | translate\" id=\"slug\">\r\n        <ng-template let-collection=\"item\">\r\n            {{ collection.slug }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n</vdr-collection-data-table>\r\n", styles: ["", ":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\n"], dependencies: [{ kind: "directive", type: i2.ClrIconCustomTag, selector: "clr-icon" }, { kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.DialogTitleDirective, selector: "[vdrDialogTitle]" }, { kind: "component", type: i1.DataTable2ColumnComponent, selector: "vdr-dt2-column", inputs: ["id", "expand", "heading", "align", "sort", "optional", "hiddenByDefault", "orderable"], exportAs: ["row"] }, { kind: "component", type: i1.DataTable2SearchComponent, selector: "vdr-dt2-search", inputs: ["searchTermControl", "searchTermPlaceholder"] }, { kind: "component", type: i4.CollectionDataTableComponent, selector: "vdr-collection-data-table", inputs: ["subCollections"], outputs: ["changeOrder"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i5.TranslatePipe, name: "translate" }, { kind: "pipe", type: i6.CollectionBreadcrumbPipe, name: "collectionBreadcrumb" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: MoveCollectionsDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-move-collections-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-template vdrDialogTitle>\r\n    {{ 'catalog.move-collections' | translate }}\r\n</ng-template>\r\n<vdr-collection-data-table\r\n    class=\"mt-2\"\r\n    id=\"move-collection-list\"\r\n    [items]=\"items$ | async\"\r\n    [subCollections]=\"subCollections$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    (pageChange)=\"currentPage$.next($event)\"\r\n    (itemsPerPageChange)=\"itemsPerPage$.next($event)\"\r\n>\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'common.search-by-name' | translate\"\r\n    ></vdr-dt2-search>\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-collection=\"item\">\r\n            {{ collection.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" id=\"name\" [optional]=\"false\">\r\n        <ng-template let-collection=\"item\" let-depth=\"depth\">\r\n            <div [ngClass]=\"'indent-' + depth\"></div>\r\n            <clr-icon\r\n                class=\"child-arrow\"\r\n                [class.transparent]=\"depth === 0\"\r\n                shape=\"child-arrow\"\r\n                *ngIf=\"!collection.children?.length && collection.parentId !== '__'\"\r\n            ></clr-icon>\r\n            <button\r\n                class=\"icon-button folder-button\"\r\n                *ngIf=\"collection.children?.length\"\r\n                (click)=\"toggleExpanded(collection)\"\r\n            >\r\n                <clr-icon shape=\"folder\" *ngIf=\"!expandedIds.includes(collection.id)\"></clr-icon>\r\n                <clr-icon shape=\"folder-open\" *ngIf=\"expandedIds.includes(collection.id)\"></clr-icon>\r\n            </button>\r\n            <button class=\"icon-button folder-button\" *ngIf=\"collection.parentId === '__'\" disabled>\r\n                <clr-icon shape=\"folder\" class=\"is-solid\"></clr-icon>\r\n            </button>\r\n            <button class=\"button-ghost\" (click)=\"resolveWith(collection)\">\r\n                <span>{{ 'catalog.move-collection-to' | translate : {name: collection.name} }}</span>\r\n            </button>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.breadcrumb' | translate\" id=\"breadcrumb\">\r\n        <ng-template let-collection=\"item\">\r\n            <div class=\"breadcrumb\">\r\n                <ng-container *ngIf=\"collection | collectionBreadcrumb as breadcrumbs\">\r\n                    <ng-container *ngIf=\"breadcrumbs.length\">\r\n                        <div *ngFor=\"let item of breadcrumbs\">\r\n                            <span class=\"separator\">/</span>{{ item.name }}\r\n                        </div>\r\n                    </ng-container>\r\n                    <span class=\"separator\" *ngIf=\"!breadcrumbs.length\">/</span>\r\n                </ng-container>\r\n            </div>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.slug' | translate\" id=\"slug\">\r\n        <ng-template let-collection=\"item\">\r\n            {{ collection.slug }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n</vdr-collection-data-table>\r\n", styles: [":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\n"] }]
        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.I18nService }] });
//# sourceMappingURL=data:application/json;base64,