import { Component, ElementRef, EventEmitter, Output, ViewChildren } from '@angular/core';
import { GetStockLocationListDocument, } from '@vendure/admin-ui/core';
import { generateAllCombinations } from '@vendure/common/lib/shared-utils';
import { tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@vendure/admin-ui/core";
import * as i2 from "@angular/forms";
import * as i3 from "@clr/angular";
import * as i4 from "@angular/common";
import * as i5 from "../option-value-input/option-value-input.component";
import * as i6 from "@ngx-translate/core";
const DEFAULT_VARIANT_CODE = '__DEFAULT_VARIANT__';
export class GenerateProductVariantsComponent {
    constructor(dataService, formBuilder) {
        this.dataService = dataService;
        this.formBuilder = formBuilder;
        this.variantsChange = new EventEmitter();
        this.optionGroups = [];
        this.variantFormValues = {};
        this.selectedStockLocationId = null;
    }
    ngOnInit() {
        this.dataService.settings.getActiveChannel().single$.subscribe(data => {
            this.currencyCode = data.activeChannel.defaultCurrencyCode;
        });
        this.stockLocations$ = this.dataService
            .query(GetStockLocationListDocument, {
            options: {
                take: 999,
            },
        })
            .refetchOnChannelChange()
            .mapStream(({ stockLocations }) => stockLocations.items)
            .pipe(tap(items => {
            if (items.length) {
                this.selectedStockLocationId = items[0].id;
                this.onFormChange();
            }
        }));
        this.generateVariants();
    }
    addOption() {
        this.optionGroups.push({ name: '', values: [] });
        const index = this.optionGroups.length - 1;
        setTimeout(() => {
            const input = this.groupNameInputs.get(index)?.nativeElement;
            input?.focus();
        });
    }
    removeOption(name) {
        this.optionGroups = this.optionGroups.filter(g => g.name !== name);
        this.generateVariants();
    }
    generateVariants() {
        const totalValuesCount = this.optionGroups.reduce((sum, group) => sum + group.values.length, 0);
        const groups = totalValuesCount
            ? this.optionGroups.map(g => g.values.map(v => v.name))
            : [[DEFAULT_VARIANT_CODE]];
        this.variants = generateAllCombinations(groups).map(values => ({ id: values.join('|'), values }));
        this.variants.forEach((variant, index) => {
            if (!this.variantFormValues[variant.id]) {
                const formGroup = this.formBuilder.nonNullable.group({
                    optionValues: [variant.values],
                    enabled: true,
                    price: this.copyFromDefault(variant.id, 'price', 0),
                    sku: this.copyFromDefault(variant.id, 'sku', ''),
                    stock: this.copyFromDefault(variant.id, 'stock', 0),
                });
                formGroup.valueChanges.subscribe(() => this.onFormChange());
                if (index === 0) {
                    formGroup.get('price')?.valueChanges.subscribe(value => {
                        this.copyValuesToPristine('price', formGroup.get('price'));
                    });
                    formGroup.get('sku')?.valueChanges.subscribe(value => {
                        this.copyValuesToPristine('sku', formGroup.get('sku'));
                    });
                    formGroup.get('stock')?.valueChanges.subscribe(value => {
                        this.copyValuesToPristine('stock', formGroup.get('stock'));
                    });
                }
                this.variantFormValues[variant.id] = formGroup;
            }
        });
        this.onFormChange();
    }
    trackByFn(index, variant) {
        return variant.values.join('|');
    }
    handleEnter(event, optionValueInputComponent) {
        event.preventDefault();
        event.stopPropagation();
        optionValueInputComponent.focus();
    }
    copyValuesToPristine(field, formControl) {
        if (!formControl) {
            return;
        }
        Object.values(this.variantFormValues).forEach(formGroup => {
            const correspondingFormControl = formGroup.get(field);
            if (correspondingFormControl && correspondingFormControl.pristine) {
                correspondingFormControl.setValue(formControl.value, { emitEvent: false });
            }
        });
    }
    onFormChange() {
        const variantsToCreate = this.variants
            .map(v => this.variantFormValues[v.id].value)
            .filter(v => v.enabled);
        this.variantsChange.emit({
            groups: this.optionGroups.map(og => ({ name: og.name, values: og.values.map(v => v.name) })),
            variants: variantsToCreate,
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            stockLocationId: this.selectedStockLocationId,
        });
    }
    copyFromDefault(variantId, prop, value) {
        return variantId !== DEFAULT_VARIANT_CODE
            ? this.variantFormValues[DEFAULT_VARIANT_CODE].get(prop)?.value
            : value;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: GenerateProductVariantsComponent, deps: [{ token: i1.DataService }, { token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: GenerateProductVariantsComponent, selector: "vdr-generate-product-variants", outputs: { variantsChange: "variantsChange" }, viewQueries: [{ propertyName: "groupNameInputs", predicate: ["optionGroupName"], descendants: true, read: ElementRef }], ngImport: i0, template: "<div *ngFor=\"let group of optionGroups\" class=\"option-groups\">\r\n    <div class=\"name\">\r\n        <label>{{ 'catalog.option' | translate }}</label>\r\n        <input\r\n            #optionGroupName\r\n            placeholder=\"e.g. Size\"\r\n            clrInput\r\n            [(ngModel)]=\"group.name\"\r\n            name=\"name\"\r\n            required\r\n            (keydown.enter)=\"handleEnter($event, optionValueInputComponent)\"\r\n        />\r\n    </div>\r\n    <div class=\"values\">\r\n        <label>{{ 'catalog.option-values' | translate }}</label>\r\n        <vdr-option-value-input\r\n            #optionValueInputComponent\r\n            [(ngModel)]=\"group.values\"\r\n            (ngModelChange)=\"generateVariants()\"\r\n            (edit)=\"generateVariants()\"\r\n            [groupName]=\"group.name\"\r\n            [disabled]=\"group.name === ''\"\r\n        ></vdr-option-value-input>\r\n    </div>\r\n    <div class=\"remove-group\">\r\n        <button\r\n            class=\"button-small mt-2\"\r\n            [title]=\"'catalog.remove-option' | translate\"\r\n            (click)=\"removeOption(group.name)\"\r\n        >\r\n            <clr-icon shape=\"trash\"></clr-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n<button class=\"button mb-2\" (click)=\"addOption()\">\r\n    <clr-icon shape=\"plus\"></clr-icon>\r\n    {{ 'catalog.add-option' | translate }}\r\n</button>\r\n\r\n<ng-container *ngIf=\"stockLocations$ | async as stockLocations\">\r\n    <clr-alert *ngIf=\"stockLocations.length === 0\" clrAlertType=\"warning\" [clrAlertClosable]=\"false\" class=\"\">\r\n        <clr-alert-item>\r\n            <span class=\"alert-text\">\r\n                {{ 'catalog.no-stock-locations-available-on-current-channel' | translate }}\r\n            </span>\r\n        </clr-alert-item>\r\n    </clr-alert>\r\n\r\n    <div class=\"form-grid mb-2\">\r\n        <vdr-form-field *ngIf=\"stockLocations.length\" [label]=\"'catalog.add-stock-to-location' | translate\">\r\n            <select [(ngModel)]=\"selectedStockLocationId\">\r\n                <option *ngFor=\"let location of stockLocations\" [value]=\"location.id\">\r\n                    {{ location.name }}\r\n                </option>\r\n            </select>\r\n        </vdr-form-field>\r\n    </div>\r\n\r\n    <div class=\"variants-preview\" *ngIf=\"0 < stockLocations.length\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th *ngIf=\"1 < variants.length\">{{ 'common.create' | translate }}</th>\r\n                    <th *ngIf=\"1 < variants.length\">{{ 'catalog.variant' | translate }}</th>\r\n                    <th>{{ 'catalog.sku' | translate }}</th>\r\n                    <th>{{ 'catalog.price' | translate }}</th>\r\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tr\r\n                *ngFor=\"let variant of variants; trackBy: trackByFn\"\r\n                [class.disabled]=\"!variantFormValues[variant.id].value.enabled === false\"\r\n                [formGroup]=\"variantFormValues[variant.id]\"\r\n            >\r\n                <td *ngIf=\"1 < variants.length\">\r\n                    <input type=\"checkbox\" formControlName=\"enabled\" clrCheckbox />\r\n                </td>\r\n                <td *ngIf=\"1 < variants.length\">\r\n                    {{ variant.values.join(' ') }}\r\n                </td>\r\n                <td>\r\n                    <vdr-form-field>\r\n                        <input type=\"text\" formControlName=\"sku\" [placeholder]=\"'catalog.sku' | translate\" />\r\n                    </vdr-form-field>\r\n                </td>\r\n                <td>\r\n                    <vdr-form-field>\r\n                        <vdr-currency-input\r\n                            formControlName=\"price\"\r\n                            [currencyCode]=\"currencyCode\"\r\n                        ></vdr-currency-input>\r\n                    </vdr-form-field>\r\n                </td>\r\n                <td>\r\n                    <vdr-form-field>\r\n                        <input type=\"number\" formControlName=\"stock\" min=\"0\" step=\"1\" />\r\n                    </vdr-form-field>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</ng-container>\r\n", styles: [":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\n"], dependencies: [{ kind: "component", type: i3.ClrAlert, selector: "clr-alert", inputs: ["clrAlertSizeSmall", "clrAlertClosable", "clrAlertAppLevel", "clrCloseButtonAriaLabel", "clrAlertLightweight", "clrAlertType", "clrAlertIcon", "clrAlertClosed"], outputs: ["clrAlertClosedChange"] }, { kind: "component", type: i3.ClrAlertItem, selector: "clr-alert-item" }, { kind: "directive", type: i3.ClrAlertText, selector: ".alert-text" }, { kind: "directive", type: i3.ClrIconCustomTag, selector: "clr-icon" }, { kind: "directive", type: i3.ClrLabel, selector: "label", inputs: ["for"] }, { kind: "directive", type: i3.ClrCheckbox, selector: "[clrCheckbox],[clrToggle]" }, { kind: "directive", type: i3.ClrInput, selector: "[clrInput]" }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i2.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i2.MinValidator, selector: "input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]", inputs: ["min"] }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "component", type: i1.CurrencyInputComponent, selector: "vdr-currency-input", inputs: ["disabled", "readonly", "value", "currencyCode"], outputs: ["valueChange"] }, { kind: "component", type: i1.FormFieldComponent, selector: "vdr-form-field", inputs: ["label", "for", "tooltip", "errors", "readOnlyToggle"], outputs: ["readOnlyToggleChange"] }, { kind: "directive", type: i1.FormFieldControlDirective, selector: "input, textarea, select, vdr-currency-input" }, { kind: "component", type: i5.OptionValueInputComponent, selector: "vdr-option-value-input", inputs: ["groupName", "options", "disabled"], outputs: ["add", "remove", "edit"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i6.TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: GenerateProductVariantsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-generate-product-variants', template: "<div *ngFor=\"let group of optionGroups\" class=\"option-groups\">\r\n    <div class=\"name\">\r\n        <label>{{ 'catalog.option' | translate }}</label>\r\n        <input\r\n            #optionGroupName\r\n            placeholder=\"e.g. Size\"\r\n            clrInput\r\n            [(ngModel)]=\"group.name\"\r\n            name=\"name\"\r\n            required\r\n            (keydown.enter)=\"handleEnter($event, optionValueInputComponent)\"\r\n        />\r\n    </div>\r\n    <div class=\"values\">\r\n        <label>{{ 'catalog.option-values' | translate }}</label>\r\n        <vdr-option-value-input\r\n            #optionValueInputComponent\r\n            [(ngModel)]=\"group.values\"\r\n            (ngModelChange)=\"generateVariants()\"\r\n            (edit)=\"generateVariants()\"\r\n            [groupName]=\"group.name\"\r\n            [disabled]=\"group.name === ''\"\r\n        ></vdr-option-value-input>\r\n    </div>\r\n    <div class=\"remove-group\">\r\n        <button\r\n            class=\"button-small mt-2\"\r\n            [title]=\"'catalog.remove-option' | translate\"\r\n            (click)=\"removeOption(group.name)\"\r\n        >\r\n            <clr-icon shape=\"trash\"></clr-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n<button class=\"button mb-2\" (click)=\"addOption()\">\r\n    <clr-icon shape=\"plus\"></clr-icon>\r\n    {{ 'catalog.add-option' | translate }}\r\n</button>\r\n\r\n<ng-container *ngIf=\"stockLocations$ | async as stockLocations\">\r\n    <clr-alert *ngIf=\"stockLocations.length === 0\" clrAlertType=\"warning\" [clrAlertClosable]=\"false\" class=\"\">\r\n        <clr-alert-item>\r\n            <span class=\"alert-text\">\r\n                {{ 'catalog.no-stock-locations-available-on-current-channel' | translate }}\r\n            </span>\r\n        </clr-alert-item>\r\n    </clr-alert>\r\n\r\n    <div class=\"form-grid mb-2\">\r\n        <vdr-form-field *ngIf=\"stockLocations.length\" [label]=\"'catalog.add-stock-to-location' | translate\">\r\n            <select [(ngModel)]=\"selectedStockLocationId\">\r\n                <option *ngFor=\"let location of stockLocations\" [value]=\"location.id\">\r\n                    {{ location.name }}\r\n                </option>\r\n            </select>\r\n        </vdr-form-field>\r\n    </div>\r\n\r\n    <div class=\"variants-preview\" *ngIf=\"0 < stockLocations.length\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th *ngIf=\"1 < variants.length\">{{ 'common.create' | translate }}</th>\r\n                    <th *ngIf=\"1 < variants.length\">{{ 'catalog.variant' | translate }}</th>\r\n                    <th>{{ 'catalog.sku' | translate }}</th>\r\n                    <th>{{ 'catalog.price' | translate }}</th>\r\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tr\r\n                *ngFor=\"let variant of variants; trackBy: trackByFn\"\r\n                [class.disabled]=\"!variantFormValues[variant.id].value.enabled === false\"\r\n                [formGroup]=\"variantFormValues[variant.id]\"\r\n            >\r\n                <td *ngIf=\"1 < variants.length\">\r\n                    <input type=\"checkbox\" formControlName=\"enabled\" clrCheckbox />\r\n                </td>\r\n                <td *ngIf=\"1 < variants.length\">\r\n                    {{ variant.values.join(' ') }}\r\n                </td>\r\n                <td>\r\n                    <vdr-form-field>\r\n                        <input type=\"text\" formControlName=\"sku\" [placeholder]=\"'catalog.sku' | translate\" />\r\n                    </vdr-form-field>\r\n                </td>\r\n                <td>\r\n                    <vdr-form-field>\r\n                        <vdr-currency-input\r\n                            formControlName=\"price\"\r\n                            [currencyCode]=\"currencyCode\"\r\n                        ></vdr-currency-input>\r\n                    </vdr-form-field>\r\n                </td>\r\n                <td>\r\n                    <vdr-form-field>\r\n                        <input type=\"number\" formControlName=\"stock\" min=\"0\" step=\"1\" />\r\n                    </vdr-form-field>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</ng-container>\r\n", styles: [":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\n"] }]
        }], ctorParameters: () => [{ type: i1.DataService }, { type: i2.FormBuilder }], propDecorators: { variantsChange: [{
                type: Output
            }], groupNameInputs: [{
                type: ViewChildren,
                args: ['optionGroupName', { read: ElementRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,