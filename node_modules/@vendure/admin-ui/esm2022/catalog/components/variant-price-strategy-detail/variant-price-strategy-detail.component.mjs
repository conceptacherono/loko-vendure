import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@vendure/admin-ui/core";
import * as i3 from "@ngx-translate/core";
export class VariantPriceStrategyDetailComponent {
    calculatedPriceDiffersFromInputPrice() {
        const defaultPrice = this.variant.prices.find(p => p.currencyCode === this.channelDefaultCurrencyCode) ??
            this.variant.prices[0];
        if (!defaultPrice) {
            return false;
        }
        if (this.channelPriceIncludesTax) {
            return this.variant.priceWithTax !== defaultPrice.price;
        }
        else {
            return this.variant.price !== defaultPrice.price;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: VariantPriceStrategyDetailComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: VariantPriceStrategyDetailComponent, selector: "vdr-variant-price-strategy-detail", inputs: { channelPriceIncludesTax: "channelPriceIncludesTax", variant: "variant", channelDefaultCurrencyCode: "channelDefaultCurrencyCode" }, ngImport: i0, template: "<div *ngIf=\"calculatedPriceDiffersFromInputPrice()\" class=\"price-strategy-detail\">\r\n    <vdr-form-item\r\n        [label]=\"'catalog.calculated-price' | translate\"\r\n        [tooltip]=\"'catalog.calculated-price-tooltip' | translate\"\r\n        for=\"price\"\r\n    >\r\n    </vdr-form-item>\r\n    <div class=\"form-grid mt-2\">\r\n        <vdr-form-item [label]=\"'common.price' | translate\">\r\n            {{ variant.price | localeCurrency : variant.currencyCode }}\r\n        </vdr-form-item>\r\n        <vdr-form-item [label]=\"'common.price-with-tax' | translate\">\r\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\r\n        </vdr-form-item>\r\n    </div>\r\n</div>\r\n", styles: [":host{display:block}.price-strategy-detail{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.FormItemComponent, selector: "vdr-form-item", inputs: ["label", "tooltip"] }, { kind: "pipe", type: i3.TranslatePipe, name: "translate" }, { kind: "pipe", type: i2.LocaleCurrencyPipe, name: "localeCurrency" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: VariantPriceStrategyDetailComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-variant-price-strategy-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div *ngIf=\"calculatedPriceDiffersFromInputPrice()\" class=\"price-strategy-detail\">\r\n    <vdr-form-item\r\n        [label]=\"'catalog.calculated-price' | translate\"\r\n        [tooltip]=\"'catalog.calculated-price-tooltip' | translate\"\r\n        for=\"price\"\r\n    >\r\n    </vdr-form-item>\r\n    <div class=\"form-grid mt-2\">\r\n        <vdr-form-item [label]=\"'common.price' | translate\">\r\n            {{ variant.price | localeCurrency : variant.currencyCode }}\r\n        </vdr-form-item>\r\n        <vdr-form-item [label]=\"'common.price-with-tax' | translate\">\r\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\r\n        </vdr-form-item>\r\n    </div>\r\n</div>\r\n", styles: [":host{display:block}.price-strategy-detail{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}\n"] }]
        }], propDecorators: { channelPriceIncludesTax: [{
                type: Input
            }], variant: [{
                type: Input
            }], channelDefaultCurrencyCode: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFyaWFudC1wcmljZS1zdHJhdGVneS1kZXRhaWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jYXRhbG9nL3NyYy9jb21wb25lbnRzL3ZhcmlhbnQtcHJpY2Utc3RyYXRlZ3ktZGV0YWlsL3ZhcmlhbnQtcHJpY2Utc3RyYXRlZ3ktZGV0YWlsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY2F0YWxvZy9zcmMvY29tcG9uZW50cy92YXJpYW50LXByaWNlLXN0cmF0ZWd5LWRldGFpbC92YXJpYW50LXByaWNlLXN0cmF0ZWd5LWRldGFpbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFZMUUsTUFBTSxPQUFPLG1DQUFtQztJQUs1QyxvQ0FBb0M7UUFDaEMsTUFBTSxZQUFZLEdBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFlBQVksS0FBSyxJQUFJLENBQUMsMEJBQTBCLENBQUM7WUFDakYsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ2hCLE9BQU8sS0FBSyxDQUFDO1FBQ2pCLENBQUM7UUFDRCxJQUFJLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxDQUFDO1lBQy9CLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEtBQUssWUFBWSxDQUFDLEtBQUssQ0FBQztRQUM1RCxDQUFDO2FBQU0sQ0FBQztZQUNKLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEtBQUssWUFBWSxDQUFDLEtBQUssQ0FBQztRQUNyRCxDQUFDO0lBQ0wsQ0FBQzs4R0FqQlEsbUNBQW1DO2tHQUFuQyxtQ0FBbUMsdU5DWmhELGt0QkFnQkE7OzJGREphLG1DQUFtQztrQkFOL0MsU0FBUzsrQkFDSSxtQ0FBbUMsbUJBRzVCLHVCQUF1QixDQUFDLE1BQU07OEJBR3RDLHVCQUF1QjtzQkFBL0IsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csMEJBQTBCO3NCQUFsQyxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICAgIEN1cnJlbmN5Q29kZSxcclxuICAgIFByb2R1Y3RWYXJpYW50RGV0YWlsUXVlcnlQcm9kdWN0VmFyaWFudEZyYWdtZW50RnJhZ21lbnQsXHJcbn0gZnJvbSAnQHZlbmR1cmUvYWRtaW4tdWkvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAndmRyLXZhcmlhbnQtcHJpY2Utc3RyYXRlZ3ktZGV0YWlsJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi92YXJpYW50LXByaWNlLXN0cmF0ZWd5LWRldGFpbC5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi92YXJpYW50LXByaWNlLXN0cmF0ZWd5LWRldGFpbC5jb21wb25lbnQuc2NzcyddLFxyXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBWYXJpYW50UHJpY2VTdHJhdGVneURldGFpbENvbXBvbmVudCB7XHJcbiAgICBASW5wdXQoKSBjaGFubmVsUHJpY2VJbmNsdWRlc1RheDogYm9vbGVhbjtcclxuICAgIEBJbnB1dCgpIHZhcmlhbnQ6IFByb2R1Y3RWYXJpYW50RGV0YWlsUXVlcnlQcm9kdWN0VmFyaWFudEZyYWdtZW50RnJhZ21lbnQ7XHJcbiAgICBASW5wdXQoKSBjaGFubmVsRGVmYXVsdEN1cnJlbmN5Q29kZTogQ3VycmVuY3lDb2RlO1xyXG5cclxuICAgIGNhbGN1bGF0ZWRQcmljZURpZmZlcnNGcm9tSW5wdXRQcmljZSgpOiBib29sZWFuIHtcclxuICAgICAgICBjb25zdCBkZWZhdWx0UHJpY2UgPVxyXG4gICAgICAgICAgICB0aGlzLnZhcmlhbnQucHJpY2VzLmZpbmQocCA9PiBwLmN1cnJlbmN5Q29kZSA9PT0gdGhpcy5jaGFubmVsRGVmYXVsdEN1cnJlbmN5Q29kZSkgPz9cclxuICAgICAgICAgICAgdGhpcy52YXJpYW50LnByaWNlc1swXTtcclxuICAgICAgICBpZiAoIWRlZmF1bHRQcmljZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmNoYW5uZWxQcmljZUluY2x1ZGVzVGF4KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnZhcmlhbnQucHJpY2VXaXRoVGF4ICE9PSBkZWZhdWx0UHJpY2UucHJpY2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmFyaWFudC5wcmljZSAhPT0gZGVmYXVsdFByaWNlLnByaWNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCI8ZGl2ICpuZ0lmPVwiY2FsY3VsYXRlZFByaWNlRGlmZmVyc0Zyb21JbnB1dFByaWNlKClcIiBjbGFzcz1cInByaWNlLXN0cmF0ZWd5LWRldGFpbFwiPlxyXG4gICAgPHZkci1mb3JtLWl0ZW1cclxuICAgICAgICBbbGFiZWxdPVwiJ2NhdGFsb2cuY2FsY3VsYXRlZC1wcmljZScgfCB0cmFuc2xhdGVcIlxyXG4gICAgICAgIFt0b29sdGlwXT1cIidjYXRhbG9nLmNhbGN1bGF0ZWQtcHJpY2UtdG9vbHRpcCcgfCB0cmFuc2xhdGVcIlxyXG4gICAgICAgIGZvcj1cInByaWNlXCJcclxuICAgID5cclxuICAgIDwvdmRyLWZvcm0taXRlbT5cclxuICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyaWQgbXQtMlwiPlxyXG4gICAgICAgIDx2ZHItZm9ybS1pdGVtIFtsYWJlbF09XCInY29tbW9uLnByaWNlJyB8IHRyYW5zbGF0ZVwiPlxyXG4gICAgICAgICAgICB7eyB2YXJpYW50LnByaWNlIHwgbG9jYWxlQ3VycmVuY3kgOiB2YXJpYW50LmN1cnJlbmN5Q29kZSB9fVxyXG4gICAgICAgIDwvdmRyLWZvcm0taXRlbT5cclxuICAgICAgICA8dmRyLWZvcm0taXRlbSBbbGFiZWxdPVwiJ2NvbW1vbi5wcmljZS13aXRoLXRheCcgfCB0cmFuc2xhdGVcIj5cclxuICAgICAgICAgICAge3sgdmFyaWFudC5wcmljZVdpdGhUYXggfCBsb2NhbGVDdXJyZW5jeSA6IHZhcmlhbnQuY3VycmVuY3lDb2RlIH19XHJcbiAgICAgICAgPC92ZHItZm9ybS1pdGVtPlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PlxyXG4iXX0=