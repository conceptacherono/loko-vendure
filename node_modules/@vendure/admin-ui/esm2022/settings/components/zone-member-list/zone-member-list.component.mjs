import { ChangeDetectionStrategy, Component, ContentChild, EventEmitter, Input, Output, } from '@angular/core';
import { FormControl } from '@angular/forms';
import { GetZoneMembersDocument, SelectionManager, } from '@vendure/admin-ui/core';
import { BehaviorSubject, combineLatest, merge, of, Subject, switchMap } from 'rxjs';
import { map, startWith, take, takeUntil } from 'rxjs/operators';
import { ZoneMemberControlsDirective } from './zone-member-controls.directive';
import { ZoneMemberListHeaderDirective } from './zone-member-list-header.directive';
import * as i0 from "@angular/core";
import * as i1 from "@vendure/admin-ui/core";
import * as i2 from "@clr/angular";
import * as i3 from "@angular/common";
import * as i4 from "@angular/router";
import * as i5 from "@ngx-translate/core";
export class ZoneMemberListComponent {
    constructor(dataService) {
        this.dataService = dataService;
        this.selectedMemberIds = [];
        this.selectionChange = new EventEmitter();
        this.filterTermControl = new FormControl('');
        this.currentPage = 1;
        this.itemsPerPage = 10;
        this.selectionManager = new SelectionManager({
            multiSelect: true,
            itemsAreEqual: (a, b) => a.id === b.id,
            additiveMode: true,
        });
        this.membersInput$ = new Subject();
        this.activeZoneInput$ = new BehaviorSubject(undefined);
        this.destroy$ = new Subject();
        this.refresh$ = new Subject();
    }
    ngOnInit() {
        const activeZoneMembers$ = merge(this.activeZoneInput$, this.refresh$).pipe(switchMap(activeZone => this.activeZone
            ? this.dataService
                .query(GetZoneMembersDocument, { zoneId: this.activeZone.id })
                .mapSingle(({ zone }) => zone?.members ?? [])
            : of([])));
        this.members$ = merge(activeZoneMembers$, this.membersInput$);
        this.members$.pipe(take(1)).subscribe(members => {
            this.selectionManager.setCurrentItems(members?.filter(m => this.selectedMemberIds.includes(m.id)) ?? []);
        });
        this.selectionManager.selectionChanges$.pipe(takeUntil(this.destroy$)).subscribe(selection => {
            this.selectionChange.emit(selection.map(s => s.id));
        });
        this.filteredMembers$ = combineLatest(this.members$, this.filterTermControl.valueChanges.pipe(startWith(''))).pipe(map(([members, filterTerm]) => {
            if (filterTerm) {
                const term = filterTerm?.toLocaleLowerCase() ?? '';
                return members.filter(m => m.name.toLocaleLowerCase().includes(term) ||
                    m.code.toLocaleLowerCase().includes(term));
            }
            else {
                return members;
            }
        }));
        this.totalItems$ = this.filteredMembers$.pipe(map(members => members.length));
    }
    ngOnChanges(changes) {
        if ('members' in changes) {
            this.membersInput$.next(this.members ?? []);
        }
        if ('activeZone' in changes) {
            this.activeZoneInput$.next(this.activeZone);
        }
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    refresh() {
        this.refresh$.next();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ZoneMemberListComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: ZoneMemberListComponent, selector: "vdr-zone-member-list", inputs: { locationId: "locationId", members: "members", selectedMemberIds: "selectedMemberIds", activeZone: "activeZone" }, outputs: { selectionChange: "selectionChange" }, queries: [{ propertyName: "headerTemplate", first: true, predicate: ZoneMemberListHeaderDirective, descendants: true }, { propertyName: "controlsTemplate", first: true, predicate: ZoneMemberControlsDirective, descendants: true }], usesOnChanges: true, ngImport: i0, template: "<vdr-data-table-2\r\n    [id]=\"locationId\"\r\n    [items]=\"filteredMembers$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage\"\r\n    [currentPage]=\"currentPage\"\r\n    (itemsPerPageChange)=\"itemsPerPage = $event\"\r\n    (pageChange)=\"currentPage = $event\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        [locationId]=\"locationId\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    ></vdr-bulk-action-menu>\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"filterTermControl\"\r\n        [searchTermPlaceholder]=\"'common.search-by-name' | translate\"\r\n    ></vdr-dt2-search>\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.created-at' | translate\" id=\"created-at\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.updated-at' | translate\" id=\"updated-at\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" id=\"name\" [optional]=\"false\">\r\n        <ng-template let-member=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['/settings/countries', member.id]\"\r\n                ><span> {{ member.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\" id=\"code\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.code }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.enabled' | translate\" id=\"enabled\">\r\n        <ng-template let-member=\"item\">\r\n            <vdr-chip  *ngIf=\"member.enabled\" colorType=\"success\">{{ 'common.enabled' | translate }}</vdr-chip>\r\n            <vdr-chip  *ngIf=\"!member.enabled\" colorType=\"warning\">{{ 'common.disabled' | translate }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n</vdr-data-table-2>\r\n", styles: [".members-header{background-color:var(--color-component-bg-100);position:sticky;top:0;padding:6px;z-index:5;border-bottom:1px solid var(--color-component-border-200)}.members-header .header-title-row{display:flex;justify-content:space-between;align-items:center}.members-header .clr-input{width:100%}\n"], dependencies: [{ kind: "directive", type: i2.ClrIconCustomTag, selector: "clr-icon" }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: i1.ChipComponent, selector: "vdr-chip", inputs: ["icon", "invert", "colorFrom", "colorType"], outputs: ["iconClick"] }, { kind: "component", type: i1.BulkActionMenuComponent, selector: "vdr-bulk-action-menu", inputs: ["locationId", "selectionManager", "hostComponent"] }, { kind: "component", type: i1.DataTable2Component, selector: "vdr-data-table-2", inputs: ["id", "items", "itemsPerPage", "currentPage", "totalItems", "emptyStateLabel", "filters", "activeIndex"], outputs: ["pageChange", "itemsPerPageChange", "visibleColumnsChange"] }, { kind: "component", type: i1.DataTable2ColumnComponent, selector: "vdr-dt2-column", inputs: ["id", "expand", "heading", "align", "sort", "optional", "hiddenByDefault", "orderable"], exportAs: ["row"] }, { kind: "component", type: i1.DataTable2SearchComponent, selector: "vdr-dt2-search", inputs: ["searchTermControl", "searchTermPlaceholder"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i5.TranslatePipe, name: "translate" }, { kind: "pipe", type: i1.LocaleDatePipe, name: "localeDate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ZoneMemberListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-zone-member-list', changeDetection: ChangeDetectionStrategy.OnPush, template: "<vdr-data-table-2\r\n    [id]=\"locationId\"\r\n    [items]=\"filteredMembers$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage\"\r\n    [currentPage]=\"currentPage\"\r\n    (itemsPerPageChange)=\"itemsPerPage = $event\"\r\n    (pageChange)=\"currentPage = $event\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        [locationId]=\"locationId\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    ></vdr-bulk-action-menu>\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"filterTermControl\"\r\n        [searchTermPlaceholder]=\"'common.search-by-name' | translate\"\r\n    ></vdr-dt2-search>\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.created-at' | translate\" id=\"created-at\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.updated-at' | translate\" id=\"updated-at\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" id=\"name\" [optional]=\"false\">\r\n        <ng-template let-member=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['/settings/countries', member.id]\"\r\n                ><span> {{ member.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\" id=\"code\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.code }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.enabled' | translate\" id=\"enabled\">\r\n        <ng-template let-member=\"item\">\r\n            <vdr-chip  *ngIf=\"member.enabled\" colorType=\"success\">{{ 'common.enabled' | translate }}</vdr-chip>\r\n            <vdr-chip  *ngIf=\"!member.enabled\" colorType=\"warning\">{{ 'common.disabled' | translate }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n</vdr-data-table-2>\r\n", styles: [".members-header{background-color:var(--color-component-bg-100);position:sticky;top:0;padding:6px;z-index:5;border-bottom:1px solid var(--color-component-border-200)}.members-header .header-title-row{display:flex;justify-content:space-between;align-items:center}.members-header .clr-input{width:100%}\n"] }]
        }], ctorParameters: () => [{ type: i1.DataService }], propDecorators: { locationId: [{
                type: Input
            }], members: [{
                type: Input
            }], selectedMemberIds: [{
                type: Input
            }], activeZone: [{
                type: Input
            }], selectionChange: [{
                type: Output
            }], headerTemplate: [{
                type: ContentChild,
                args: [ZoneMemberListHeaderDirective]
            }], controlsTemplate: [{
                type: ContentChild,
                args: [ZoneMemberControlsDirective]
            }] } });
//# sourceMappingURL=data:application/json;base64,