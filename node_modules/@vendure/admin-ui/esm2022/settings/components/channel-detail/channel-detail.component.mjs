import { ChangeDetectionStrategy, Component } from '@angular/core';
import { Validators } from '@angular/forms';
import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';
import { CHANNEL_FRAGMENT, getCustomFieldsDefaults, Permission, TypedBaseDetailComponent, } from '@vendure/admin-ui/core';
import { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';
import { gql } from 'apollo-angular';
import { map, mergeMap, take, takeUntil } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@vendure/admin-ui/core";
import * as i2 from "@angular/forms";
import * as i3 from "@clr/angular";
import * as i4 from "@angular/common";
import * as i5 from "@ngx-translate/core";
export const GET_CHANNEL_DETAIL = gql `
    query GetChannelDetail($id: ID!) {
        channel(id: $id) {
            ...Channel
        }
    }
    ${CHANNEL_FRAGMENT}
`;
export class ChannelDetailComponent extends TypedBaseDetailComponent {
    constructor(serverConfigService, changeDetector, dataService, formBuilder, notificationService) {
        super();
        this.serverConfigService = serverConfigService;
        this.changeDetector = changeDetector;
        this.dataService = dataService;
        this.formBuilder = formBuilder;
        this.notificationService = notificationService;
        this.DEFAULT_CHANNEL_CODE = DEFAULT_CHANNEL_CODE;
        this.customFields = this.getCustomFieldConfig('Channel');
        this.detailForm = this.formBuilder.group({
            code: ['', Validators.required],
            token: ['', Validators.required],
            pricesIncludeTax: [false],
            availableLanguageCodes: [[]],
            availableCurrencyCodes: [[]],
            defaultCurrencyCode: ['', Validators.required],
            defaultShippingZoneId: ['', Validators.required],
            defaultLanguageCode: [undefined, Validators.required],
            defaultTaxZoneId: ['', Validators.required],
            sellerId: ['', Validators.required],
            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),
        });
        this.updatePermission = [Permission.SuperAdmin, Permission.UpdateChannel, Permission.CreateChannel];
    }
    ngOnInit() {
        this.init();
        // TODO: make this lazy-loaded autocomplete
        this.sellers$ = this.dataService.settings.getSellerList().mapSingle(data => data.sellers.items);
        this.availableLanguageCodes$ = this.serverConfigService.getAvailableLanguages();
        this.detailForm.controls.availableCurrencyCodes.valueChanges
            .pipe(takeUntil(this.destroy$))
            .subscribe(value => {
            if (value) {
                const defaultCurrencyCode = this.detailForm.controls.defaultCurrencyCode.value;
                if (defaultCurrencyCode && !value.includes(defaultCurrencyCode)) {
                    this.detailForm.controls.defaultCurrencyCode.setValue(value[0]);
                }
            }
        });
        this.detailForm.controls.availableLanguageCodes.valueChanges
            .pipe(takeUntil(this.destroy$))
            .subscribe(value => {
            if (value) {
                const defaultLanguageCode = this.detailForm.controls.defaultLanguageCode.value;
                if (defaultLanguageCode && !value.includes(defaultLanguageCode)) {
                    this.detailForm.controls.defaultLanguageCode.setValue(value[0]);
                }
            }
        });
    }
    ngOnDestroy() {
        this.destroy();
    }
    saveButtonEnabled() {
        return this.detailForm.dirty && this.detailForm.valid;
    }
    create() {
        if (!this.detailForm.dirty) {
            return;
        }
        const { code, token, defaultLanguageCode, pricesIncludeTax, defaultCurrencyCode, defaultShippingZoneId, defaultTaxZoneId, customFields, sellerId, } = this.detailForm.value;
        if (!code ||
            !token ||
            !defaultLanguageCode ||
            !defaultCurrencyCode ||
            !defaultShippingZoneId ||
            !defaultTaxZoneId) {
            return;
        }
        const input = {
            code,
            token,
            defaultLanguageCode,
            pricesIncludeTax: !!pricesIncludeTax,
            defaultCurrencyCode,
            defaultShippingZoneId,
            defaultTaxZoneId,
            customFields,
            sellerId,
        };
        this.dataService.settings
            .createChannel(input)
            .pipe(mergeMap(({ createChannel }) => this.dataService.auth.currentUser().single$.pipe(map(({ me }) => ({
            me,
            createChannel,
        })))), mergeMap(({ me, createChannel }) => 
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        this.dataService.client.updateUserChannels(me.channels).pipe(map(() => createChannel))))
            .subscribe(data => {
            switch (data.__typename) {
                case 'Channel':
                    this.notificationService.success(_('common.notify-create-success'), {
                        entity: 'Channel',
                    });
                    this.detailForm.markAsPristine();
                    this.changeDetector.markForCheck();
                    this.router.navigate(['../', data.id], { relativeTo: this.route });
                    break;
                case 'LanguageNotAvailableError':
                    this.notificationService.error(data.message);
                    break;
            }
        });
    }
    save() {
        if (!this.detailForm.dirty) {
            return;
        }
        const formValue = this.detailForm.value;
        this.entity$
            .pipe(take(1), mergeMap(channel => {
            const input = {
                id: channel.id,
                code: formValue.code,
                token: formValue.token,
                pricesIncludeTax: formValue.pricesIncludeTax,
                availableLanguageCodes: formValue.availableLanguageCodes,
                availableCurrencyCodes: formValue.availableCurrencyCodes,
                defaultCurrencyCode: formValue.defaultCurrencyCode,
                defaultShippingZoneId: formValue.defaultShippingZoneId,
                defaultLanguageCode: formValue.defaultLanguageCode,
                defaultTaxZoneId: formValue.defaultTaxZoneId,
                customFields: formValue.customFields,
                sellerId: formValue.sellerId,
            };
            return this.dataService.settings.updateChannel(input);
        }))
            .subscribe(({ updateChannel }) => {
            switch (updateChannel.__typename) {
                case 'Channel':
                    this.notificationService.success(_('common.notify-update-success'), {
                        entity: 'Channel',
                    });
                    this.detailForm.markAsPristine();
                    this.changeDetector.markForCheck();
                    break;
                case 'LanguageNotAvailableError':
                    this.notificationService.error(updateChannel.message);
            }
        });
    }
    /**
     * Update the form values when the entity changes.
     */
    setFormValues(entity, languageCode) {
        this.detailForm.patchValue({
            code: entity.code,
            token: entity.token || this.generateToken(),
            pricesIncludeTax: entity.pricesIncludeTax,
            availableLanguageCodes: entity.availableLanguageCodes,
            availableCurrencyCodes: entity.availableCurrencyCodes,
            defaultCurrencyCode: entity.defaultCurrencyCode,
            defaultShippingZoneId: entity.defaultShippingZone?.id ?? '',
            defaultLanguageCode: entity.defaultLanguageCode,
            defaultTaxZoneId: entity.defaultTaxZone?.id ?? '',
            sellerId: entity.seller?.id ?? '',
        });
        if (this.customFields.length) {
            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);
        }
        if (entity.code === DEFAULT_CHANNEL_CODE) {
            const codeControl = this.detailForm.get('code');
            if (codeControl) {
                codeControl.disable();
            }
        }
    }
    generateToken() {
        return Array.from(crypto.getRandomValues(new Uint8Array(10)))
            .map(b => b.toString(16).padStart(2, '0'))
            .join('');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ChannelDetailComponent, deps: [{ token: i1.ServerConfigService }, { token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: ChannelDetailComponent, selector: "vdr-channel-detail", usesInheritance: true, ngImport: i0, template: "<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left></vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"channel-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"!saveButtonEnabled()\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    *vdrIfPermissions=\"['SuperAdmin', 'UpdateChannel']\"\r\n                    [disabled]=\"!saveButtonEnabled()\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"channel-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field\r\n                        class=\"form-grid-span\"\r\n                        *ngIf=\"entity?.code !== DEFAULT_CHANNEL_CODE\"\r\n                        [label]=\"'common.code' | translate\"\r\n                        for=\"code\"\r\n                    >\r\n                        <input\r\n                            id=\"code\"\r\n                            type=\"text\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"code\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-item\r\n                        class=\"form-grid-span\"\r\n                        *ngIf=\"entity?.code === DEFAULT_CHANNEL_CODE\"\r\n                        [label]=\"'common.code' | translate\"\r\n                    >\r\n                        {{ entity?.code | channelCodeToLabel | translate }}\r\n                    </vdr-form-item>\r\n                    <vdr-form-field [label]=\"'settings.channel-token' | translate\" for=\"token\">\r\n                        <input\r\n                            id=\"token\"\r\n                            type=\"text\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"token\"\r\n                        />\r\n                    </vdr-form-field>\r\n\r\n                    <vdr-form-field [label]=\"'common.seller' | translate\" for=\"sellerId\">\r\n                        <select\r\n                            name=\"sellerId\"\r\n                            formControlName=\"sellerId\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                            <option selected value style=\"display: none\"></option>\r\n                            <option *ngFor=\"let seller of sellers$ | async\" [value]=\"seller.id\">\r\n                                {{ seller.name }}\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'common.available-languages' | translate\"\r\n                        for=\"availableLanguageCodes\"\r\n                    >\r\n                        <vdr-language-code-selector\r\n                            formControlName=\"availableLanguageCodes\"\r\n                            [languageCodes]=\"availableLanguageCodes$ | async\"\r\n                        ></vdr-language-code-selector>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'common.available-currencies' | translate\"\r\n                        for=\"availableCurrencyCodes\"\r\n                    >\r\n                        <vdr-currency-code-selector\r\n                            formControlName=\"availableCurrencyCodes\"\r\n                        ></vdr-currency-code-selector>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'settings.defaults' | translate\">\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.default-language' | translate\" for=\"defaultLanguage\">\r\n                        <select\r\n                            name=\"defaultLanguageCode\"\r\n                            formControlName=\"defaultLanguageCode\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                            <option\r\n                                *ngFor=\"let languageCode of detailForm.value.availableLanguageCodes\"\r\n                                [value]=\"languageCode\"\r\n                            >\r\n                                {{ languageCode | localeLanguageName }} ({{ languageCode | uppercase }})\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'settings.default-currency' | translate\" for=\"defaultCurrency\">\r\n                        <select\r\n                            name=\"defaultCurrencyCode\"\r\n                            formControlName=\"defaultCurrencyCode\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                            <option\r\n                                *ngFor=\"let code of detailForm.value.availableCurrencyCodes\"\r\n                                [value]=\"code\"\r\n                            >\r\n                                {{ code | localeCurrencyName }}\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                    <div>\r\n                        <vdr-form-field\r\n                            [label]=\"'settings.default-tax-zone' | translate\"\r\n                            for=\"defaultTaxZoneId\"\r\n                        >\r\n                            <vdr-zone-selector\r\n                                formControlName=\"defaultTaxZoneId\"\r\n                                [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                            ></vdr-zone-selector>\r\n                        </vdr-form-field>\r\n                        <clr-alert\r\n                            *ngIf=\"detailForm.value.code && !detailForm.value.defaultTaxZoneId\"\r\n                            clrAlertType=\"danger\"\r\n                            [clrAlertClosable]=\"false\"\r\n                        >\r\n                            <clr-alert-item>\r\n                                <span class=\"alert-text\">\r\n                                    {{ 'error.no-default-tax-zone-set' | translate }}\r\n                                </span>\r\n                            </clr-alert-item>\r\n                        </clr-alert>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <vdr-form-field\r\n                            [label]=\"'settings.default-shipping-zone' | translate\"\r\n                            for=\"defaultShippingZoneId\"\r\n                        >\r\n                            <vdr-zone-selector\r\n                                name=\"defaultShippingZoneId\"\r\n                                formControlName=\"defaultShippingZoneId\"\r\n                                [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                            ></vdr-zone-selector>\r\n                        </vdr-form-field>\r\n                        <clr-alert\r\n                            *ngIf=\"detailForm.value.code && !detailForm.value.defaultShippingZoneId\"\r\n                            clrAlertType=\"danger\"\r\n                            [clrAlertClosable]=\"false\"\r\n                        >\r\n                            <clr-alert-item>\r\n                                <span class=\"alert-text\">\r\n                                    {{ 'error.no-default-shipping-zone-set' | translate }}\r\n                                </span>\r\n                            </clr-alert-item>\r\n                        </clr-alert>\r\n                    </div>\r\n                    <vdr-form-field\r\n                        [label]=\"'settings.prices-include-tax' | translate\"\r\n                        for=\"pricesIncludeTax\"\r\n                    >\r\n                        <clr-toggle-wrapper>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                clrToggle\r\n                                id=\"pricesIncludeTax\"\r\n                                formControlName=\"pricesIncludeTax\"\r\n                                [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                            />\r\n                        </clr-toggle-wrapper>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Channel\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"channel-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n", styles: ["clr-alert{max-width:30rem;margin-bottom:12px}\n"], dependencies: [{ kind: "component", type: i3.ClrAlert, selector: "clr-alert", inputs: ["clrAlertSizeSmall", "clrAlertClosable", "clrAlertAppLevel", "clrCloseButtonAriaLabel", "clrAlertLightweight", "clrAlertType", "clrAlertIcon", "clrAlertClosed"], outputs: ["clrAlertClosedChange"] }, { kind: "component", type: i3.ClrAlertItem, selector: "clr-alert-item" }, { kind: "directive", type: i3.ClrAlertText, selector: ".alert-text" }, { kind: "directive", type: i3.ClrCheckbox, selector: "[clrCheckbox],[clrToggle]" }, { kind: "component", type: i3.ClrCheckboxWrapper, selector: "clr-checkbox-wrapper,clr-toggle-wrapper" }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i2.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i2.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { kind: "component", type: i1.ActionBarComponent, selector: "vdr-action-bar" }, { kind: "component", type: i1.ActionBarLeftComponent, selector: "vdr-ab-left", inputs: ["grow"] }, { kind: "component", type: i1.ActionBarRightComponent, selector: "vdr-ab-right", inputs: ["grow"] }, { kind: "component", type: i1.ActionBarDropdownMenuComponent, selector: "vdr-action-bar-dropdown-menu", inputs: ["alwaysShow"] }, { kind: "component", type: i1.FormFieldComponent, selector: "vdr-form-field", inputs: ["label", "for", "tooltip", "errors", "readOnlyToggle"], outputs: ["readOnlyToggleChange"] }, { kind: "directive", type: i1.FormFieldControlDirective, selector: "input, textarea, select, vdr-currency-input" }, { kind: "component", type: i1.FormItemComponent, selector: "vdr-form-item", inputs: ["label", "tooltip"] }, { kind: "directive", type: i1.IfPermissionsDirective, selector: "[vdrIfPermissions]", inputs: ["vdrIfPermissions", "vdrIfPermissionsElse"] }, { kind: "component", type: i1.ActionBarItemsComponent, selector: "vdr-action-bar-items" }, { kind: "directive", type: i1.DisabledDirective, selector: "[vdrDisabled]", inputs: ["vdrDisabled"] }, { kind: "component", type: i1.TabbedCustomFieldsComponent, selector: "vdr-tabbed-custom-fields", inputs: ["entityName", "customFields", "customFieldsFormGroup", "readonly", "compact", "showLabel"] }, { kind: "component", type: i1.CustomDetailComponentHostComponent, selector: "vdr-custom-detail-component-host", inputs: ["locationId", "entity$", "detailForm"] }, { kind: "component", type: i1.PageBlockComponent, selector: "vdr-page-block" }, { kind: "component", type: i1.PageEntityInfoComponent, selector: "vdr-page-entity-info", inputs: ["entity"] }, { kind: "component", type: i1.PageDetailLayoutComponent, selector: "vdr-page-detail-layout" }, { kind: "component", type: i1.PageDetailSidebarComponent, selector: "vdr-page-detail-sidebar" }, { kind: "component", type: i1.CardComponent, selector: "vdr-card", inputs: ["title", "paddingX"] }, { kind: "component", type: i1.ZoneSelectorComponent, selector: "vdr-zone-selector", inputs: ["readonly", "transformControlValueAccessorValue"], outputs: ["selectedValuesChange"] }, { kind: "component", type: i1.CurrencyCodeSelectorComponent, selector: "vdr-currency-code-selector" }, { kind: "component", type: i1.LanguageCodeSelectorComponent, selector: "vdr-language-code-selector", inputs: ["languageCodes"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i4.UpperCasePipe, name: "uppercase" }, { kind: "pipe", type: i5.TranslatePipe, name: "translate" }, { kind: "pipe", type: i1.LocaleCurrencyNamePipe, name: "localeCurrencyName" }, { kind: "pipe", type: i1.HasPermissionPipe, name: "hasPermission" }, { kind: "pipe", type: i1.ChannelLabelPipe, name: "channelCodeToLabel" }, { kind: "pipe", type: i1.LocaleLanguageNamePipe, name: "localeLanguageName" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ChannelDetailComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-channel-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: "<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left></vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"channel-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"!saveButtonEnabled()\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    *vdrIfPermissions=\"['SuperAdmin', 'UpdateChannel']\"\r\n                    [disabled]=\"!saveButtonEnabled()\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"channel-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field\r\n                        class=\"form-grid-span\"\r\n                        *ngIf=\"entity?.code !== DEFAULT_CHANNEL_CODE\"\r\n                        [label]=\"'common.code' | translate\"\r\n                        for=\"code\"\r\n                    >\r\n                        <input\r\n                            id=\"code\"\r\n                            type=\"text\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"code\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-item\r\n                        class=\"form-grid-span\"\r\n                        *ngIf=\"entity?.code === DEFAULT_CHANNEL_CODE\"\r\n                        [label]=\"'common.code' | translate\"\r\n                    >\r\n                        {{ entity?.code | channelCodeToLabel | translate }}\r\n                    </vdr-form-item>\r\n                    <vdr-form-field [label]=\"'settings.channel-token' | translate\" for=\"token\">\r\n                        <input\r\n                            id=\"token\"\r\n                            type=\"text\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"token\"\r\n                        />\r\n                    </vdr-form-field>\r\n\r\n                    <vdr-form-field [label]=\"'common.seller' | translate\" for=\"sellerId\">\r\n                        <select\r\n                            name=\"sellerId\"\r\n                            formControlName=\"sellerId\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                            <option selected value style=\"display: none\"></option>\r\n                            <option *ngFor=\"let seller of sellers$ | async\" [value]=\"seller.id\">\r\n                                {{ seller.name }}\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'common.available-languages' | translate\"\r\n                        for=\"availableLanguageCodes\"\r\n                    >\r\n                        <vdr-language-code-selector\r\n                            formControlName=\"availableLanguageCodes\"\r\n                            [languageCodes]=\"availableLanguageCodes$ | async\"\r\n                        ></vdr-language-code-selector>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'common.available-currencies' | translate\"\r\n                        for=\"availableCurrencyCodes\"\r\n                    >\r\n                        <vdr-currency-code-selector\r\n                            formControlName=\"availableCurrencyCodes\"\r\n                        ></vdr-currency-code-selector>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'settings.defaults' | translate\">\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.default-language' | translate\" for=\"defaultLanguage\">\r\n                        <select\r\n                            name=\"defaultLanguageCode\"\r\n                            formControlName=\"defaultLanguageCode\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                            <option\r\n                                *ngFor=\"let languageCode of detailForm.value.availableLanguageCodes\"\r\n                                [value]=\"languageCode\"\r\n                            >\r\n                                {{ languageCode | localeLanguageName }} ({{ languageCode | uppercase }})\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'settings.default-currency' | translate\" for=\"defaultCurrency\">\r\n                        <select\r\n                            name=\"defaultCurrencyCode\"\r\n                            formControlName=\"defaultCurrencyCode\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                            <option\r\n                                *ngFor=\"let code of detailForm.value.availableCurrencyCodes\"\r\n                                [value]=\"code\"\r\n                            >\r\n                                {{ code | localeCurrencyName }}\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                    <div>\r\n                        <vdr-form-field\r\n                            [label]=\"'settings.default-tax-zone' | translate\"\r\n                            for=\"defaultTaxZoneId\"\r\n                        >\r\n                            <vdr-zone-selector\r\n                                formControlName=\"defaultTaxZoneId\"\r\n                                [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                            ></vdr-zone-selector>\r\n                        </vdr-form-field>\r\n                        <clr-alert\r\n                            *ngIf=\"detailForm.value.code && !detailForm.value.defaultTaxZoneId\"\r\n                            clrAlertType=\"danger\"\r\n                            [clrAlertClosable]=\"false\"\r\n                        >\r\n                            <clr-alert-item>\r\n                                <span class=\"alert-text\">\r\n                                    {{ 'error.no-default-tax-zone-set' | translate }}\r\n                                </span>\r\n                            </clr-alert-item>\r\n                        </clr-alert>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <vdr-form-field\r\n                            [label]=\"'settings.default-shipping-zone' | translate\"\r\n                            for=\"defaultShippingZoneId\"\r\n                        >\r\n                            <vdr-zone-selector\r\n                                name=\"defaultShippingZoneId\"\r\n                                formControlName=\"defaultShippingZoneId\"\r\n                                [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                            ></vdr-zone-selector>\r\n                        </vdr-form-field>\r\n                        <clr-alert\r\n                            *ngIf=\"detailForm.value.code && !detailForm.value.defaultShippingZoneId\"\r\n                            clrAlertType=\"danger\"\r\n                            [clrAlertClosable]=\"false\"\r\n                        >\r\n                            <clr-alert-item>\r\n                                <span class=\"alert-text\">\r\n                                    {{ 'error.no-default-shipping-zone-set' | translate }}\r\n                                </span>\r\n                            </clr-alert-item>\r\n                        </clr-alert>\r\n                    </div>\r\n                    <vdr-form-field\r\n                        [label]=\"'settings.prices-include-tax' | translate\"\r\n                        for=\"pricesIncludeTax\"\r\n                    >\r\n                        <clr-toggle-wrapper>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                clrToggle\r\n                                id=\"pricesIncludeTax\"\r\n                                formControlName=\"pricesIncludeTax\"\r\n                                [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                            />\r\n                        </clr-toggle-wrapper>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Channel\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"channel-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n", styles: ["clr-alert{max-width:30rem;margin-bottom:12px}\n"] }]
        }], ctorParameters: () => [{ type: i1.ServerConfigService }, { type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }] });
//# sourceMappingURL=data:application/json;base64,