import { useContext, useEffect, useState } from 'react';
import { HostedComponentContext } from '../directives/react-component-host.directive';
/**
 * @description
 * Provides the data available to React-based CustomDetailComponents.
 *
 * @example
 * ```ts
 * import { Card, useDetailComponentData } from '\@vendure/admin-ui/react';
 * import React from 'react';
 *
 * export function CustomDetailComponent(props: any) {
 *     const { entity, detailForm } = useDetailComponentData();
 *     const updateName = () => {
 *         detailForm.get('name')?.setValue('New name');
 *         detailForm.markAsDirty();
 *     };
 *     return (
 *         <Card title={'Custom Detail Component'}>
 *             <button className="button" onClick={updateName}>
 *                 Update name
 *             </button>
 *             <pre>{JSON.stringify(entity, null, 2)}</pre>
 *         </Card>
 *     );
 * }
 * ```
 *
 * @docsCategory react-hooks
 */
export function useDetailComponentData() {
    const context = useContext(HostedComponentContext);
    if (!context.detailForm || !context.entity$) {
        throw new Error(`The useDetailComponentData hook can only be used within a CustomDetailComponent`);
    }
    const [entity, setEntity] = useState(null);
    useEffect(() => {
        const subscription = context.entity$.subscribe(value => {
            setEntity(value);
        });
        return () => subscription.unsubscribe();
    }, []);
    return {
        entity,
        detailForm: context.detailForm,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWRldGFpbC1jb21wb25lbnQtZGF0YS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvcmVhY3Qvc3JjL3JlYWN0LWhvb2tzL3VzZS1kZXRhaWwtY29tcG9uZW50LWRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBRXhELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBR3RGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0EyQkc7QUFDSCxNQUFNLFVBQVUsc0JBQXNCO0lBQ2xDLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FDdEIsc0JBQXNCLENBQ3lDLENBQUM7SUFFcEUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDMUMsTUFBTSxJQUFJLEtBQUssQ0FBQyxpRkFBaUYsQ0FBQyxDQUFDO0lBQ3ZHLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxHQUFHLFFBQVEsQ0FBVyxJQUFJLENBQUMsQ0FBQztJQUVyRCxTQUFTLENBQUMsR0FBRyxFQUFFO1FBQ1gsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDbkQsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDNUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRVAsT0FBTztRQUNILE1BQU07UUFDTixVQUFVLEVBQUUsT0FBTyxDQUFDLFVBQVU7S0FDakMsQ0FBQztBQUNOLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDb250ZXh0LCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBSZWFjdEN1c3RvbURldGFpbENvbXBvbmVudENvbnRleHQgfSBmcm9tICcuLi9jb21wb25lbnRzL3JlYWN0LWN1c3RvbS1kZXRhaWwuY29tcG9uZW50JztcclxuaW1wb3J0IHsgSG9zdGVkQ29tcG9uZW50Q29udGV4dCB9IGZyb20gJy4uL2RpcmVjdGl2ZXMvcmVhY3QtY29tcG9uZW50LWhvc3QuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgSG9zdGVkUmVhY3RDb21wb25lbnRDb250ZXh0IH0gZnJvbSAnLi4vdHlwZXMnO1xyXG5cclxuLyoqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBQcm92aWRlcyB0aGUgZGF0YSBhdmFpbGFibGUgdG8gUmVhY3QtYmFzZWQgQ3VzdG9tRGV0YWlsQ29tcG9uZW50cy5cclxuICpcclxuICogQGV4YW1wbGVcclxuICogYGBgdHNcclxuICogaW1wb3J0IHsgQ2FyZCwgdXNlRGV0YWlsQ29tcG9uZW50RGF0YSB9IGZyb20gJ1xcQHZlbmR1cmUvYWRtaW4tdWkvcmVhY3QnO1xyXG4gKiBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG4gKlxyXG4gKiBleHBvcnQgZnVuY3Rpb24gQ3VzdG9tRGV0YWlsQ29tcG9uZW50KHByb3BzOiBhbnkpIHtcclxuICogICAgIGNvbnN0IHsgZW50aXR5LCBkZXRhaWxGb3JtIH0gPSB1c2VEZXRhaWxDb21wb25lbnREYXRhKCk7XHJcbiAqICAgICBjb25zdCB1cGRhdGVOYW1lID0gKCkgPT4ge1xyXG4gKiAgICAgICAgIGRldGFpbEZvcm0uZ2V0KCduYW1lJyk/LnNldFZhbHVlKCdOZXcgbmFtZScpO1xyXG4gKiAgICAgICAgIGRldGFpbEZvcm0ubWFya0FzRGlydHkoKTtcclxuICogICAgIH07XHJcbiAqICAgICByZXR1cm4gKFxyXG4gKiAgICAgICAgIDxDYXJkIHRpdGxlPXsnQ3VzdG9tIERldGFpbCBDb21wb25lbnQnfT5cclxuICogICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidXR0b25cIiBvbkNsaWNrPXt1cGRhdGVOYW1lfT5cclxuICogICAgICAgICAgICAgICAgIFVwZGF0ZSBuYW1lXHJcbiAqICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gKiAgICAgICAgICAgICA8cHJlPntKU09OLnN0cmluZ2lmeShlbnRpdHksIG51bGwsIDIpfTwvcHJlPlxyXG4gKiAgICAgICAgIDwvQ2FyZD5cclxuICogICAgICk7XHJcbiAqIH1cclxuICogYGBgXHJcbiAqXHJcbiAqIEBkb2NzQ2F0ZWdvcnkgcmVhY3QtaG9va3NcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VEZXRhaWxDb21wb25lbnREYXRhPFQgPSBhbnk+KCkge1xyXG4gICAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoXHJcbiAgICAgICAgSG9zdGVkQ29tcG9uZW50Q29udGV4dCxcclxuICAgICkgYXMgSG9zdGVkUmVhY3RDb21wb25lbnRDb250ZXh0PFJlYWN0Q3VzdG9tRGV0YWlsQ29tcG9uZW50Q29udGV4dD47XHJcblxyXG4gICAgaWYgKCFjb250ZXh0LmRldGFpbEZvcm0gfHwgIWNvbnRleHQuZW50aXR5JCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlIHVzZURldGFpbENvbXBvbmVudERhdGEgaG9vayBjYW4gb25seSBiZSB1c2VkIHdpdGhpbiBhIEN1c3RvbURldGFpbENvbXBvbmVudGApO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IFtlbnRpdHksIHNldEVudGl0eV0gPSB1c2VTdGF0ZTxUIHwgbnVsbD4obnVsbCk7XHJcblxyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBjb250ZXh0LmVudGl0eSQuc3Vic2NyaWJlKHZhbHVlID0+IHtcclxuICAgICAgICAgICAgc2V0RW50aXR5KHZhbHVlKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gKCkgPT4gc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XHJcbiAgICB9LCBbXSk7XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBlbnRpdHksXHJcbiAgICAgICAgZGV0YWlsRm9ybTogY29udGV4dC5kZXRhaWxGb3JtLFxyXG4gICAgfTtcclxufVxyXG4iXX0=