import { APP_INITIALIZER } from '@angular/core';
import { DataTableCustomComponentService, } from '@vendure/admin-ui/core';
import { REACT_CUSTOM_COLUMN_COMPONENT_OPTIONS, ReactCustomColumnComponent, } from './components/react-custom-column.component';
/**
 * @description
 * Registers a React component to be rendered in a data table in the given location.
 * The component will receive the `rowItem` prop which is the data object for the row,
 * e.g. the `Product` object if used in the `product-list` table.
 *
 * @example
 * ```ts title="components/SlugWithLink.tsx"
 * import { ReactDataTableComponentProps } from '\@vendure/admin-ui/react';
 * import React from 'react';
 *
 * export function SlugWithLink({ rowItem }: ReactDataTableComponentProps<{ slug: string }>) {
 *     return (
 *         <a href={`https://example.com/products/${rowItem.slug}`} target="_blank">
 *             {rowItem.slug}
 *         </a>
 *     );
 * }
 * ```
 *
 * ```ts title="providers.ts"
 * import { registerReactDataTableComponent } from '\@vendure/admin-ui/react';
 * import { SlugWithLink } from './components/SlugWithLink';
 *
 * export default [
 *     registerReactDataTableComponent({
 *         component: SlugWithLink,
 *         tableId: 'product-list',
 *         columnId: 'slug',
 *         props: {
 *           foo: 'bar',
 *         },
 *     }),
 * ];
 * ```
 *
 * @docsCategory react-extensions
 */
export function registerReactDataTableComponent(config) {
    return {
        provide: APP_INITIALIZER,
        multi: true,
        useFactory: (dataTableCustomComponentService) => () => {
            dataTableCustomComponentService.registerCustomComponent({
                ...config,
                component: ReactCustomColumnComponent,
                providers: [
                    {
                        provide: REACT_CUSTOM_COLUMN_COMPONENT_OPTIONS,
                        useValue: {
                            component: config.component,
                            props: config.props,
                        },
                    },
                ],
            });
        },
        deps: [DataTableCustomComponentService],
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0ZXItcmVhY3QtZGF0YS10YWJsZS1jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL3JlYWN0L3NyYy9yZWdpc3Rlci1yZWFjdC1kYXRhLXRhYmxlLWNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hELE9BQU8sRUFFSCwrQkFBK0IsR0FFbEMsTUFBTSx3QkFBd0IsQ0FBQztBQUVoQyxPQUFPLEVBQ0gscUNBQXFDLEVBQ3JDLDBCQUEwQixHQUM3QixNQUFNLDRDQUE0QyxDQUFDO0FBeUNwRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXFDRztBQUNILE1BQU0sVUFBVSwrQkFBK0IsQ0FBQyxNQUFxQztJQUNqRixPQUFPO1FBQ0gsT0FBTyxFQUFFLGVBQWU7UUFDeEIsS0FBSyxFQUFFLElBQUk7UUFDWCxVQUFVLEVBQUUsQ0FBQywrQkFBZ0UsRUFBRSxFQUFFLENBQUMsR0FBRyxFQUFFO1lBQ25GLCtCQUErQixDQUFDLHVCQUF1QixDQUFDO2dCQUNwRCxHQUFHLE1BQU07Z0JBQ1QsU0FBUyxFQUFFLDBCQUEwQjtnQkFDckMsU0FBUyxFQUFFO29CQUNQO3dCQUNJLE9BQU8sRUFBRSxxQ0FBcUM7d0JBQzlDLFFBQVEsRUFBRTs0QkFDTixTQUFTLEVBQUUsTUFBTSxDQUFDLFNBQVM7NEJBQzNCLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSzt5QkFDdEI7cUJBQ0o7aUJBQ0o7YUFDSixDQUFDLENBQUM7UUFDUCxDQUFDO1FBQ0QsSUFBSSxFQUFFLENBQUMsK0JBQStCLENBQUM7S0FDMUMsQ0FBQztBQUNOLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBUFBfSU5JVElBTElaRVIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICAgIERhdGFUYWJsZUNvbHVtbklkLFxyXG4gICAgRGF0YVRhYmxlQ3VzdG9tQ29tcG9uZW50U2VydmljZSxcclxuICAgIERhdGFUYWJsZUxvY2F0aW9uSWQsXHJcbn0gZnJvbSAnQHZlbmR1cmUvYWRtaW4tdWkvY29yZSc7XHJcbmltcG9ydCB7IEVsZW1lbnRUeXBlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQge1xyXG4gICAgUkVBQ1RfQ1VTVE9NX0NPTFVNTl9DT01QT05FTlRfT1BUSU9OUyxcclxuICAgIFJlYWN0Q3VzdG9tQ29sdW1uQ29tcG9uZW50LFxyXG59IGZyb20gJy4vY29tcG9uZW50cy9yZWFjdC1jdXN0b20tY29sdW1uLmNvbXBvbmVudCc7XHJcblxyXG4vKipcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIENvbmZpZ3VyZXMgYSB7QGxpbmsgQ3VzdG9tRGV0YWlsQ29tcG9uZW50fSB0byBiZSBwbGFjZWQgaW4gdGhlIGdpdmVuIGxvY2F0aW9uLlxyXG4gKlxyXG4gKiBAZG9jc0NhdGVnb3J5IHJlYWN0LWV4dGVuc2lvbnNcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVhY3REYXRhVGFibGVDb21wb25lbnRDb25maWcge1xyXG4gICAgLyoqXHJcbiAgICAgKiBAZGVzY3JpcHRpb25cclxuICAgICAqIFRoZSBsb2NhdGlvbiBpbiB0aGUgVUkgd2hlcmUgdGhlIGN1c3RvbSBjb21wb25lbnQgc2hvdWxkIGJlIHBsYWNlZC5cclxuICAgICAqL1xyXG4gICAgdGFibGVJZDogRGF0YVRhYmxlTG9jYXRpb25JZDtcclxuICAgIC8qKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKiBUaGUgY29sdW1uIGluIHRoZSB0YWJsZSB3aGVyZSB0aGUgY3VzdG9tIGNvbXBvbmVudCBzaG91bGQgYmUgcGxhY2VkLlxyXG4gICAgICovXHJcbiAgICBjb2x1bW5JZDogRGF0YVRhYmxlQ29sdW1uSWQ7XHJcbiAgICAvKipcclxuICAgICAqIEBkZXNjcmlwdGlvblxyXG4gICAgICogVGhlIGNvbXBvbmVudCB0byByZW5kZXIgaW4gdGhlIHRhYmxlIGNlbGwuIFRoaXMgY29tcG9uZW50IHdpbGwgcmVjZWl2ZSB0aGUgYHJvd0l0ZW1gIHByb3BcclxuICAgICAqIHdoaWNoIGlzIHRoZSBkYXRhIG9iamVjdCBmb3IgdGhlIHJvdywgZS5nLiB0aGUgYFByb2R1Y3RgIG9iamVjdCBpZiB1c2VkIGluIHRoZSBgcHJvZHVjdC1saXN0YCB0YWJsZS5cclxuICAgICAqL1xyXG4gICAgY29tcG9uZW50OiBFbGVtZW50VHlwZTtcclxuICAgIC8qKlxyXG4gICAgICogQGRlc2NyaXB0aW9uXHJcbiAgICAgKiBPcHRpb25hbCBwcm9wcyB0byBwYXNzIHRvIHRoZSBSZWFjdCBjb21wb25lbnQuXHJcbiAgICAgKi9cclxuICAgIHByb3BzPzogUmVjb3JkPHN0cmluZywgYW55PjtcclxufVxyXG5cclxuLyoqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBUaGUgcHJvcHMgdGhhdCB3aWxsIGJlIHBhc3NlZCB0byB0aGUgUmVhY3QgY29tcG9uZW50IHJlZ2lzdGVyZWQgdmlhIHtAbGluayByZWdpc3RlclJlYWN0RGF0YVRhYmxlQ29tcG9uZW50fS5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVhY3REYXRhVGFibGVDb21wb25lbnRQcm9wczxUID0gYW55PiB7XHJcbiAgICByb3dJdGVtOiBUO1xyXG4gICAgW3Byb3A6IHN0cmluZ106IGFueTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBSZWdpc3RlcnMgYSBSZWFjdCBjb21wb25lbnQgdG8gYmUgcmVuZGVyZWQgaW4gYSBkYXRhIHRhYmxlIGluIHRoZSBnaXZlbiBsb2NhdGlvbi5cclxuICogVGhlIGNvbXBvbmVudCB3aWxsIHJlY2VpdmUgdGhlIGByb3dJdGVtYCBwcm9wIHdoaWNoIGlzIHRoZSBkYXRhIG9iamVjdCBmb3IgdGhlIHJvdyxcclxuICogZS5nLiB0aGUgYFByb2R1Y3RgIG9iamVjdCBpZiB1c2VkIGluIHRoZSBgcHJvZHVjdC1saXN0YCB0YWJsZS5cclxuICpcclxuICogQGV4YW1wbGVcclxuICogYGBgdHMgdGl0bGU9XCJjb21wb25lbnRzL1NsdWdXaXRoTGluay50c3hcIlxyXG4gKiBpbXBvcnQgeyBSZWFjdERhdGFUYWJsZUNvbXBvbmVudFByb3BzIH0gZnJvbSAnXFxAdmVuZHVyZS9hZG1pbi11aS9yZWFjdCc7XHJcbiAqIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbiAqXHJcbiAqIGV4cG9ydCBmdW5jdGlvbiBTbHVnV2l0aExpbmsoeyByb3dJdGVtIH06IFJlYWN0RGF0YVRhYmxlQ29tcG9uZW50UHJvcHM8eyBzbHVnOiBzdHJpbmcgfT4pIHtcclxuICogICAgIHJldHVybiAoXHJcbiAqICAgICAgICAgPGEgaHJlZj17YGh0dHBzOi8vZXhhbXBsZS5jb20vcHJvZHVjdHMvJHtyb3dJdGVtLnNsdWd9YH0gdGFyZ2V0PVwiX2JsYW5rXCI+XHJcbiAqICAgICAgICAgICAgIHtyb3dJdGVtLnNsdWd9XHJcbiAqICAgICAgICAgPC9hPlxyXG4gKiAgICAgKTtcclxuICogfVxyXG4gKiBgYGBcclxuICpcclxuICogYGBgdHMgdGl0bGU9XCJwcm92aWRlcnMudHNcIlxyXG4gKiBpbXBvcnQgeyByZWdpc3RlclJlYWN0RGF0YVRhYmxlQ29tcG9uZW50IH0gZnJvbSAnXFxAdmVuZHVyZS9hZG1pbi11aS9yZWFjdCc7XHJcbiAqIGltcG9ydCB7IFNsdWdXaXRoTGluayB9IGZyb20gJy4vY29tcG9uZW50cy9TbHVnV2l0aExpbmsnO1xyXG4gKlxyXG4gKiBleHBvcnQgZGVmYXVsdCBbXHJcbiAqICAgICByZWdpc3RlclJlYWN0RGF0YVRhYmxlQ29tcG9uZW50KHtcclxuICogICAgICAgICBjb21wb25lbnQ6IFNsdWdXaXRoTGluayxcclxuICogICAgICAgICB0YWJsZUlkOiAncHJvZHVjdC1saXN0JyxcclxuICogICAgICAgICBjb2x1bW5JZDogJ3NsdWcnLFxyXG4gKiAgICAgICAgIHByb3BzOiB7XHJcbiAqICAgICAgICAgICBmb286ICdiYXInLFxyXG4gKiAgICAgICAgIH0sXHJcbiAqICAgICB9KSxcclxuICogXTtcclxuICogYGBgXHJcbiAqXHJcbiAqIEBkb2NzQ2F0ZWdvcnkgcmVhY3QtZXh0ZW5zaW9uc1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyUmVhY3REYXRhVGFibGVDb21wb25lbnQoY29uZmlnOiBSZWFjdERhdGFUYWJsZUNvbXBvbmVudENvbmZpZykge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBwcm92aWRlOiBBUFBfSU5JVElBTElaRVIsXHJcbiAgICAgICAgbXVsdGk6IHRydWUsXHJcbiAgICAgICAgdXNlRmFjdG9yeTogKGRhdGFUYWJsZUN1c3RvbUNvbXBvbmVudFNlcnZpY2U6IERhdGFUYWJsZUN1c3RvbUNvbXBvbmVudFNlcnZpY2UpID0+ICgpID0+IHtcclxuICAgICAgICAgICAgZGF0YVRhYmxlQ3VzdG9tQ29tcG9uZW50U2VydmljZS5yZWdpc3RlckN1c3RvbUNvbXBvbmVudCh7XHJcbiAgICAgICAgICAgICAgICAuLi5jb25maWcsXHJcbiAgICAgICAgICAgICAgICBjb21wb25lbnQ6IFJlYWN0Q3VzdG9tQ29sdW1uQ29tcG9uZW50LFxyXG4gICAgICAgICAgICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm92aWRlOiBSRUFDVF9DVVNUT01fQ09MVU1OX0NPTVBPTkVOVF9PUFRJT05TLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB1c2VWYWx1ZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50OiBjb25maWcuY29tcG9uZW50LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHM6IGNvbmZpZy5wcm9wcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZXBzOiBbRGF0YVRhYmxlQ3VzdG9tQ29tcG9uZW50U2VydmljZV0sXHJcbiAgICB9O1xyXG59XHJcbiJdfQ==