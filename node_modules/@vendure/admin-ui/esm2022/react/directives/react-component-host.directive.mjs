import { Directive, Input, Optional } from '@angular/core';
import { createContext, createElement } from 'react';
import { createRoot } from 'react-dom/client';
import * as i0 from "@angular/core";
import * as i1 from "@vendure/admin-ui/core";
export const HostedComponentContext = createContext(null);
/**
 * Based on https://netbasal.com/using-react-in-angular-applications-1bb907ecac91
 */
export class ReactComponentHostDirective {
    constructor(host, injector, pageMetadataService) {
        this.host = host;
        this.injector = injector;
        this.pageMetadataService = pageMetadataService;
        this.context = {};
        this.root = null;
    }
    async ngOnChanges() {
        const Comp = this.reactComponent;
        if (!this.root) {
            this.root = createRoot(this.host.nativeElement);
        }
        this.root.render(createElement(HostedComponentContext.Provider, {
            value: {
                ...this.props,
                ...this.context,
                injector: this.injector,
                pageMetadataService: this.pageMetadataService,
            },
        }, createElement(Comp, this.props)));
    }
    ngOnDestroy() {
        this.root?.unmount();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ReactComponentHostDirective, deps: [{ token: i0.ElementRef }, { token: i0.Injector }, { token: i1.PageMetadataService, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.2.4", type: ReactComponentHostDirective, isStandalone: true, selector: "[vdrReactComponentHost]", inputs: { reactComponent: ["vdrReactComponentHost", "reactComponent"], props: "props", context: "context" }, usesOnChanges: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ReactComponentHostDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[vdrReactComponentHost]',
                    standalone: true,
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Injector }, { type: i1.PageMetadataService, decorators: [{
                    type: Optional
                }] }], propDecorators: { reactComponent: [{
                type: Input,
                args: ['vdrReactComponentHost']
            }], props: [{
                type: Input
            }], context: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhY3QtY29tcG9uZW50LWhvc3QuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9yZWFjdC9zcmMvZGlyZWN0aXZlcy9yZWFjdC1jb21wb25lbnQtaG9zdC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBd0IsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRixPQUFPLEVBQWtCLGFBQWEsRUFBRSxhQUFhLEVBQWUsTUFBTSxPQUFPLENBQUM7QUFDbEYsT0FBTyxFQUFFLFVBQVUsRUFBUSxNQUFNLGtCQUFrQixDQUFDOzs7QUFHcEQsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsYUFBYSxDQUFxQyxJQUFJLENBQUMsQ0FBQztBQUU5Rjs7R0FFRztBQUtILE1BQU0sT0FBTywyQkFBMkI7SUFPcEMsWUFDWSxJQUFnQixFQUNoQixRQUFrQixFQUNOLG1CQUF5QztRQUZyRCxTQUFJLEdBQUosSUFBSSxDQUFZO1FBQ2hCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFDTix3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXNCO1FBUHhELFlBQU8sR0FBd0IsRUFBRSxDQUFDO1FBRW5DLFNBQUksR0FBZ0IsSUFBSSxDQUFDO0lBTTlCLENBQUM7SUFFSixLQUFLLENBQUMsV0FBVztRQUNiLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7UUFFakMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNiLElBQUksQ0FBQyxJQUFJLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDcEQsQ0FBQztRQUVELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUNaLGFBQWEsQ0FDVCxzQkFBc0IsQ0FBQyxRQUFRLEVBQy9CO1lBQ0ksS0FBSyxFQUFFO2dCQUNILEdBQUcsSUFBSSxDQUFDLEtBQUs7Z0JBQ2IsR0FBRyxJQUFJLENBQUMsT0FBTztnQkFDZixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7Z0JBQ3ZCLG1CQUFtQixFQUFFLElBQUksQ0FBQyxtQkFBbUI7YUFDaEQ7U0FDSixFQUNELGFBQWEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUNsQyxDQUNKLENBQUM7SUFDTixDQUFDO0lBRUQsV0FBVztRQUNQLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUM7SUFDekIsQ0FBQzs4R0F0Q1EsMkJBQTJCO2tHQUEzQiwyQkFBMkI7OzJGQUEzQiwyQkFBMkI7a0JBSnZDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLHlCQUF5QjtvQkFDbkMsVUFBVSxFQUFFLElBQUk7aUJBQ25COzswQkFXUSxRQUFRO3lDQVRtQixjQUFjO3NCQUE3QyxLQUFLO3VCQUFDLHVCQUF1QjtnQkFDckIsS0FBSztzQkFBYixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5qZWN0b3IsIElucHV0LCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQYWdlTWV0YWRhdGFTZXJ2aWNlIH0gZnJvbSAnQHZlbmR1cmUvYWRtaW4tdWkvY29yZSc7XHJcbmltcG9ydCB7IENvbXBvbmVudFByb3BzLCBjcmVhdGVDb250ZXh0LCBjcmVhdGVFbGVtZW50LCBFbGVtZW50VHlwZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgY3JlYXRlUm9vdCwgUm9vdCB9IGZyb20gJ3JlYWN0LWRvbS9jbGllbnQnO1xyXG5pbXBvcnQgeyBIb3N0ZWRSZWFjdENvbXBvbmVudENvbnRleHQgfSBmcm9tICcuLi90eXBlcyc7XHJcblxyXG5leHBvcnQgY29uc3QgSG9zdGVkQ29tcG9uZW50Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8SG9zdGVkUmVhY3RDb21wb25lbnRDb250ZXh0IHwgbnVsbD4obnVsbCk7XHJcblxyXG4vKipcclxuICogQmFzZWQgb24gaHR0cHM6Ly9uZXRiYXNhbC5jb20vdXNpbmctcmVhY3QtaW4tYW5ndWxhci1hcHBsaWNhdGlvbnMtMWJiOTA3ZWNhYzkxXHJcbiAqL1xyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnW3ZkclJlYWN0Q29tcG9uZW50SG9zdF0nLFxyXG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcclxufSlcclxuZXhwb3J0IGNsYXNzIFJlYWN0Q29tcG9uZW50SG9zdERpcmVjdGl2ZTxDb21wIGV4dGVuZHMgRWxlbWVudFR5cGU+IHtcclxuICAgIEBJbnB1dCgndmRyUmVhY3RDb21wb25lbnRIb3N0JykgcmVhY3RDb21wb25lbnQ6IENvbXA7XHJcbiAgICBASW5wdXQoKSBwcm9wczogQ29tcG9uZW50UHJvcHM8Q29tcD47XHJcbiAgICBASW5wdXQoKSBjb250ZXh0OiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0ge307XHJcblxyXG4gICAgcHJpdmF0ZSByb290OiBSb290IHwgbnVsbCA9IG51bGw7XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJpdmF0ZSBob3N0OiBFbGVtZW50UmVmLFxyXG4gICAgICAgIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLFxyXG4gICAgICAgIEBPcHRpb25hbCgpIHByaXZhdGUgcGFnZU1ldGFkYXRhU2VydmljZT86IFBhZ2VNZXRhZGF0YVNlcnZpY2UsXHJcbiAgICApIHt9XHJcblxyXG4gICAgYXN5bmMgbmdPbkNoYW5nZXMoKSB7XHJcbiAgICAgICAgY29uc3QgQ29tcCA9IHRoaXMucmVhY3RDb21wb25lbnQ7XHJcblxyXG4gICAgICAgIGlmICghdGhpcy5yb290KSB7XHJcbiAgICAgICAgICAgIHRoaXMucm9vdCA9IGNyZWF0ZVJvb3QodGhpcy5ob3N0Lm5hdGl2ZUVsZW1lbnQpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5yb290LnJlbmRlcihcclxuICAgICAgICAgICAgY3JlYXRlRWxlbWVudChcclxuICAgICAgICAgICAgICAgIEhvc3RlZENvbXBvbmVudENvbnRleHQuUHJvdmlkZXIsXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLi4udGhpcy5wcm9wcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgLi4udGhpcy5jb250ZXh0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmplY3RvcjogdGhpcy5pbmplY3RvcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGFnZU1ldGFkYXRhU2VydmljZTogdGhpcy5wYWdlTWV0YWRhdGFTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY3JlYXRlRWxlbWVudChDb21wLCB0aGlzLnByb3BzKSxcclxuICAgICAgICAgICAgKSxcclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25EZXN0cm95KCkge1xyXG4gICAgICAgIHRoaXMucm9vdD8udW5tb3VudCgpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==