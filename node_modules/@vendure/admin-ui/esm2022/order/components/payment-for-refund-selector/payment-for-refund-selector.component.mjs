import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@vendure/admin-ui/core";
import * as i4 from "@ngx-translate/core";
export class PaymentForRefundSelectorComponent {
    constructor() {
        this.paymentSelected = new EventEmitter();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: PaymentForRefundSelectorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: PaymentForRefundSelectorComponent, selector: "vdr-payment-for-refund-selector", inputs: { refundablePayments: "refundablePayments", order: "order" }, outputs: { paymentSelected: "paymentSelected" }, ngImport: i0, template: "<vdr-card\r\n        [title]=\"'order.payment' | translate\"\r\n        [class.selected]=\"payment.selected\"\r\n        [class.unselected]=\"!payment.selected\"\r\n        *ngFor=\"let payment of refundablePayments\"\r\n>\r\n    <ng-template vdrCardControls>\r\n        <vdr-select-toggle\r\n                size=\"small\"\r\n                [title]=\"'order.refund-this-payment' | translate\"\r\n                [label]=\"'order.refund-this-payment' | translate\"\r\n                [disabled]=\"refundablePayments.length === 1\"\r\n                [(selected)]=\"payment.selected\"\r\n                (selectedChange)=\"paymentSelected.emit({ payment: payment, selected: $event })\"\r\n        ></vdr-select-toggle>\r\n    </ng-template>\r\n    <div class=\"form-grid\">\r\n        <vdr-labeled-data [label]=\"'order.payment-method' | translate\">\r\n            {{ payment.method }}\r\n        </vdr-labeled-data>\r\n        <vdr-labeled-data [label]=\"'order.transaction-id' | translate\">\r\n            {{ payment.transactionId }}\r\n        </vdr-labeled-data>\r\n        <vdr-labeled-data [label]=\"'order.payment-amount' | translate\">\r\n            {{ payment.amount | localeCurrency : order.currencyCode }}\r\n        </vdr-labeled-data>\r\n        <vdr-labeled-data [label]=\"'order.refundable-amount' | translate\">\r\n            {{ payment.refundableAmount | localeCurrency : order.currencyCode }}\r\n        </vdr-labeled-data>\r\n    </div>\r\n    <vdr-form-field [label]=\"'order.refund-amount' | translate\">\r\n        <vdr-currency-input\r\n                [readonly]=\"!payment.selected\"\r\n                [currencyCode]=\"order.currencyCode\"\r\n                [formControl]=\"payment.amountToRefundControl\"\r\n        ></vdr-currency-input>\r\n    </vdr-form-field>\r\n</vdr-card>", styles: [":host{display:block}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i3.CurrencyInputComponent, selector: "vdr-currency-input", inputs: ["disabled", "readonly", "value", "currencyCode"], outputs: ["valueChange"] }, { kind: "component", type: i3.FormFieldComponent, selector: "vdr-form-field", inputs: ["label", "for", "tooltip", "errors", "readOnlyToggle"], outputs: ["readOnlyToggleChange"] }, { kind: "directive", type: i3.FormFieldControlDirective, selector: "input, textarea, select, vdr-currency-input" }, { kind: "component", type: i3.SelectToggleComponent, selector: "vdr-select-toggle", inputs: ["size", "selected", "hiddenWhenOff", "disabled", "label"], outputs: ["selectedChange"] }, { kind: "component", type: i3.LabeledDataComponent, selector: "vdr-labeled-data", inputs: ["label"] }, { kind: "component", type: i3.CardComponent, selector: "vdr-card", inputs: ["title", "paddingX"] }, { kind: "directive", type: i3.CardControlsDirective, selector: "[vdrCardControls]" }, { kind: "pipe", type: i4.TranslatePipe, name: "translate" }, { kind: "pipe", type: i3.LocaleCurrencyPipe, name: "localeCurrency" }], changeDetection: i0.ChangeDetectionStrategy.Default }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: PaymentForRefundSelectorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-payment-for-refund-selector', changeDetection: ChangeDetectionStrategy.Default, template: "<vdr-card\r\n        [title]=\"'order.payment' | translate\"\r\n        [class.selected]=\"payment.selected\"\r\n        [class.unselected]=\"!payment.selected\"\r\n        *ngFor=\"let payment of refundablePayments\"\r\n>\r\n    <ng-template vdrCardControls>\r\n        <vdr-select-toggle\r\n                size=\"small\"\r\n                [title]=\"'order.refund-this-payment' | translate\"\r\n                [label]=\"'order.refund-this-payment' | translate\"\r\n                [disabled]=\"refundablePayments.length === 1\"\r\n                [(selected)]=\"payment.selected\"\r\n                (selectedChange)=\"paymentSelected.emit({ payment: payment, selected: $event })\"\r\n        ></vdr-select-toggle>\r\n    </ng-template>\r\n    <div class=\"form-grid\">\r\n        <vdr-labeled-data [label]=\"'order.payment-method' | translate\">\r\n            {{ payment.method }}\r\n        </vdr-labeled-data>\r\n        <vdr-labeled-data [label]=\"'order.transaction-id' | translate\">\r\n            {{ payment.transactionId }}\r\n        </vdr-labeled-data>\r\n        <vdr-labeled-data [label]=\"'order.payment-amount' | translate\">\r\n            {{ payment.amount | localeCurrency : order.currencyCode }}\r\n        </vdr-labeled-data>\r\n        <vdr-labeled-data [label]=\"'order.refundable-amount' | translate\">\r\n            {{ payment.refundableAmount | localeCurrency : order.currencyCode }}\r\n        </vdr-labeled-data>\r\n    </div>\r\n    <vdr-form-field [label]=\"'order.refund-amount' | translate\">\r\n        <vdr-currency-input\r\n                [readonly]=\"!payment.selected\"\r\n                [currencyCode]=\"order.currencyCode\"\r\n                [formControl]=\"payment.amountToRefundControl\"\r\n        ></vdr-currency-input>\r\n    </vdr-form-field>\r\n</vdr-card>", styles: [":host{display:block}\n"] }]
        }], propDecorators: { refundablePayments: [{
                type: Input
            }], order: [{
                type: Input
            }], paymentSelected: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC1mb3ItcmVmdW5kLXNlbGVjdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvb3JkZXIvc3JjL2NvbXBvbmVudHMvcGF5bWVudC1mb3ItcmVmdW5kLXNlbGVjdG9yL3BheW1lbnQtZm9yLXJlZnVuZC1zZWxlY3Rvci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL29yZGVyL3NyYy9jb21wb25lbnRzL3BheW1lbnQtZm9yLXJlZnVuZC1zZWxlY3Rvci9wYXltZW50LWZvci1yZWZ1bmQtc2VsZWN0b3IuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBVWhHLE1BQU0sT0FBTyxpQ0FBaUM7SUFOOUM7UUFTYyxvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFxRCxDQUFDO0tBQ3JHOzhHQUpZLGlDQUFpQztrR0FBakMsaUNBQWlDLDhMQ1Y5QyxveERBcUNXOzsyRkQzQkUsaUNBQWlDO2tCQU43QyxTQUFTOytCQUNJLGlDQUFpQyxtQkFHMUIsdUJBQXVCLENBQUMsT0FBTzs4QkFHdkMsa0JBQWtCO3NCQUExQixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDSSxlQUFlO3NCQUF4QixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9yZGVyRGV0YWlsRnJhZ21lbnQgfSBmcm9tICdAdmVuZHVyZS9hZG1pbi11aS9jb3JlJztcclxuaW1wb3J0IHsgUmVmdW5kYWJsZVBheW1lbnQgfSBmcm9tICcuLi8uLi9jb21tb24vZ2V0LXJlZnVuZGFibGUtcGF5bWVudHMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3Zkci1wYXltZW50LWZvci1yZWZ1bmQtc2VsZWN0b3InLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL3BheW1lbnQtZm9yLXJlZnVuZC1zZWxlY3Rvci5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9wYXltZW50LWZvci1yZWZ1bmQtc2VsZWN0b3IuY29tcG9uZW50LnNjc3MnXSxcclxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuRGVmYXVsdCxcclxufSlcclxuZXhwb3J0IGNsYXNzIFBheW1lbnRGb3JSZWZ1bmRTZWxlY3RvckNvbXBvbmVudCB7XHJcbiAgICBASW5wdXQoKSByZWZ1bmRhYmxlUGF5bWVudHM6IFJlZnVuZGFibGVQYXltZW50W107XHJcbiAgICBASW5wdXQoKSBvcmRlcjogT3JkZXJEZXRhaWxGcmFnbWVudDtcclxuICAgIEBPdXRwdXQoKSBwYXltZW50U2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPHsgcGF5bWVudDogUmVmdW5kYWJsZVBheW1lbnQ7IHNlbGVjdGVkOiBib29sZWFuIH0+KCk7XHJcbn1cclxuIiwiPHZkci1jYXJkXHJcbiAgICAgICAgW3RpdGxlXT1cIidvcmRlci5wYXltZW50JyB8IHRyYW5zbGF0ZVwiXHJcbiAgICAgICAgW2NsYXNzLnNlbGVjdGVkXT1cInBheW1lbnQuc2VsZWN0ZWRcIlxyXG4gICAgICAgIFtjbGFzcy51bnNlbGVjdGVkXT1cIiFwYXltZW50LnNlbGVjdGVkXCJcclxuICAgICAgICAqbmdGb3I9XCJsZXQgcGF5bWVudCBvZiByZWZ1bmRhYmxlUGF5bWVudHNcIlxyXG4+XHJcbiAgICA8bmctdGVtcGxhdGUgdmRyQ2FyZENvbnRyb2xzPlxyXG4gICAgICAgIDx2ZHItc2VsZWN0LXRvZ2dsZVxyXG4gICAgICAgICAgICAgICAgc2l6ZT1cInNtYWxsXCJcclxuICAgICAgICAgICAgICAgIFt0aXRsZV09XCInb3JkZXIucmVmdW5kLXRoaXMtcGF5bWVudCcgfCB0cmFuc2xhdGVcIlxyXG4gICAgICAgICAgICAgICAgW2xhYmVsXT1cIidvcmRlci5yZWZ1bmQtdGhpcy1wYXltZW50JyB8IHRyYW5zbGF0ZVwiXHJcbiAgICAgICAgICAgICAgICBbZGlzYWJsZWRdPVwicmVmdW5kYWJsZVBheW1lbnRzLmxlbmd0aCA9PT0gMVwiXHJcbiAgICAgICAgICAgICAgICBbKHNlbGVjdGVkKV09XCJwYXltZW50LnNlbGVjdGVkXCJcclxuICAgICAgICAgICAgICAgIChzZWxlY3RlZENoYW5nZSk9XCJwYXltZW50U2VsZWN0ZWQuZW1pdCh7IHBheW1lbnQ6IHBheW1lbnQsIHNlbGVjdGVkOiAkZXZlbnQgfSlcIlxyXG4gICAgICAgID48L3Zkci1zZWxlY3QtdG9nZ2xlPlxyXG4gICAgPC9uZy10ZW1wbGF0ZT5cclxuICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyaWRcIj5cclxuICAgICAgICA8dmRyLWxhYmVsZWQtZGF0YSBbbGFiZWxdPVwiJ29yZGVyLnBheW1lbnQtbWV0aG9kJyB8IHRyYW5zbGF0ZVwiPlxyXG4gICAgICAgICAgICB7eyBwYXltZW50Lm1ldGhvZCB9fVxyXG4gICAgICAgIDwvdmRyLWxhYmVsZWQtZGF0YT5cclxuICAgICAgICA8dmRyLWxhYmVsZWQtZGF0YSBbbGFiZWxdPVwiJ29yZGVyLnRyYW5zYWN0aW9uLWlkJyB8IHRyYW5zbGF0ZVwiPlxyXG4gICAgICAgICAgICB7eyBwYXltZW50LnRyYW5zYWN0aW9uSWQgfX1cclxuICAgICAgICA8L3Zkci1sYWJlbGVkLWRhdGE+XHJcbiAgICAgICAgPHZkci1sYWJlbGVkLWRhdGEgW2xhYmVsXT1cIidvcmRlci5wYXltZW50LWFtb3VudCcgfCB0cmFuc2xhdGVcIj5cclxuICAgICAgICAgICAge3sgcGF5bWVudC5hbW91bnQgfCBsb2NhbGVDdXJyZW5jeSA6IG9yZGVyLmN1cnJlbmN5Q29kZSB9fVxyXG4gICAgICAgIDwvdmRyLWxhYmVsZWQtZGF0YT5cclxuICAgICAgICA8dmRyLWxhYmVsZWQtZGF0YSBbbGFiZWxdPVwiJ29yZGVyLnJlZnVuZGFibGUtYW1vdW50JyB8IHRyYW5zbGF0ZVwiPlxyXG4gICAgICAgICAgICB7eyBwYXltZW50LnJlZnVuZGFibGVBbW91bnQgfCBsb2NhbGVDdXJyZW5jeSA6IG9yZGVyLmN1cnJlbmN5Q29kZSB9fVxyXG4gICAgICAgIDwvdmRyLWxhYmVsZWQtZGF0YT5cclxuICAgIDwvZGl2PlxyXG4gICAgPHZkci1mb3JtLWZpZWxkIFtsYWJlbF09XCInb3JkZXIucmVmdW5kLWFtb3VudCcgfCB0cmFuc2xhdGVcIj5cclxuICAgICAgICA8dmRyLWN1cnJlbmN5LWlucHV0XHJcbiAgICAgICAgICAgICAgICBbcmVhZG9ubHldPVwiIXBheW1lbnQuc2VsZWN0ZWRcIlxyXG4gICAgICAgICAgICAgICAgW2N1cnJlbmN5Q29kZV09XCJvcmRlci5jdXJyZW5jeUNvZGVcIlxyXG4gICAgICAgICAgICAgICAgW2Zvcm1Db250cm9sXT1cInBheW1lbnQuYW1vdW50VG9SZWZ1bmRDb250cm9sXCJcclxuICAgICAgICA+PC92ZHItY3VycmVuY3ktaW5wdXQ+XHJcbiAgICA8L3Zkci1mb3JtLWZpZWxkPlxyXG48L3Zkci1jYXJkPiJdfQ==