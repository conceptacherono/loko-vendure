import { Component, EventEmitter, inject, Input, Output, } from '@angular/core';
import { SharedModule } from '../../shared/shared.module';
import { ROUTE_COMPONENT_OPTIONS, RouteComponent } from './route.component';
import * as i0 from "@angular/core";
/**
 * @description
 * This component is used internally to allow us to dynamically load a component
 * like with `*ngComponentOutlet`, but with the ability to get a reference to the
 * created ComponentRef. This can then be used to delegate lifecycle events like
 * `canDeactivate` to the loaded component.
 */
export class DynamicComponentLoaderComponent {
    constructor(viewContainer) {
        this.viewContainer = viewContainer;
        this.loaded = new EventEmitter();
    }
    ngOnInit() {
        const componentRef = this.viewContainer.createComponent(this.componentType);
        this.loaded.emit(componentRef);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: DynamicComponentLoaderComponent, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: DynamicComponentLoaderComponent, isStandalone: true, selector: "vdr-dynamic-component-loader", inputs: { componentType: "componentType" }, outputs: { loaded: "loaded" }, ngImport: i0, template: ``, isInline: true, dependencies: [{ kind: "ngmodule", type: SharedModule }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: DynamicComponentLoaderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'vdr-dynamic-component-loader',
                    template: ``,
                    standalone: true,
                    imports: [SharedModule],
                }]
        }], ctorParameters: () => [{ type: i0.ViewContainerRef }], propDecorators: { componentType: [{
                type: Input
            }], loaded: [{
                type: Output
            }] } });
export class AngularRouteComponent {
    constructor() {
        this.component = inject(ROUTE_COMPONENT_OPTIONS).component;
    }
    componentLoaded(componentRef) {
        this.componentRef = componentRef;
    }
    canDeactivate() {
        return this.componentRef?.instance?.canDeactivate?.();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: AngularRouteComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: AngularRouteComponent, isStandalone: true, selector: "vdr-angular-route-component", ngImport: i0, template: `
        <vdr-route-component>
            <vdr-dynamic-component-loader [componentType]="component" (loaded)="componentLoaded($event)" />
        </vdr-route-component>
    `, isInline: true, dependencies: [{ kind: "ngmodule", type: SharedModule }, { kind: "component", type: RouteComponent, selector: "vdr-route-component", inputs: ["locationId", "description"] }, { kind: "component", type: DynamicComponentLoaderComponent, selector: "vdr-dynamic-component-loader", inputs: ["componentType"], outputs: ["loaded"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: AngularRouteComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'vdr-angular-route-component',
                    template: `
        <vdr-route-component>
            <vdr-dynamic-component-loader [componentType]="component" (loaded)="componentLoaded($event)" />
        </vdr-route-component>
    `,
                    standalone: true,
                    imports: [SharedModule, RouteComponent, DynamicComponentLoaderComponent],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1yb3V0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL2V4dGVuc2lvbi9jb21wb25lbnRzL2FuZ3VsYXItcm91dGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxTQUFTLEVBRVQsWUFBWSxFQUNaLE1BQU0sRUFDTixLQUFLLEVBRUwsTUFBTSxHQUVULE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7O0FBRTVFOzs7Ozs7R0FNRztBQU9ILE1BQU0sT0FBTywrQkFBK0I7SUFHeEMsWUFBb0IsYUFBK0I7UUFBL0Isa0JBQWEsR0FBYixhQUFhLENBQWtCO1FBRHpDLFdBQU0sR0FBRyxJQUFJLFlBQVksRUFBcUIsQ0FBQztJQUNILENBQUM7SUFFdkQsUUFBUTtRQUNKLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUM1RSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNuQyxDQUFDOzhHQVJRLCtCQUErQjtrR0FBL0IsK0JBQStCLG1LQUo5QixFQUFFLDJEQUVGLFlBQVk7OzJGQUViLCtCQUErQjtrQkFOM0MsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsOEJBQThCO29CQUN4QyxRQUFRLEVBQUUsRUFBRTtvQkFDWixVQUFVLEVBQUUsSUFBSTtvQkFDaEIsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDO2lCQUMxQjtxRkFFWSxhQUFhO3NCQUFyQixLQUFLO2dCQUNJLE1BQU07c0JBQWYsTUFBTTs7QUFtQlgsTUFBTSxPQUFPLHFCQUFxQjtJQVZsQztRQVdjLGNBQVMsR0FBRyxNQUFNLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxTQUFTLENBQUM7S0FVbkU7SUFQRyxlQUFlLENBQUMsWUFBK0I7UUFDM0MsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7SUFDckMsQ0FBQztJQUVELGFBQWE7UUFDVCxPQUFPLElBQUksQ0FBQyxZQUFZLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBRSxFQUFFLENBQUM7SUFDMUQsQ0FBQzs4R0FWUSxxQkFBcUI7a0dBQXJCLHFCQUFxQix1RkFScEI7Ozs7S0FJVCwyREFFUyxZQUFZLCtCQUFFLGNBQWMsdUdBbkI3QiwrQkFBK0I7OzJGQXFCL0IscUJBQXFCO2tCQVZqQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLFFBQVEsRUFBRTs7OztLQUlUO29CQUNELFVBQVUsRUFBRSxJQUFJO29CQUNoQixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsY0FBYyxFQUFFLCtCQUErQixDQUFDO2lCQUMzRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgICBDb21wb25lbnQsXHJcbiAgICBDb21wb25lbnRSZWYsXHJcbiAgICBFdmVudEVtaXR0ZXIsXHJcbiAgICBpbmplY3QsXHJcbiAgICBJbnB1dCxcclxuICAgIE9uSW5pdCxcclxuICAgIE91dHB1dCxcclxuICAgIFZpZXdDb250YWluZXJSZWYsXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNoYXJlZE1vZHVsZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9zaGFyZWQubW9kdWxlJztcclxuaW1wb3J0IHsgUk9VVEVfQ09NUE9ORU5UX09QVElPTlMsIFJvdXRlQ29tcG9uZW50IH0gZnJvbSAnLi9yb3V0ZS5jb21wb25lbnQnO1xyXG5cclxuLyoqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBUaGlzIGNvbXBvbmVudCBpcyB1c2VkIGludGVybmFsbHkgdG8gYWxsb3cgdXMgdG8gZHluYW1pY2FsbHkgbG9hZCBhIGNvbXBvbmVudFxyXG4gKiBsaWtlIHdpdGggYCpuZ0NvbXBvbmVudE91dGxldGAsIGJ1dCB3aXRoIHRoZSBhYmlsaXR5IHRvIGdldCBhIHJlZmVyZW5jZSB0byB0aGVcclxuICogY3JlYXRlZCBDb21wb25lbnRSZWYuIFRoaXMgY2FuIHRoZW4gYmUgdXNlZCB0byBkZWxlZ2F0ZSBsaWZlY3ljbGUgZXZlbnRzIGxpa2VcclxuICogYGNhbkRlYWN0aXZhdGVgIHRvIHRoZSBsb2FkZWQgY29tcG9uZW50LlxyXG4gKi9cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3Zkci1keW5hbWljLWNvbXBvbmVudC1sb2FkZXInLFxyXG4gICAgdGVtcGxhdGU6IGBgLFxyXG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICAgIGltcG9ydHM6IFtTaGFyZWRNb2R1bGVdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRHluYW1pY0NvbXBvbmVudExvYWRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBASW5wdXQoKSBjb21wb25lbnRUeXBlOiBhbnk7XHJcbiAgICBAT3V0cHV0KCkgbG9hZGVkID0gbmV3IEV2ZW50RW1pdHRlcjxDb21wb25lbnRSZWY8YW55Pj4oKTtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgdmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZikge31cclxuXHJcbiAgICBuZ09uSW5pdCgpIHtcclxuICAgICAgICBjb25zdCBjb21wb25lbnRSZWYgPSB0aGlzLnZpZXdDb250YWluZXIuY3JlYXRlQ29tcG9uZW50KHRoaXMuY29tcG9uZW50VHlwZSk7XHJcbiAgICAgICAgdGhpcy5sb2FkZWQuZW1pdChjb21wb25lbnRSZWYpO1xyXG4gICAgfVxyXG59XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAndmRyLWFuZ3VsYXItcm91dGUtY29tcG9uZW50JyxcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICAgICAgPHZkci1yb3V0ZS1jb21wb25lbnQ+XHJcbiAgICAgICAgICAgIDx2ZHItZHluYW1pYy1jb21wb25lbnQtbG9hZGVyIFtjb21wb25lbnRUeXBlXT1cImNvbXBvbmVudFwiIChsb2FkZWQpPVwiY29tcG9uZW50TG9hZGVkKCRldmVudClcIiAvPlxyXG4gICAgICAgIDwvdmRyLXJvdXRlLWNvbXBvbmVudD5cclxuICAgIGAsXHJcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxyXG4gICAgaW1wb3J0czogW1NoYXJlZE1vZHVsZSwgUm91dGVDb21wb25lbnQsIER5bmFtaWNDb21wb25lbnRMb2FkZXJDb21wb25lbnRdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQW5ndWxhclJvdXRlQ29tcG9uZW50IHtcclxuICAgIHByb3RlY3RlZCBjb21wb25lbnQgPSBpbmplY3QoUk9VVEVfQ09NUE9ORU5UX09QVElPTlMpLmNvbXBvbmVudDtcclxuICAgIHByb3RlY3RlZCBjb21wb25lbnRSZWY6IENvbXBvbmVudFJlZjxhbnk+O1xyXG5cclxuICAgIGNvbXBvbmVudExvYWRlZChjb21wb25lbnRSZWY6IENvbXBvbmVudFJlZjxhbnk+KSB7XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnRSZWYgPSBjb21wb25lbnRSZWY7XHJcbiAgICB9XHJcblxyXG4gICAgY2FuRGVhY3RpdmF0ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb21wb25lbnRSZWY/Lmluc3RhbmNlPy5jYW5EZWFjdGl2YXRlPy4oKTtcclxuICAgIH1cclxufVxyXG4iXX0=