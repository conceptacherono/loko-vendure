import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class ComponentRegistryService {
    constructor() {
        this.inputComponentMap = new Map();
    }
    registerInputComponent(id, component, providers) {
        if (this.inputComponentMap.has(id)) {
            throw new Error(`Cannot register an InputComponent with the id "${id}", as one with that id already exists`);
        }
        this.inputComponentMap.set(id, { type: component, providers: providers || [] });
    }
    getInputComponent(id) {
        return this.inputComponentMap.get(id);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ComponentRegistryService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ComponentRegistryService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ComponentRegistryService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LXJlZ2lzdHJ5LnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3Byb3ZpZGVycy9jb21wb25lbnQtcmVnaXN0cnkvY29tcG9uZW50LXJlZ2lzdHJ5LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBa0IsTUFBTSxlQUFlLENBQUM7O0FBTzNELE1BQU0sT0FBTyx3QkFBd0I7SUFIckM7UUFJWSxzQkFBaUIsR0FBRyxJQUFJLEdBQUcsRUFHaEMsQ0FBQztLQWdCUDtJQWRHLHNCQUFzQixDQUFDLEVBQVUsRUFBRSxTQUF3QyxFQUFFLFNBQXNCO1FBQy9GLElBQUksSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQ2pDLE1BQU0sSUFBSSxLQUFLLENBQ1gsa0RBQWtELEVBQUUsdUNBQXVDLENBQzlGLENBQUM7UUFDTixDQUFDO1FBQ0QsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNwRixDQUFDO0lBRUQsaUJBQWlCLENBQ2IsRUFBVTtRQUVWLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUMxQyxDQUFDOzhHQW5CUSx3QkFBd0I7a0hBQXhCLHdCQUF3QixjQUZyQixNQUFNOzsyRkFFVCx3QkFBd0I7a0JBSHBDLFVBQVU7bUJBQUM7b0JBQ1IsVUFBVSxFQUFFLE1BQU07aUJBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgUHJvdmlkZXIsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IEZvcm1JbnB1dENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2NvbW1vbi9jb21wb25lbnQtcmVnaXN0cnktdHlwZXMnO1xyXG5cclxuQEluamVjdGFibGUoe1xyXG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29tcG9uZW50UmVnaXN0cnlTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgaW5wdXRDb21wb25lbnRNYXAgPSBuZXcgTWFwPFxyXG4gICAgICAgIHN0cmluZyxcclxuICAgICAgICB7IHR5cGU6IFR5cGU8Rm9ybUlucHV0Q29tcG9uZW50PGFueT4+OyBwcm92aWRlcnM6IFByb3ZpZGVyW10gfVxyXG4gICAgPigpO1xyXG5cclxuICAgIHJlZ2lzdGVySW5wdXRDb21wb25lbnQoaWQ6IHN0cmluZywgY29tcG9uZW50OiBUeXBlPEZvcm1JbnB1dENvbXBvbmVudDxhbnk+PiwgcHJvdmlkZXJzPzogUHJvdmlkZXJbXSkge1xyXG4gICAgICAgIGlmICh0aGlzLmlucHV0Q29tcG9uZW50TWFwLmhhcyhpZCkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICAgICAgICAgICAgYENhbm5vdCByZWdpc3RlciBhbiBJbnB1dENvbXBvbmVudCB3aXRoIHRoZSBpZCBcIiR7aWR9XCIsIGFzIG9uZSB3aXRoIHRoYXQgaWQgYWxyZWFkeSBleGlzdHNgLFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmlucHV0Q29tcG9uZW50TWFwLnNldChpZCwgeyB0eXBlOiBjb21wb25lbnQsIHByb3ZpZGVyczogcHJvdmlkZXJzIHx8IFtdIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldElucHV0Q29tcG9uZW50KFxyXG4gICAgICAgIGlkOiBzdHJpbmcsXHJcbiAgICApOiB7IHR5cGU6IFR5cGU8Rm9ybUlucHV0Q29tcG9uZW50PGFueT4+OyBwcm92aWRlcnM6IFByb3ZpZGVyW10gfSB8IHVuZGVmaW5lZCB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaW5wdXRDb21wb25lbnRNYXAuZ2V0KGlkKTtcclxuICAgIH1cclxufVxyXG4iXX0=