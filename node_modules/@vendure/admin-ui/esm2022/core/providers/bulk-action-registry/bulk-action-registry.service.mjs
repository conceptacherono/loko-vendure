import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class BulkActionRegistryService {
    constructor() {
        this.locationBulActionMap = new Map();
    }
    registerBulkAction(bulkAction) {
        if (!this.locationBulActionMap.has(bulkAction.location)) {
            this.locationBulActionMap.set(bulkAction.location, new Set([bulkAction]));
        }
        else {
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            this.locationBulActionMap.get(bulkAction.location).add(bulkAction);
        }
    }
    getBulkActionsForLocation(id) {
        return [...(this.locationBulActionMap.get(id)?.values() ?? [])];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: BulkActionRegistryService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: BulkActionRegistryService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: BulkActionRegistryService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1hY3Rpb24tcmVnaXN0cnkuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvcHJvdmlkZXJzL2J1bGstYWN0aW9uLXJlZ2lzdHJ5L2J1bGstYWN0aW9uLXJlZ2lzdHJ5LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFPM0MsTUFBTSxPQUFPLHlCQUF5QjtJQUh0QztRQUlZLHlCQUFvQixHQUFHLElBQUksR0FBRyxFQUF5QyxDQUFDO0tBY25GO0lBWkcsa0JBQWtCLENBQUMsVUFBc0I7UUFDckMsSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7WUFDdEQsSUFBSSxDQUFDLG9CQUFvQixDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLElBQUksR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlFLENBQUM7YUFBTSxDQUFDO1lBQ0osb0VBQW9FO1lBQ3BFLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBRSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN4RSxDQUFDO0lBQ0wsQ0FBQztJQUVELHlCQUF5QixDQUFDLEVBQXdCO1FBQzlDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3BFLENBQUM7OEdBZFEseUJBQXlCO2tIQUF6Qix5QkFBeUIsY0FGdEIsTUFBTTs7MkZBRVQseUJBQXlCO2tCQUhyQyxVQUFVO21CQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IEJ1bGtBY3Rpb24sIEJ1bGtBY3Rpb25Mb2NhdGlvbklkIH0gZnJvbSAnLi9idWxrLWFjdGlvbi10eXBlcyc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgICBwcm92aWRlZEluOiAncm9vdCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBCdWxrQWN0aW9uUmVnaXN0cnlTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgbG9jYXRpb25CdWxBY3Rpb25NYXAgPSBuZXcgTWFwPEJ1bGtBY3Rpb25Mb2NhdGlvbklkLCBTZXQ8QnVsa0FjdGlvbj4+KCk7XHJcblxyXG4gICAgcmVnaXN0ZXJCdWxrQWN0aW9uKGJ1bGtBY3Rpb246IEJ1bGtBY3Rpb24pIHtcclxuICAgICAgICBpZiAoIXRoaXMubG9jYXRpb25CdWxBY3Rpb25NYXAuaGFzKGJ1bGtBY3Rpb24ubG9jYXRpb24pKSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9jYXRpb25CdWxBY3Rpb25NYXAuc2V0KGJ1bGtBY3Rpb24ubG9jYXRpb24sIG5ldyBTZXQoW2J1bGtBY3Rpb25dKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cclxuICAgICAgICAgICAgdGhpcy5sb2NhdGlvbkJ1bEFjdGlvbk1hcC5nZXQoYnVsa0FjdGlvbi5sb2NhdGlvbikhLmFkZChidWxrQWN0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0QnVsa0FjdGlvbnNGb3JMb2NhdGlvbihpZDogQnVsa0FjdGlvbkxvY2F0aW9uSWQpOiBCdWxrQWN0aW9uW10ge1xyXG4gICAgICAgIHJldHVybiBbLi4uKHRoaXMubG9jYXRpb25CdWxBY3Rpb25NYXAuZ2V0KGlkKT8udmFsdWVzKCkgPz8gW10pXTtcclxuICAgIH1cclxufVxyXG4iXX0=