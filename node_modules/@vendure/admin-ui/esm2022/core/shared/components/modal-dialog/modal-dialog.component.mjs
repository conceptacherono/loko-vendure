import { Component } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "../../../providers/localization/localization.service";
import * as i2 from "@clr/angular";
import * as i3 from "@angular/common";
import * as i4 from "@angular/cdk/bidi";
import * as i5 from "./dialog-component-outlet.component";
/**
 * This component should only be instantiated dynamically by the ModalService. It should not be used
 * directly in templates. See {@link ModalService.fromComponent} method for more detail.
 */
export class ModalDialogComponent {
    /**
     *
     */
    constructor(localizationService) {
        this.localizationService = localizationService;
        this.titleTemplateRef$ = new Subject();
        this.buttonsTemplateRef$ = new Subject();
    }
    ngOnInit() {
        this.direction$ = this.localizationService.direction$;
    }
    /**
     * This callback is invoked when the childComponentType is instantiated in the
     * template by the {@link DialogComponentOutletComponent}.
     * Once we have the instance, we can set the resolveWith function and any
     * locals which were specified in the config.
     */
    onCreate(componentInstance) {
        componentInstance.resolveWith = (result) => {
            this.closeModal(result);
        };
        if (this.options && this.options.locals) {
            // eslint-disable-next-line
            for (const key in this.options.locals) {
                componentInstance[key] = this.options.locals[key];
            }
        }
    }
    /**
     * This should be called by the {@link DialogTitleDirective} only
     */
    registerTitleTemplate(titleTemplateRef) {
        this.titleTemplateRef$.next(titleTemplateRef);
    }
    /**
     * This should be called by the {@link DialogButtonsDirective} only
     */
    registerButtonsTemplate(buttonsTemplateRef) {
        this.buttonsTemplateRef$.next(buttonsTemplateRef);
    }
    /**
     * Called when the modal is closed by clicking the X or the mask.
     */
    modalOpenChange(status) {
        if (status === false) {
            this.closeModal();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ModalDialogComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: ModalDialogComponent, selector: "vdr-modal-dialog", ngImport: i0, template: "<div [dir]=\"direction$ | async\">\r\n    <clr-modal [clrModalOpen]=\"true\" (clrModalOpenChange)=\"modalOpenChange($event)\"\r\n        [clrModalClosable]=\"options?.closable\" [clrModalSize]=\"options?.size\"\r\n        [ngClass]=\"'modal-valign-' + (options?.verticalAlign || 'center')\">\r\n        <h3 class=\"modal-title\"><ng-container *ngTemplateOutlet=\"(titleTemplateRef$ | async)\"></ng-container></h3>\r\n        <div class=\"modal-body\">\r\n            <vdr-dialog-component-outlet [component]=\"childComponentType\"\r\n                (create)=\"onCreate($event)\"></vdr-dialog-component-outlet>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <ng-container *ngTemplateOutlet=\"(buttonsTemplateRef$ | async)\"></ng-container>\r\n        </div>\r\n    </clr-modal>\r\n</div>", styles: ["::ng-deep clr-modal.modal-valign-top .modal{justify-content:flex-start}::ng-deep clr-modal.modal-valign-bottom .modal{justify-content:flex-end}::ng-deep clr-modal .modal-dialog{display:flex}::ng-deep clr-modal .modal-content-wrapper{flex:1;display:flex}::ng-deep clr-modal .modal-dialog .modal-content{flex:1;display:flex;flex-direction:column}@media screen and (max-height: 700px){::ng-deep clr-modal .modal-dialog .modal-content{padding:.8rem}::ng-deep clr-modal .modal-header,::ng-deep clr-modal .modal-header--accessible{padding-bottom:.8rem}::ng-deep clr-modal .modal-footer{padding-top:.8rem}}.modal-body{display:flex;flex-direction:column;container-type:inline-size}\n"], dependencies: [{ kind: "component", type: i2.ClrModal, selector: "clr-modal", inputs: ["clrModalOpen", "clrModalClosable", "clrModalCloseButtonAriaLabel", "clrModalSize", "clrModalStaticBackdrop", "clrModalSkipAnimation", "clrModalPreventClose", "clrModalLabelledById"], outputs: ["clrModalOpenChange", "clrModalAlternateClose"] }, { kind: "directive", type: i2.ClrModalBody, selector: ".modal-body" }, { kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i4.Dir, selector: "[dir]", inputs: ["dir"], outputs: ["dirChange"], exportAs: ["dir"] }, { kind: "component", type: i5.DialogComponentOutletComponent, selector: "vdr-dialog-component-outlet", inputs: ["component"], outputs: ["create"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ModalDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-modal-dialog', template: "<div [dir]=\"direction$ | async\">\r\n    <clr-modal [clrModalOpen]=\"true\" (clrModalOpenChange)=\"modalOpenChange($event)\"\r\n        [clrModalClosable]=\"options?.closable\" [clrModalSize]=\"options?.size\"\r\n        [ngClass]=\"'modal-valign-' + (options?.verticalAlign || 'center')\">\r\n        <h3 class=\"modal-title\"><ng-container *ngTemplateOutlet=\"(titleTemplateRef$ | async)\"></ng-container></h3>\r\n        <div class=\"modal-body\">\r\n            <vdr-dialog-component-outlet [component]=\"childComponentType\"\r\n                (create)=\"onCreate($event)\"></vdr-dialog-component-outlet>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <ng-container *ngTemplateOutlet=\"(buttonsTemplateRef$ | async)\"></ng-container>\r\n        </div>\r\n    </clr-modal>\r\n</div>", styles: ["::ng-deep clr-modal.modal-valign-top .modal{justify-content:flex-start}::ng-deep clr-modal.modal-valign-bottom .modal{justify-content:flex-end}::ng-deep clr-modal .modal-dialog{display:flex}::ng-deep clr-modal .modal-content-wrapper{flex:1;display:flex}::ng-deep clr-modal .modal-dialog .modal-content{flex:1;display:flex;flex-direction:column}@media screen and (max-height: 700px){::ng-deep clr-modal .modal-dialog .modal-content{padding:.8rem}::ng-deep clr-modal .modal-header,::ng-deep clr-modal .modal-header--accessible{padding-bottom:.8rem}::ng-deep clr-modal .modal-footer{padding-top:.8rem}}.modal-body{display:flex;flex-direction:column;container-type:inline-size}\n"] }]
        }], ctorParameters: () => [{ type: i1.LocalizationService }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvc2hhcmVkL2NvbXBvbmVudHMvbW9kYWwtZGlhbG9nL21vZGFsLWRpYWxvZy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3NoYXJlZC9jb21wb25lbnRzL21vZGFsLWRpYWxvZy9tb2RhbC1kaWFsb2cuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBNkIsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQzs7Ozs7OztBQVUvQjs7O0dBR0c7QUFNSCxNQUFNLE9BQU8sb0JBQW9CO0lBUzdCOztPQUVHO0lBQ0gsWUFBb0IsbUJBQXdDO1FBQXhDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFQNUQsc0JBQWlCLEdBQUcsSUFBSSxPQUFPLEVBQW9CLENBQUM7UUFDcEQsd0JBQW1CLEdBQUcsSUFBSSxPQUFPLEVBQW9CLENBQUM7SUFNUyxDQUFDO0lBRWhFLFFBQVE7UUFDSixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxVQUFVLENBQUM7SUFDMUQsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsUUFBUSxDQUFDLGlCQUFvQjtRQUN6QixpQkFBaUIsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxNQUFZLEVBQUUsRUFBRTtZQUM3QyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVCLENBQUMsQ0FBQztRQUNGLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ3RDLDJCQUEyQjtZQUMzQixLQUFLLE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7Z0JBQ3BDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBZ0MsQ0FBQztZQUNyRixDQUFDO1FBQ0wsQ0FBQztJQUNMLENBQUM7SUFFRDs7T0FFRztJQUNILHFCQUFxQixDQUFDLGdCQUFrQztRQUNwRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUVEOztPQUVHO0lBQ0gsdUJBQXVCLENBQUMsa0JBQW9DO1FBQ3hELElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQ7O09BRUc7SUFDSCxlQUFlLENBQUMsTUFBVztRQUN2QixJQUFJLE1BQU0sS0FBSyxLQUFLLEVBQUUsQ0FBQztZQUNuQixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDdEIsQ0FBQztJQUNMLENBQUM7OEdBekRRLG9CQUFvQjtrR0FBcEIsb0JBQW9CLHdEQ3BCakMsK3lCQWFNOzsyRkRPTyxvQkFBb0I7a0JBTGhDLFNBQVM7K0JBQ0ksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFRlbXBsYXRlUmVmLCBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuXHJcbmltcG9ydCB7XHJcbiAgICBMb2NhbGl6YXRpb25EaXJlY3Rpb25UeXBlLFxyXG4gICAgTG9jYWxpemF0aW9uU2VydmljZSxcclxufSBmcm9tICcuLi8uLi8uLi9wcm92aWRlcnMvbG9jYWxpemF0aW9uL2xvY2FsaXphdGlvbi5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRGlhbG9nLCBNb2RhbE9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9wcm92aWRlcnMvbW9kYWwvbW9kYWwudHlwZXMnO1xyXG5cclxuaW1wb3J0IHsgRGlhbG9nQnV0dG9uc0RpcmVjdGl2ZSB9IGZyb20gJy4vZGlhbG9nLWJ1dHRvbnMuZGlyZWN0aXZlJztcclxuXHJcbi8qKlxyXG4gKiBUaGlzIGNvbXBvbmVudCBzaG91bGQgb25seSBiZSBpbnN0YW50aWF0ZWQgZHluYW1pY2FsbHkgYnkgdGhlIE1vZGFsU2VydmljZS4gSXQgc2hvdWxkIG5vdCBiZSB1c2VkXHJcbiAqIGRpcmVjdGx5IGluIHRlbXBsYXRlcy4gU2VlIHtAbGluayBNb2RhbFNlcnZpY2UuZnJvbUNvbXBvbmVudH0gbWV0aG9kIGZvciBtb3JlIGRldGFpbC5cclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd2ZHItbW9kYWwtZGlhbG9nJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9tb2RhbC1kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vbW9kYWwtZGlhbG9nLmNvbXBvbmVudC5zY3NzJ10sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNb2RhbERpYWxvZ0NvbXBvbmVudDxUIGV4dGVuZHMgRGlhbG9nPGFueT4+IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIGRpcmVjdGlvbiQ6IExvY2FsaXphdGlvbkRpcmVjdGlvblR5cGU7XHJcblxyXG4gICAgY2hpbGRDb21wb25lbnRUeXBlOiBUeXBlPFQ+O1xyXG4gICAgY2xvc2VNb2RhbDogKHJlc3VsdD86IGFueSkgPT4gdm9pZDtcclxuICAgIHRpdGxlVGVtcGxhdGVSZWYkID0gbmV3IFN1YmplY3Q8VGVtcGxhdGVSZWY8YW55Pj4oKTtcclxuICAgIGJ1dHRvbnNUZW1wbGF0ZVJlZiQgPSBuZXcgU3ViamVjdDxUZW1wbGF0ZVJlZjxhbnk+PigpO1xyXG4gICAgb3B0aW9ucz86IE1vZGFsT3B0aW9uczxUPjtcclxuXHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbG9jYWxpemF0aW9uU2VydmljZTogTG9jYWxpemF0aW9uU2VydmljZSkge31cclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmRpcmVjdGlvbiQgPSB0aGlzLmxvY2FsaXphdGlvblNlcnZpY2UuZGlyZWN0aW9uJDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgY2FsbGJhY2sgaXMgaW52b2tlZCB3aGVuIHRoZSBjaGlsZENvbXBvbmVudFR5cGUgaXMgaW5zdGFudGlhdGVkIGluIHRoZVxyXG4gICAgICogdGVtcGxhdGUgYnkgdGhlIHtAbGluayBEaWFsb2dDb21wb25lbnRPdXRsZXRDb21wb25lbnR9LlxyXG4gICAgICogT25jZSB3ZSBoYXZlIHRoZSBpbnN0YW5jZSwgd2UgY2FuIHNldCB0aGUgcmVzb2x2ZVdpdGggZnVuY3Rpb24gYW5kIGFueVxyXG4gICAgICogbG9jYWxzIHdoaWNoIHdlcmUgc3BlY2lmaWVkIGluIHRoZSBjb25maWcuXHJcbiAgICAgKi9cclxuICAgIG9uQ3JlYXRlKGNvbXBvbmVudEluc3RhbmNlOiBUKSB7XHJcbiAgICAgICAgY29tcG9uZW50SW5zdGFuY2UucmVzb2x2ZVdpdGggPSAocmVzdWx0PzogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2VNb2RhbChyZXN1bHQpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucyAmJiB0aGlzLm9wdGlvbnMubG9jYWxzKSB7XHJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB0aGlzLm9wdGlvbnMubG9jYWxzKSB7XHJcbiAgICAgICAgICAgICAgICBjb21wb25lbnRJbnN0YW5jZVtrZXldID0gdGhpcy5vcHRpb25zLmxvY2Fsc1trZXldIGFzIFRbRXh0cmFjdDxrZXlvZiBULCBzdHJpbmc+XTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgc2hvdWxkIGJlIGNhbGxlZCBieSB0aGUge0BsaW5rIERpYWxvZ1RpdGxlRGlyZWN0aXZlfSBvbmx5XHJcbiAgICAgKi9cclxuICAgIHJlZ2lzdGVyVGl0bGVUZW1wbGF0ZSh0aXRsZVRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KSB7XHJcbiAgICAgICAgdGhpcy50aXRsZVRlbXBsYXRlUmVmJC5uZXh0KHRpdGxlVGVtcGxhdGVSZWYpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVGhpcyBzaG91bGQgYmUgY2FsbGVkIGJ5IHRoZSB7QGxpbmsgRGlhbG9nQnV0dG9uc0RpcmVjdGl2ZX0gb25seVxyXG4gICAgICovXHJcbiAgICByZWdpc3RlckJ1dHRvbnNUZW1wbGF0ZShidXR0b25zVGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4pIHtcclxuICAgICAgICB0aGlzLmJ1dHRvbnNUZW1wbGF0ZVJlZiQubmV4dChidXR0b25zVGVtcGxhdGVSZWYpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2FsbGVkIHdoZW4gdGhlIG1vZGFsIGlzIGNsb3NlZCBieSBjbGlja2luZyB0aGUgWCBvciB0aGUgbWFzay5cclxuICAgICAqL1xyXG4gICAgbW9kYWxPcGVuQ2hhbmdlKHN0YXR1czogYW55KSB7XHJcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZU1vZGFsKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIjxkaXYgW2Rpcl09XCJkaXJlY3Rpb24kIHwgYXN5bmNcIj5cclxuICAgIDxjbHItbW9kYWwgW2Nsck1vZGFsT3Blbl09XCJ0cnVlXCIgKGNsck1vZGFsT3BlbkNoYW5nZSk9XCJtb2RhbE9wZW5DaGFuZ2UoJGV2ZW50KVwiXHJcbiAgICAgICAgW2Nsck1vZGFsQ2xvc2FibGVdPVwib3B0aW9ucz8uY2xvc2FibGVcIiBbY2xyTW9kYWxTaXplXT1cIm9wdGlvbnM/LnNpemVcIlxyXG4gICAgICAgIFtuZ0NsYXNzXT1cIidtb2RhbC12YWxpZ24tJyArIChvcHRpb25zPy52ZXJ0aWNhbEFsaWduIHx8ICdjZW50ZXInKVwiPlxyXG4gICAgICAgIDxoMyBjbGFzcz1cIm1vZGFsLXRpdGxlXCI+PG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cIih0aXRsZVRlbXBsYXRlUmVmJCB8IGFzeW5jKVwiPjwvbmctY29udGFpbmVyPjwvaDM+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWJvZHlcIj5cclxuICAgICAgICAgICAgPHZkci1kaWFsb2ctY29tcG9uZW50LW91dGxldCBbY29tcG9uZW50XT1cImNoaWxkQ29tcG9uZW50VHlwZVwiXHJcbiAgICAgICAgICAgICAgICAoY3JlYXRlKT1cIm9uQ3JlYXRlKCRldmVudClcIj48L3Zkci1kaWFsb2ctY29tcG9uZW50LW91dGxldD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtZm9vdGVyXCI+XHJcbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCIoYnV0dG9uc1RlbXBsYXRlUmVmJCB8IGFzeW5jKVwiPjwvbmctY29udGFpbmVyPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9jbHItbW9kYWw+XHJcbjwvZGl2PiJdfQ==