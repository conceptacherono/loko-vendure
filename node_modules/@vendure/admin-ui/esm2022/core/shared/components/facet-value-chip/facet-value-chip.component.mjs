import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../chip/chip.component";
import * as i3 from "../help-tooltip/help-tooltip.component";
export class FacetValueChipComponent {
    constructor() {
        this.removable = true;
        this.displayFacetName = true;
        this.remove = new EventEmitter();
    }
    ngOnInit() {
        const facetCode = this.facetValue.facet?.code ? `(${this.facetValue.facet.code}) ` : '';
        this.formattedTitle = `${this.facetValue.facet.name} ${facetCode}- ${this.facetValue.name}`;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: FacetValueChipComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: FacetValueChipComponent, selector: "vdr-facet-value-chip", inputs: { facetValue: "facetValue", removable: "removable", displayFacetName: "displayFacetName" }, outputs: { remove: "remove" }, ngImport: i0, template: "<vdr-chip\r\n    [icon]=\"removable ? 'times' : undefined\"\r\n    [colorFrom]=\"facetValue.facet.name\"\r\n    (iconClick)=\"remove.emit()\"\r\n    [title]=\"formattedTitle\"\r\n>\r\n    <span *ngIf=\"displayFacetName\" class=\"facet-name\">\r\n        {{ facetValue.facet.name }}\r\n    </span>\r\n    <span>{{ facetValue.name }}</span>\r\n    <div class=\"flex\">\r\n        <vdr-help-tooltip\r\n            *ngIf=\"facetValue.facet.code\"\r\n            [content]=\"'Facet code: ' + facetValue.facet.code\"\r\n        ></vdr-help-tooltip>\r\n    </div>\r\n</vdr-chip>\r\n", styles: [":host{display:inline-block}.facet-name{color:var(--color-grey-100);text-transform:uppercase;font-size:10px;margin-inline-end:3px}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.ChipComponent, selector: "vdr-chip", inputs: ["icon", "invert", "colorFrom", "colorType"], outputs: ["iconClick"] }, { kind: "component", type: i3.HelpTooltipComponent, selector: "vdr-help-tooltip", inputs: ["content", "position"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: FacetValueChipComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-facet-value-chip', changeDetection: ChangeDetectionStrategy.OnPush, template: "<vdr-chip\r\n    [icon]=\"removable ? 'times' : undefined\"\r\n    [colorFrom]=\"facetValue.facet.name\"\r\n    (iconClick)=\"remove.emit()\"\r\n    [title]=\"formattedTitle\"\r\n>\r\n    <span *ngIf=\"displayFacetName\" class=\"facet-name\">\r\n        {{ facetValue.facet.name }}\r\n    </span>\r\n    <span>{{ facetValue.name }}</span>\r\n    <div class=\"flex\">\r\n        <vdr-help-tooltip\r\n            *ngIf=\"facetValue.facet.code\"\r\n            [content]=\"'Facet code: ' + facetValue.facet.code\"\r\n        ></vdr-help-tooltip>\r\n    </div>\r\n</vdr-chip>\r\n", styles: [":host{display:inline-block}.facet-name{color:var(--color-grey-100);text-transform:uppercase;font-size:10px;margin-inline-end:3px}\n"] }]
        }], propDecorators: { facetValue: [{
                type: Input
            }], removable: [{
                type: Input
            }], displayFacetName: [{
                type: Input
            }], remove: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjZXQtdmFsdWUtY2hpcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3NoYXJlZC9jb21wb25lbnRzL2ZhY2V0LXZhbHVlLWNoaXAvZmFjZXQtdmFsdWUtY2hpcC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3NoYXJlZC9jb21wb25lbnRzL2ZhY2V0LXZhbHVlLWNoaXAvZmFjZXQtdmFsdWUtY2hpcC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7OztBQVV4RyxNQUFNLE9BQU8sdUJBQXVCO0lBTnBDO1FBUWEsY0FBUyxHQUFHLElBQUksQ0FBQztRQUNqQixxQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFDdkIsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7S0FPL0M7SUFKRyxRQUFRO1FBQ0osTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDeEYsSUFBSSxDQUFDLGNBQWMsR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxTQUFTLEtBQUssSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoRyxDQUFDOzhHQVZRLHVCQUF1QjtrR0FBdkIsdUJBQXVCLCtMQ1ZwQyxpa0JBaUJBOzsyRkRQYSx1QkFBdUI7a0JBTm5DLFNBQVM7K0JBQ0ksc0JBQXNCLG1CQUdmLHVCQUF1QixDQUFDLE1BQU07OEJBR3RDLFVBQVU7c0JBQWxCLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSztnQkFDRyxnQkFBZ0I7c0JBQXhCLEtBQUs7Z0JBQ0ksTUFBTTtzQkFBZixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IEZhY2V0VmFsdWVGcmFnbWVudCB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9nZW5lcmF0ZWQtdHlwZXMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3Zkci1mYWNldC12YWx1ZS1jaGlwJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9mYWNldC12YWx1ZS1jaGlwLmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL2ZhY2V0LXZhbHVlLWNoaXAuY29tcG9uZW50LnNjc3MnXSxcclxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFjZXRWYWx1ZUNoaXBDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgQElucHV0KCkgZmFjZXRWYWx1ZTogRmFjZXRWYWx1ZUZyYWdtZW50O1xyXG4gICAgQElucHV0KCkgcmVtb3ZhYmxlID0gdHJ1ZTtcclxuICAgIEBJbnB1dCgpIGRpc3BsYXlGYWNldE5hbWUgPSB0cnVlO1xyXG4gICAgQE91dHB1dCgpIHJlbW92ZSA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcclxuICAgIGZvcm1hdHRlZFRpdGxlOiBzdHJpbmc7XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgY29uc3QgZmFjZXRDb2RlID0gdGhpcy5mYWNldFZhbHVlLmZhY2V0Py5jb2RlID8gYCgke3RoaXMuZmFjZXRWYWx1ZS5mYWNldC5jb2RlfSkgYCA6ICcnO1xyXG4gICAgICAgIHRoaXMuZm9ybWF0dGVkVGl0bGUgPSBgJHt0aGlzLmZhY2V0VmFsdWUuZmFjZXQubmFtZX0gJHtmYWNldENvZGV9LSAke3RoaXMuZmFjZXRWYWx1ZS5uYW1lfWA7XHJcbiAgICB9XHJcbn1cclxuIiwiPHZkci1jaGlwXHJcbiAgICBbaWNvbl09XCJyZW1vdmFibGUgPyAndGltZXMnIDogdW5kZWZpbmVkXCJcclxuICAgIFtjb2xvckZyb21dPVwiZmFjZXRWYWx1ZS5mYWNldC5uYW1lXCJcclxuICAgIChpY29uQ2xpY2spPVwicmVtb3ZlLmVtaXQoKVwiXHJcbiAgICBbdGl0bGVdPVwiZm9ybWF0dGVkVGl0bGVcIlxyXG4+XHJcbiAgICA8c3BhbiAqbmdJZj1cImRpc3BsYXlGYWNldE5hbWVcIiBjbGFzcz1cImZhY2V0LW5hbWVcIj5cclxuICAgICAgICB7eyBmYWNldFZhbHVlLmZhY2V0Lm5hbWUgfX1cclxuICAgIDwvc3Bhbj5cclxuICAgIDxzcGFuPnt7IGZhY2V0VmFsdWUubmFtZSB9fTwvc3Bhbj5cclxuICAgIDxkaXYgY2xhc3M9XCJmbGV4XCI+XHJcbiAgICAgICAgPHZkci1oZWxwLXRvb2x0aXBcclxuICAgICAgICAgICAgKm5nSWY9XCJmYWNldFZhbHVlLmZhY2V0LmNvZGVcIlxyXG4gICAgICAgICAgICBbY29udGVudF09XCInRmFjZXQgY29kZTogJyArIGZhY2V0VmFsdWUuZmFjZXQuY29kZVwiXHJcbiAgICAgICAgPjwvdmRyLWhlbHAtdG9vbHRpcD5cclxuICAgIDwvZGl2PlxyXG48L3Zkci1jaGlwPlxyXG4iXX0=