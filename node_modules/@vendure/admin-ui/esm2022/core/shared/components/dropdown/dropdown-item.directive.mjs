import { Directive, HostListener, Inject } from '@angular/core';
import { DropdownComponent } from './dropdown.component';
import * as i0 from "@angular/core";
export class DropdownItemDirective {
    constructor(dropdown) {
        this.dropdown = dropdown;
    }
    async onDropdownItemClick() {
        (await this.dropdown).onClick();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: DropdownItemDirective, deps: [{ token: DropdownComponent }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.2.4", type: DropdownItemDirective, selector: "[vdrDropdownItem]", host: { listeners: { "click": "onDropdownItemClick($event)" }, properties: { "class.dropdown-item": "true" } }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: DropdownItemDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[vdrDropdownItem]',
                    // eslint-disable-next-line
                    host: { '[class.dropdown-item]': 'true' },
                }]
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [DropdownComponent]
                }] }], propDecorators: { onDropdownItemClick: [{
                type: HostListener,
                args: ['click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24taXRlbS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3NoYXJlZC9jb21wb25lbnRzL2Ryb3Bkb3duL2Ryb3Bkb3duLWl0ZW0uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVoRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7QUFPekQsTUFBTSxPQUFPLHFCQUFxQjtJQUM5QixZQUN1QyxRQUF3RDtRQUF4RCxhQUFRLEdBQVIsUUFBUSxDQUFnRDtJQUM1RixDQUFDO0lBR0osS0FBSyxDQUFDLG1CQUFtQjtRQUNyQixDQUFDLE1BQU0sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3BDLENBQUM7OEdBUlEscUJBQXFCLGtCQUVsQixpQkFBaUI7a0dBRnBCLHFCQUFxQjs7MkZBQXJCLHFCQUFxQjtrQkFMakMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsbUJBQW1CO29CQUM3QiwyQkFBMkI7b0JBQzNCLElBQUksRUFBRSxFQUFFLHVCQUF1QixFQUFFLE1BQU0sRUFBRTtpQkFDNUM7OzBCQUdRLE1BQU07MkJBQUMsaUJBQWlCO3lDQUl2QixtQkFBbUI7c0JBRHhCLFlBQVk7dUJBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0TGlzdGVuZXIsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgRHJvcGRvd25Db21wb25lbnQgfSBmcm9tICcuL2Ryb3Bkb3duLmNvbXBvbmVudCc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnW3ZkckRyb3Bkb3duSXRlbV0nLFxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXHJcbiAgICBob3N0OiB7ICdbY2xhc3MuZHJvcGRvd24taXRlbV0nOiAndHJ1ZScgfSxcclxufSlcclxuZXhwb3J0IGNsYXNzIERyb3Bkb3duSXRlbURpcmVjdGl2ZSB7XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBASW5qZWN0KERyb3Bkb3duQ29tcG9uZW50KSBwcml2YXRlIGRyb3Bkb3duOiBEcm9wZG93bkNvbXBvbmVudCB8IFByb21pc2U8RHJvcGRvd25Db21wb25lbnQ+LFxyXG4gICAgKSB7fVxyXG5cclxuICAgIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJywgWyckZXZlbnQnXSlcclxuICAgIGFzeW5jIG9uRHJvcGRvd25JdGVtQ2xpY2soKSB7XHJcbiAgICAgICAgKGF3YWl0IHRoaXMuZHJvcGRvd24pLm9uQ2xpY2soKTtcclxuICAgIH1cclxufVxyXG4iXX0=