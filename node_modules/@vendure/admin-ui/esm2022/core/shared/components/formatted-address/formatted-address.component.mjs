import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@clr/angular";
import * as i2 from "@angular/common";
import * as i3 from "../labeled-data/labeled-data.component";
export class FormattedAddressComponent {
    getCountryName() {
        if (this.isAddressFragment(this.address)) {
            return this.address.country.name;
        }
        else {
            return this.address.country || '';
        }
    }
    getCustomFields() {
        const customFields = this.address.customFields;
        if (customFields) {
            return Object.entries(customFields)
                .filter(([key]) => key !== '__typename')
                .map(([key, value]) => ({ key, value: value?.toString() ?? '-' }));
        }
        else {
            return [];
        }
    }
    isAddressFragment(input) {
        return typeof input.country !== 'string';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: FormattedAddressComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: FormattedAddressComponent, selector: "vdr-formatted-address", inputs: { address: "address" }, ngImport: i0, template: "<ul class=\"address-lines\">\r\n    <li *ngIf=\"address.fullName\">{{ address.fullName }}</li>\r\n    <li *ngIf=\"address.company\">{{ address.company }}</li>\r\n    <li *ngIf=\"address.streetLine1\">{{ address.streetLine1 }}</li>\r\n    <li *ngIf=\"address.streetLine2\">{{ address.streetLine2 }}</li>\r\n    <li *ngIf=\"address.city\">{{ address.city }}</li>\r\n    <li *ngIf=\"address.province\">{{ address.province }}</li>\r\n    <li *ngIf=\"address.postalCode\">{{ address.postalCode }}</li>\r\n    <li *ngIf=\"address.country\">\r\n        <clr-icon shape=\"world\" size=\"12\"></clr-icon>\r\n        {{ getCountryName() }}\r\n    </li>\r\n    <li *ngIf=\"address.phoneNumber\">\r\n        <clr-icon shape=\"phone-handset\" size=\"12\"></clr-icon>\r\n        {{ address.phoneNumber }}\r\n    </li>\r\n    <li *ngFor=\"let customField of getCustomFields()\" class=\"custom-field\">\r\n        <vdr-labeled-data [label]=\"customField.key\">{{ customField.value }}</vdr-labeled-data>\r\n    </li>\r\n</ul>\r\n", styles: [":host{display:block}.address-lines{list-style-type:none;line-height:1.2em}.custom-field{margin-top:6px}\n"], dependencies: [{ kind: "directive", type: i1.ClrIconCustomTag, selector: "clr-icon" }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.LabeledDataComponent, selector: "vdr-labeled-data", inputs: ["label"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: FormattedAddressComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-formatted-address', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ul class=\"address-lines\">\r\n    <li *ngIf=\"address.fullName\">{{ address.fullName }}</li>\r\n    <li *ngIf=\"address.company\">{{ address.company }}</li>\r\n    <li *ngIf=\"address.streetLine1\">{{ address.streetLine1 }}</li>\r\n    <li *ngIf=\"address.streetLine2\">{{ address.streetLine2 }}</li>\r\n    <li *ngIf=\"address.city\">{{ address.city }}</li>\r\n    <li *ngIf=\"address.province\">{{ address.province }}</li>\r\n    <li *ngIf=\"address.postalCode\">{{ address.postalCode }}</li>\r\n    <li *ngIf=\"address.country\">\r\n        <clr-icon shape=\"world\" size=\"12\"></clr-icon>\r\n        {{ getCountryName() }}\r\n    </li>\r\n    <li *ngIf=\"address.phoneNumber\">\r\n        <clr-icon shape=\"phone-handset\" size=\"12\"></clr-icon>\r\n        {{ address.phoneNumber }}\r\n    </li>\r\n    <li *ngFor=\"let customField of getCustomFields()\" class=\"custom-field\">\r\n        <vdr-labeled-data [label]=\"customField.key\">{{ customField.value }}</vdr-labeled-data>\r\n    </li>\r\n</ul>\r\n", styles: [":host{display:block}.address-lines{list-style-type:none;line-height:1.2em}.custom-field{margin-top:6px}\n"] }]
        }], propDecorators: { address: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0dGVkLWFkZHJlc3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb3JlL3NyYy9zaGFyZWQvY29tcG9uZW50cy9mb3JtYXR0ZWQtYWRkcmVzcy9mb3JtYXR0ZWQtYWRkcmVzcy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3NoYXJlZC9jb21wb25lbnRzL2Zvcm1hdHRlZC1hZGRyZXNzL2Zvcm1hdHRlZC1hZGRyZXNzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7OztBQVUxRSxNQUFNLE9BQU8seUJBQXlCO0lBR2xDLGNBQWM7UUFDVixJQUFJLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztZQUN2QyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUNyQyxDQUFDO2FBQU0sQ0FBQztZQUNKLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDO1FBQ3RDLENBQUM7SUFDTCxDQUFDO0lBRUQsZUFBZTtRQUNYLE1BQU0sWUFBWSxHQUFJLElBQUksQ0FBQyxPQUFlLENBQUMsWUFBWSxDQUFDO1FBQ3hELElBQUksWUFBWSxFQUFFLENBQUM7WUFDZixPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO2lCQUM5QixNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssWUFBWSxDQUFDO2lCQUN2QyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUcsS0FBYSxFQUFFLFFBQVEsRUFBRSxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNwRixDQUFDO2FBQU0sQ0FBQztZQUNKLE9BQU8sRUFBRSxDQUFDO1FBQ2QsQ0FBQztJQUNMLENBQUM7SUFFTyxpQkFBaUIsQ0FBQyxLQUFxQztRQUMzRCxPQUFPLE9BQU8sS0FBSyxDQUFDLE9BQU8sS0FBSyxRQUFRLENBQUM7SUFDN0MsQ0FBQzs4R0F4QlEseUJBQXlCO2tHQUF6Qix5QkFBeUIsNkZDVnRDLHMvQkFvQkE7OzJGRFZhLHlCQUF5QjtrQkFOckMsU0FBUzsrQkFDSSx1QkFBdUIsbUJBR2hCLHVCQUF1QixDQUFDLE1BQU07OEJBR3RDLE9BQU87c0JBQWYsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBBZGRyZXNzRnJhZ21lbnQsIE9yZGVyQWRkcmVzcyB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9nZW5lcmF0ZWQtdHlwZXMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3Zkci1mb3JtYXR0ZWQtYWRkcmVzcycsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vZm9ybWF0dGVkLWFkZHJlc3MuY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vZm9ybWF0dGVkLWFkZHJlc3MuY29tcG9uZW50LnNjc3MnXSxcclxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRm9ybWF0dGVkQWRkcmVzc0NvbXBvbmVudCB7XHJcbiAgICBASW5wdXQoKSBhZGRyZXNzOiBBZGRyZXNzRnJhZ21lbnQgfCBPcmRlckFkZHJlc3M7XHJcblxyXG4gICAgZ2V0Q291bnRyeU5hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAodGhpcy5pc0FkZHJlc3NGcmFnbWVudCh0aGlzLmFkZHJlc3MpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFkZHJlc3MuY291bnRyeS5uYW1lO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFkZHJlc3MuY291bnRyeSB8fCAnJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q3VzdG9tRmllbGRzKCk6IEFycmF5PHsga2V5OiBzdHJpbmc7IHZhbHVlOiBhbnkgfT4ge1xyXG4gICAgICAgIGNvbnN0IGN1c3RvbUZpZWxkcyA9ICh0aGlzLmFkZHJlc3MgYXMgYW55KS5jdXN0b21GaWVsZHM7XHJcbiAgICAgICAgaWYgKGN1c3RvbUZpZWxkcykge1xyXG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMoY3VzdG9tRmllbGRzKVxyXG4gICAgICAgICAgICAgICAgLmZpbHRlcigoW2tleV0pID0+IGtleSAhPT0gJ19fdHlwZW5hbWUnKVxyXG4gICAgICAgICAgICAgICAgLm1hcCgoW2tleSwgdmFsdWVdKSA9PiAoeyBrZXksIHZhbHVlOiAodmFsdWUgYXMgYW55KT8udG9TdHJpbmcoKSA/PyAnLScgfSkpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBbXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBpc0FkZHJlc3NGcmFnbWVudChpbnB1dDogQWRkcmVzc0ZyYWdtZW50IHwgT3JkZXJBZGRyZXNzKTogaW5wdXQgaXMgQWRkcmVzc0ZyYWdtZW50IHtcclxuICAgICAgICByZXR1cm4gdHlwZW9mIGlucHV0LmNvdW50cnkgIT09ICdzdHJpbmcnO1xyXG4gICAgfVxyXG59XHJcbiIsIjx1bCBjbGFzcz1cImFkZHJlc3MtbGluZXNcIj5cclxuICAgIDxsaSAqbmdJZj1cImFkZHJlc3MuZnVsbE5hbWVcIj57eyBhZGRyZXNzLmZ1bGxOYW1lIH19PC9saT5cclxuICAgIDxsaSAqbmdJZj1cImFkZHJlc3MuY29tcGFueVwiPnt7IGFkZHJlc3MuY29tcGFueSB9fTwvbGk+XHJcbiAgICA8bGkgKm5nSWY9XCJhZGRyZXNzLnN0cmVldExpbmUxXCI+e3sgYWRkcmVzcy5zdHJlZXRMaW5lMSB9fTwvbGk+XHJcbiAgICA8bGkgKm5nSWY9XCJhZGRyZXNzLnN0cmVldExpbmUyXCI+e3sgYWRkcmVzcy5zdHJlZXRMaW5lMiB9fTwvbGk+XHJcbiAgICA8bGkgKm5nSWY9XCJhZGRyZXNzLmNpdHlcIj57eyBhZGRyZXNzLmNpdHkgfX08L2xpPlxyXG4gICAgPGxpICpuZ0lmPVwiYWRkcmVzcy5wcm92aW5jZVwiPnt7IGFkZHJlc3MucHJvdmluY2UgfX08L2xpPlxyXG4gICAgPGxpICpuZ0lmPVwiYWRkcmVzcy5wb3N0YWxDb2RlXCI+e3sgYWRkcmVzcy5wb3N0YWxDb2RlIH19PC9saT5cclxuICAgIDxsaSAqbmdJZj1cImFkZHJlc3MuY291bnRyeVwiPlxyXG4gICAgICAgIDxjbHItaWNvbiBzaGFwZT1cIndvcmxkXCIgc2l6ZT1cIjEyXCI+PC9jbHItaWNvbj5cclxuICAgICAgICB7eyBnZXRDb3VudHJ5TmFtZSgpIH19XHJcbiAgICA8L2xpPlxyXG4gICAgPGxpICpuZ0lmPVwiYWRkcmVzcy5waG9uZU51bWJlclwiPlxyXG4gICAgICAgIDxjbHItaWNvbiBzaGFwZT1cInBob25lLWhhbmRzZXRcIiBzaXplPVwiMTJcIj48L2Nsci1pY29uPlxyXG4gICAgICAgIHt7IGFkZHJlc3MucGhvbmVOdW1iZXIgfX1cclxuICAgIDwvbGk+XHJcbiAgICA8bGkgKm5nRm9yPVwibGV0IGN1c3RvbUZpZWxkIG9mIGdldEN1c3RvbUZpZWxkcygpXCIgY2xhc3M9XCJjdXN0b20tZmllbGRcIj5cclxuICAgICAgICA8dmRyLWxhYmVsZWQtZGF0YSBbbGFiZWxdPVwiY3VzdG9tRmllbGQua2V5XCI+e3sgY3VzdG9tRmllbGQudmFsdWUgfX08L3Zkci1sYWJlbGVkLWRhdGE+XHJcbiAgICA8L2xpPlxyXG48L3VsPlxyXG4iXX0=