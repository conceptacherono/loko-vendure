import { ChangeDetectionStrategy, Component, Input, Self, ViewChild, } from '@angular/core';
import { combineLatest } from 'rxjs';
import { map, tap } from 'rxjs/operators';
import { ActionBarBaseComponent } from '../action-bar-items/action-bar-base.component';
import { DropdownComponent } from '../dropdown/dropdown.component';
import * as i0 from "@angular/core";
import * as i1 from "@clr/angular";
import * as i2 from "@angular/common";
import * as i3 from "@angular/router";
import * as i4 from "../dropdown/dropdown.component";
import * as i5 from "../dropdown/dropdown-menu.component";
import * as i6 from "../dropdown/dropdown-trigger.directive";
import * as i7 from "../dropdown/dropdown-item.directive";
import * as i8 from "../../directives/if-permissions.directive";
import * as i9 from "../ui-extension-point/ui-extension-point.component";
import * as i10 from "@ngx-translate/core";
export class ActionBarDropdownMenuComponent extends ActionBarBaseComponent {
    constructor() {
        super(...arguments);
        this.alwaysShow = false;
    }
    ngOnInit() {
        this.items$ = combineLatest(this.navBuilderService.actionBarDropdownConfig$, this.locationId$).pipe(map(([items, locationId]) => items.filter(config => config.locationId === locationId)), tap(items => {
            this.buildButtonStates(items);
        }));
    }
    ngAfterViewInit() {
        if (this.onDropdownComponentResolvedFn) {
            this.onDropdownComponentResolvedFn(this.dropdownComponent);
        }
    }
    onDropdownComponentResolved(fn) {
        this.onDropdownComponentResolvedFn = fn;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ActionBarDropdownMenuComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: ActionBarDropdownMenuComponent, selector: "vdr-action-bar-dropdown-menu", inputs: { alwaysShow: "alwaysShow" }, providers: [
            // This is a rather involved work-around to allow the {@link DropdownItemDirective} to
            // be able to access the DropdownComponent instance even when it is not a direct parent,
            // as is the case when this component is used.
            {
                provide: DropdownComponent,
                useFactory: (actionBarDropdownMenuComponent) => {
                    return new Promise(resolve => actionBarDropdownMenuComponent.onDropdownComponentResolved(cmp => resolve(cmp)));
                },
                deps: [[new Self(), ActionBarDropdownMenuComponent]],
            },
        ], viewQueries: [{ propertyName: "dropdownComponent", first: true, predicate: ["dropdownComponent"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<vdr-ui-extension-point [locationId]=\"locationId\" api=\"actionBarDropdown\" [leftPx]=\"-24\">\r\n    <vdr-dropdown #dropdownComponent *ngIf=\"alwaysShow || (items$ | async)?.length\">\r\n        <button class=\"icon-button\" vdrDropdownTrigger>\r\n            <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n        </button>\r\n        <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n            <ng-content />\r\n            <ng-container *ngFor=\"let item of items$ | async\">\r\n                <ng-container *ngIf=\"buttonStates[item.id] | async as buttonState\">\r\n                    <div class=\"dropdown-divider\" *ngIf=\"item.hasDivider === true\"></div>\r\n                    <button\r\n                        type=\"button\"\r\n                        vdrDropdownItem\r\n                        *vdrIfPermissions=\"item.requiresPermission\"\r\n                        [routerLink]=\"getRouterLink(item)\"\r\n                        [class.hidden]=\"buttonState.visible === false\"\r\n                        [disabled]=\"buttonState.disabled\"\r\n                        (click)=\"handleClick($event, item)\"\r\n                        class=\"mr-2\"\r\n                    >\r\n                        <clr-icon *ngIf=\"item.icon\" [attr.shape]=\"item.icon\"></clr-icon>\r\n                        {{ item.label | translate }}\r\n                    </button>\r\n                </ng-container>\r\n            </ng-container>\r\n        </vdr-dropdown-menu>\r\n    </vdr-dropdown>\r\n</vdr-ui-extension-point>\r\n", styles: [""], dependencies: [{ kind: "directive", type: i1.ClrIconCustomTag, selector: "clr-icon" }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: i4.DropdownComponent, selector: "vdr-dropdown", inputs: ["manualToggle"] }, { kind: "component", type: i5.DropdownMenuComponent, selector: "vdr-dropdown-menu", inputs: ["vdrPosition", "customClasses"] }, { kind: "directive", type: i6.DropdownTriggerDirective, selector: "[vdrDropdownTrigger]" }, { kind: "directive", type: i7.DropdownItemDirective, selector: "[vdrDropdownItem]" }, { kind: "directive", type: i8.IfPermissionsDirective, selector: "[vdrIfPermissions]", inputs: ["vdrIfPermissions", "vdrIfPermissionsElse"] }, { kind: "component", type: i9.UiExtensionPointComponent, selector: "vdr-ui-extension-point", inputs: ["locationId", "metadata", "topPx", "leftPx", "display", "api"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i10.TranslatePipe, name: "translate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ActionBarDropdownMenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-action-bar-dropdown-menu', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        // This is a rather involved work-around to allow the {@link DropdownItemDirective} to
                        // be able to access the DropdownComponent instance even when it is not a direct parent,
                        // as is the case when this component is used.
                        {
                            provide: DropdownComponent,
                            useFactory: (actionBarDropdownMenuComponent) => {
                                return new Promise(resolve => actionBarDropdownMenuComponent.onDropdownComponentResolved(cmp => resolve(cmp)));
                            },
                            deps: [[new Self(), ActionBarDropdownMenuComponent]],
                        },
                    ], template: "<vdr-ui-extension-point [locationId]=\"locationId\" api=\"actionBarDropdown\" [leftPx]=\"-24\">\r\n    <vdr-dropdown #dropdownComponent *ngIf=\"alwaysShow || (items$ | async)?.length\">\r\n        <button class=\"icon-button\" vdrDropdownTrigger>\r\n            <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n        </button>\r\n        <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n            <ng-content />\r\n            <ng-container *ngFor=\"let item of items$ | async\">\r\n                <ng-container *ngIf=\"buttonStates[item.id] | async as buttonState\">\r\n                    <div class=\"dropdown-divider\" *ngIf=\"item.hasDivider === true\"></div>\r\n                    <button\r\n                        type=\"button\"\r\n                        vdrDropdownItem\r\n                        *vdrIfPermissions=\"item.requiresPermission\"\r\n                        [routerLink]=\"getRouterLink(item)\"\r\n                        [class.hidden]=\"buttonState.visible === false\"\r\n                        [disabled]=\"buttonState.disabled\"\r\n                        (click)=\"handleClick($event, item)\"\r\n                        class=\"mr-2\"\r\n                    >\r\n                        <clr-icon *ngIf=\"item.icon\" [attr.shape]=\"item.icon\"></clr-icon>\r\n                        {{ item.label | translate }}\r\n                    </button>\r\n                </ng-container>\r\n            </ng-container>\r\n        </vdr-dropdown-menu>\r\n    </vdr-dropdown>\r\n</vdr-ui-extension-point>\r\n" }]
        }], propDecorators: { dropdownComponent: [{
                type: ViewChild,
                args: ['dropdownComponent']
            }], alwaysShow: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,