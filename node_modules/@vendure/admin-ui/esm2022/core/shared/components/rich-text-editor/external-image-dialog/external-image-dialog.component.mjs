import { ChangeDetectionStrategy, Component, EventEmitter, Output, } from '@angular/core';
import { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';
import { unique } from '@vendure/common/lib/unique';
import { AssetPickerDialogComponent } from '../../asset-picker-dialog/asset-picker-dialog.component';
import { ASSET_SIZES } from '../../asset-preview-links/asset-preview-links.component';
import * as i0 from "@angular/core";
import * as i1 from "../../../../providers/modal/modal.service";
import * as i2 from "@clr/angular";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
import * as i5 from "../../form-field/form-field-control.directive";
import * as i6 from "../../modal-dialog/dialog-buttons.directive";
import * as i7 from "../../dropdown/dropdown.component";
import * as i8 from "../../dropdown/dropdown-menu.component";
import * as i9 from "../../dropdown/dropdown-trigger.directive";
import * as i10 from "../../dropdown/dropdown-item.directive";
import * as i11 from "@ngx-translate/core";
export class ExternalImageDialogComponent {
    constructor(modalService, changeDetector) {
        this.modalService = modalService;
        this.changeDetector = changeDetector;
        this.assets = [];
        // eslint-disable-next-line @angular-eslint/no-output-native
        this.change = new EventEmitter();
        this.previewLoaded = false;
        this.sizes = ASSET_SIZES;
        this.preset = '';
    }
    ngOnInit() {
        const initialSrc = this.existing?.src ? this.existing.src : '';
        if (initialSrc) {
            const url = new URL(initialSrc);
            this.preset = url.searchParams.get('preset') || '';
        }
        this.form = new UntypedFormGroup({
            src: new UntypedFormControl(this.existing ? this.existing.src : '', Validators.required),
            title: new UntypedFormControl(this.existing ? this.existing.title : ''),
            alt: new UntypedFormControl(this.existing ? this.existing.alt : ''),
            width: new UntypedFormControl(this.existing ? this.existing.width : ''),
            height: new UntypedFormControl(this.existing ? this.existing.height : ''),
            dataExternal: new UntypedFormControl(this.existing ? this.existing.dataExternal : true),
        });
    }
    select() {
        this.resolveWith(this.form.value);
    }
    onImageLoad(event) {
        this.previewLoaded = true;
    }
    onImageError(event) {
        this.previewLoaded = false;
    }
    selectAssets() {
        this.modalService
            .fromComponent(AssetPickerDialogComponent, {
            size: 'xl',
            locals: {
                multiSelect: false,
            },
        })
            .subscribe(result => {
            if (result && result.length) {
                this.assets = unique(this.assets.concat(result), 'id');
                this.form.patchValue({
                    src: result[0].source,
                    dataExternal: false,
                });
                this.form.get('src')?.disable();
                this.emitChangeEvent(this.assets);
                this.changeDetector.markForCheck();
            }
        });
    }
    emitChangeEvent(assets) {
        this.change.emit({
            assets,
        });
    }
    onSizeSelect(size) {
        const url = this.form.get('src')?.value.split('?')[0];
        const src = `${url}?preset=${size}`;
        this.form.patchValue({
            src,
            width: this.form.get('width')?.value,
            height: this.form.get('height')?.value,
        });
    }
    removeImage() {
        this.form.get('src')?.setValue('');
        this.form.get('src')?.enable();
        this.form.get('dataExternal')?.setValue(true);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ExternalImageDialogComponent, deps: [{ token: i1.ModalService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.4", type: ExternalImageDialogComponent, selector: "vdr-external-image-dialog", outputs: { change: "change" }, ngImport: i0, template: "<div class=\"clr-row\">\r\n    <div class=\"clr-col-md-5 clr-row clr-justify-content-center\">\r\n        <div class=\"preview text-center clr-col-12 mt-10\">\r\n            <vdr-dropdown>\r\n                <img\r\n                    [src]=\"form.get('src')?.value\"\r\n                    [class.visible]=\"previewLoaded\"\r\n                    vdrDropdownTrigger\r\n                    (load)=\"onImageLoad($event)\"\r\n                    (error)=\"onImageError($event)\"\r\n                    class=\"img-responsive\"\r\n                />\r\n\r\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                    <button\r\n                        vdrDropdownItem\r\n                        [title]=\"'asset.remove-asset' | translate\"\r\n                        (click)=\"removeImage()\"\r\n                    >\r\n                        <clr-icon shape=\"times\"></clr-icon>\r\n                        {{ 'asset.remove-asset' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n\r\n            <div class=\"placeholder\" *ngIf=\"!previewLoaded\">\r\n                <clr-icon shape=\"image\" size=\"128\"></clr-icon>\r\n            </div>\r\n        </div>\r\n        <div class=\"text-center clr-col-12\">\r\n            <div *ngIf=\"previewLoaded && !form.get('dataExternal')?.value\">\r\n                <select name=\"options\" (change)=\"onSizeSelect($event.target.value)\" [(ngModel)]=\"preset\">\r\n                    <option value=\"\" selected>{{ 'asset.size' | translate }}</option>\r\n                    <option *ngFor=\"let size of sizes\" [value]=\"size\">{{ size }}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <button\r\n                class=\"btn btn-icon btn-sm btn-block mt-2\"\r\n                [title]=\"(!previewLoaded ? 'asset.add-asset' : 'asset.change-asset') | translate\"\r\n                (click)=\"selectAssets()\"\r\n            >\r\n                <clr-icon shape=\"attachment\"></clr-icon>\r\n                {{ (!previewLoaded ? 'asset.add-asset' : 'asset.change-asset') | translate }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"clr-col\">\r\n        <form [formGroup]=\"form\" class=\"flex-spacer\" clrForm clrLayout=\"vertical\">\r\n            <clr-input-container class=\"expand\">\r\n                <label>{{ 'editor.image-src' | translate }}</label>\r\n                <input clrInput type=\"text\" formControlName=\"src\" />\r\n            </clr-input-container>\r\n            <clr-input-container class=\"expand mt-2\">\r\n                <label>{{ 'editor.image-title' | translate }}</label>\r\n                <input clrInput type=\"text\" formControlName=\"title\" />\r\n            </clr-input-container>\r\n            <clr-input-container class=\"expand mt-2\">\r\n                <label>{{ 'editor.image-alt' | translate }}</label>\r\n                <input clrInput type=\"text\" formControlName=\"alt\" />\r\n            </clr-input-container>\r\n            <clr-input-container class=\"expand mt-2\">\r\n                <label>{{ 'editor.width' | translate }}</label>\r\n                <input clrInput type=\"text\" formControlName=\"width\" />\r\n            </clr-input-container>\r\n            <clr-input-container class=\"expand mt-2\">\r\n                <label>{{ 'editor.height' | translate }}</label>\r\n                <input clrInput type=\"text\" formControlName=\"height\" />\r\n            </clr-input-container>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button\r\n        type=\"submit\"\r\n        (click)=\"select()\"\r\n        class=\"btn btn-primary\"\r\n        [disabled]=\"form.invalid || !previewLoaded\"\r\n    >\r\n        <ng-container *ngIf=\"existing; else doesNotExist\">{{ 'common.update' | translate }}</ng-container>\r\n        <ng-template #doesNotExist>{{ 'editor.insert-image' | translate }}</ng-template>\r\n    </button>\r\n</ng-template>\r\n", styles: [".preview{display:flex;align-items:center;justify-content:center;max-width:150px;height:150px}.preview img{max-width:100%;display:none}.preview img.visible{display:block}.preview .placeholder{color:var(--color-grey-300)}\n"], dependencies: [{ kind: "directive", type: i2.ClrIconCustomTag, selector: "clr-icon" }, { kind: "directive", type: i2.ClrLabel, selector: "label", inputs: ["for"] }, { kind: "directive", type: i2.ClrForm, selector: "[clrForm]", inputs: ["clrLabelSize"] }, { kind: "directive", type: i2.ClrLayout, selector: "[clrForm][clrLayout]", inputs: ["clrLayout"] }, { kind: "directive", type: i2.ClrInput, selector: "[clrInput]" }, { kind: "component", type: i2.ClrInputContainer, selector: "clr-input-container" }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i4.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i4.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i4.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i4.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i5.FormFieldControlDirective, selector: "input, textarea, select, vdr-currency-input" }, { kind: "directive", type: i6.DialogButtonsDirective, selector: "[vdrDialogButtons]" }, { kind: "component", type: i7.DropdownComponent, selector: "vdr-dropdown", inputs: ["manualToggle"] }, { kind: "component", type: i8.DropdownMenuComponent, selector: "vdr-dropdown-menu", inputs: ["vdrPosition", "customClasses"] }, { kind: "directive", type: i9.DropdownTriggerDirective, selector: "[vdrDropdownTrigger]" }, { kind: "directive", type: i10.DropdownItemDirective, selector: "[vdrDropdownItem]" }, { kind: "pipe", type: i11.TranslatePipe, name: "translate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.4", ngImport: i0, type: ExternalImageDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-external-image-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"clr-row\">\r\n    <div class=\"clr-col-md-5 clr-row clr-justify-content-center\">\r\n        <div class=\"preview text-center clr-col-12 mt-10\">\r\n            <vdr-dropdown>\r\n                <img\r\n                    [src]=\"form.get('src')?.value\"\r\n                    [class.visible]=\"previewLoaded\"\r\n                    vdrDropdownTrigger\r\n                    (load)=\"onImageLoad($event)\"\r\n                    (error)=\"onImageError($event)\"\r\n                    class=\"img-responsive\"\r\n                />\r\n\r\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                    <button\r\n                        vdrDropdownItem\r\n                        [title]=\"'asset.remove-asset' | translate\"\r\n                        (click)=\"removeImage()\"\r\n                    >\r\n                        <clr-icon shape=\"times\"></clr-icon>\r\n                        {{ 'asset.remove-asset' | translate }}\r\n                    </button>\r\n                </vdr-dropdown-menu>\r\n            </vdr-dropdown>\r\n\r\n            <div class=\"placeholder\" *ngIf=\"!previewLoaded\">\r\n                <clr-icon shape=\"image\" size=\"128\"></clr-icon>\r\n            </div>\r\n        </div>\r\n        <div class=\"text-center clr-col-12\">\r\n            <div *ngIf=\"previewLoaded && !form.get('dataExternal')?.value\">\r\n                <select name=\"options\" (change)=\"onSizeSelect($event.target.value)\" [(ngModel)]=\"preset\">\r\n                    <option value=\"\" selected>{{ 'asset.size' | translate }}</option>\r\n                    <option *ngFor=\"let size of sizes\" [value]=\"size\">{{ size }}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <button\r\n                class=\"btn btn-icon btn-sm btn-block mt-2\"\r\n                [title]=\"(!previewLoaded ? 'asset.add-asset' : 'asset.change-asset') | translate\"\r\n                (click)=\"selectAssets()\"\r\n            >\r\n                <clr-icon shape=\"attachment\"></clr-icon>\r\n                {{ (!previewLoaded ? 'asset.add-asset' : 'asset.change-asset') | translate }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"clr-col\">\r\n        <form [formGroup]=\"form\" class=\"flex-spacer\" clrForm clrLayout=\"vertical\">\r\n            <clr-input-container class=\"expand\">\r\n                <label>{{ 'editor.image-src' | translate }}</label>\r\n                <input clrInput type=\"text\" formControlName=\"src\" />\r\n            </clr-input-container>\r\n            <clr-input-container class=\"expand mt-2\">\r\n                <label>{{ 'editor.image-title' | translate }}</label>\r\n                <input clrInput type=\"text\" formControlName=\"title\" />\r\n            </clr-input-container>\r\n            <clr-input-container class=\"expand mt-2\">\r\n                <label>{{ 'editor.image-alt' | translate }}</label>\r\n                <input clrInput type=\"text\" formControlName=\"alt\" />\r\n            </clr-input-container>\r\n            <clr-input-container class=\"expand mt-2\">\r\n                <label>{{ 'editor.width' | translate }}</label>\r\n                <input clrInput type=\"text\" formControlName=\"width\" />\r\n            </clr-input-container>\r\n            <clr-input-container class=\"expand mt-2\">\r\n                <label>{{ 'editor.height' | translate }}</label>\r\n                <input clrInput type=\"text\" formControlName=\"height\" />\r\n            </clr-input-container>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button\r\n        type=\"submit\"\r\n        (click)=\"select()\"\r\n        class=\"btn btn-primary\"\r\n        [disabled]=\"form.invalid || !previewLoaded\"\r\n    >\r\n        <ng-container *ngIf=\"existing; else doesNotExist\">{{ 'common.update' | translate }}</ng-container>\r\n        <ng-template #doesNotExist>{{ 'editor.insert-image' | translate }}</ng-template>\r\n    </button>\r\n</ng-template>\r\n", styles: [".preview{display:flex;align-items:center;justify-content:center;max-width:150px;height:150px}.preview img{max-width:100%;display:none}.preview img.visible{display:block}.preview .placeholder{color:var(--color-grey-300)}\n"] }]
        }], ctorParameters: () => [{ type: i1.ModalService }, { type: i0.ChangeDetectorRef }], propDecorators: { change: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,