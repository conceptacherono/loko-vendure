{
  "version": 3,
  "sources": ["src/lib/dashboard/src/components/dashboard/dashboard.component.ts", "src/lib/dashboard/src/components/dashboard/dashboard.component.html", "src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.ts", "src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.html", "src/lib/dashboard/src/dashboard.routes.ts", "src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.ts", "src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.html", "src/lib/dashboard/src/widgets/order-chart-widget/order-chart-widget.component.ts", "src/lib/dashboard/src/widgets/order-chart-widget/order-chart-widget.component.html", "src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.ts", "src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.html", "src/lib/dashboard/src/default-widgets.ts", "src/lib/dashboard/src/dashboard.module.ts", "src/lib/dashboard/src/widgets/test-widget/test-widget.component.ts", "src/lib/dashboard/src/widgets/test-widget/test-widget.component.html", "src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.ts", "src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.html"],
  "sourcesContent": ["import { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport {\n    DashboardWidgetConfig,\n    DashboardWidgetService,\n    DashboardWidgetWidth,\n    DataService,\n    LocalStorageService,\n    titleSetter,\n    WidgetLayout,\n    WidgetLayoutDefinition,\n} from '@vendure/admin-ui/core';\nimport { assertNever } from '@vendure/common/lib/shared-utils';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false,\n})\nexport class DashboardComponent implements OnInit {\n    widgetLayout: WidgetLayout | undefined;\n    availableWidgets$: Observable<Array<{ id: string; config: DashboardWidgetConfig }>>;\n    private readonly deletionMarker = '__delete__';\n    private setTitle = titleSetter();\n    constructor(\n        private dashboardWidgetService: DashboardWidgetService,\n        private localStorageService: LocalStorageService,\n        private changedDetectorRef: ChangeDetectorRef,\n        private dataService: DataService,\n    ) {}\n\n    ngOnInit() {\n        this.availableWidgets$ = this.dataService.client.userStatus().stream$.pipe(\n            map(({ userStatus }) => userStatus.permissions),\n            map(permissions => this.dashboardWidgetService.getAvailableWidgets(permissions)),\n            tap(widgets => (this.widgetLayout = this.initLayout(widgets.map(w => w.id)))),\n        );\n        this.setTitle('breadcrumb.dashboard');\n    }\n\n    getClassForWidth(width: DashboardWidgetWidth): string {\n        switch (width) {\n            case 3:\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-3`;\n            case 4:\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-4`;\n            case 6:\n                return `clr-col-12 clr-col-lg-6`;\n            case 8:\n                return `clr-col-12 clr-col-lg-8`;\n            case 12:\n                return `clr-col-12`;\n            default:\n                assertNever(width);\n        }\n    }\n\n    getSupportedWidths(config: DashboardWidgetConfig): DashboardWidgetWidth[] {\n        return config.supportedWidths || [3, 4, 6, 8, 12];\n    }\n\n    setWidgetWidth(widget: WidgetLayout[number][number], width: DashboardWidgetWidth) {\n        widget.width = width;\n        this.recalculateLayout();\n    }\n\n    trackRow(index: number, row: WidgetLayout[number]) {\n        const id = row.map(item => `${item.id}:${item.width}`).join('|');\n        return id;\n    }\n\n    trackRowItem(index: number, item: WidgetLayout[number][number]) {\n        return item.config;\n    }\n\n    addWidget(id: string) {\n        const config = this.dashboardWidgetService.getWidgetById(id);\n        if (config) {\n            const width = this.getSupportedWidths(config)[0];\n            const widget: WidgetLayout[number][number] = {\n                id,\n                config,\n                width,\n            };\n            let targetRow: WidgetLayout[number];\n            if (this.widgetLayout && this.widgetLayout.length) {\n                targetRow = this.widgetLayout[this.widgetLayout.length - 1];\n            } else {\n                targetRow = [];\n                this.widgetLayout?.push(targetRow);\n            }\n            targetRow.push(widget);\n            this.recalculateLayout();\n        }\n    }\n\n    removeWidget(widget: WidgetLayout[number][number]) {\n        widget.id = this.deletionMarker;\n        this.recalculateLayout();\n    }\n\n    drop(event: CdkDragDrop<{ index: number }>) {\n        const { currentIndex, previousIndex, previousContainer, container } = event;\n        if (previousIndex === currentIndex && previousContainer.data.index === container.data.index) {\n            // Nothing changed\n            return;\n        }\n        if (this.widgetLayout) {\n            const previousLayoutRow = this.widgetLayout[previousContainer.data.index];\n            const newLayoutRow = this.widgetLayout[container.data.index];\n\n            previousLayoutRow.splice(previousIndex, 1);\n            newLayoutRow.splice(currentIndex, 0, event.item.data);\n            this.recalculateLayout();\n        }\n    }\n\n    private initLayout(availableIds: string[]): WidgetLayout {\n        const savedLayoutDef = this.localStorageService.get('dashboardWidgetLayout');\n        let layoutDef: WidgetLayoutDefinition | undefined;\n        if (savedLayoutDef) {\n            // validate all the IDs from the saved layout are still available\n            layoutDef = savedLayoutDef.filter(item => availableIds.includes(item.id));\n        }\n        return this.dashboardWidgetService.getWidgetLayout(layoutDef);\n    }\n\n    private recalculateLayout() {\n        if (this.widgetLayout) {\n            const flattened = this.widgetLayout\n                .reduce((flat, row) => [...flat, ...row], [])\n                .filter(item => item.id !== this.deletionMarker);\n            const newLayoutDef: WidgetLayoutDefinition = flattened.map(item => ({\n                id: item.id,\n                width: item.width,\n            }));\n            this.widgetLayout = this.dashboardWidgetService.getWidgetLayout(newLayoutDef);\n            this.localStorageService.set('dashboardWidgetLayout', newLayoutDef);\n            setTimeout(() => this.changedDetectorRef.markForCheck());\n        }\n    }\n}\n", "<vdr-page-block>\n    <div class=\"widget-header mb-1\">\n        <vdr-dropdown>\n            <button class=\"btn btn-secondary btn-sm\" vdrDropdownTrigger>\n                <clr-icon shape=\"plus\"></clr-icon>\n                {{ 'dashboard.add-widget' | translate }}\n                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\n            </button>\n            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n                <button\n                    vdrDropdownItem\n                    *ngFor=\"let widget of availableWidgets$ | async\"\n                    (click)=\"addWidget(widget.id)\"\n                >\n                    {{ (widget.config.title ?? widget.id) | translate }}\n                </button>\n            </vdr-dropdown-menu>\n        </vdr-dropdown>\n    </div>\n    <div cdkDropListGroup>\n        <div\n            class=\"clr-row dashboard-row\"\n            *ngFor=\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\"\n            cdkDropList\n            (cdkDropListDropped)=\"drop($event)\"\n            cdkDropListOrientation=\"horizontal\"\n            [cdkDropListData]=\"{ index: rowIndex }\"\n        >\n            <div\n                *ngFor=\"let widget of row; trackBy: trackRowItem\"\n                class=\"dashboard-item\"\n                [ngClass]=\"getClassForWidth(widget.width)\"\n                cdkDrag\n                [cdkDragData]=\"widget\"\n            >\n                <vdr-dashboard-widget\n                    *vdrIfPermissions=\"widget.config.requiresPermissions || null\"\n                    [widgetConfig]=\"widget.config\"\n                >\n                    <div class=\"flex\">\n                        <div class=\"drag-handle\" cdkDragHandle>\n                            <clr-icon shape=\"drag-handle\" size=\"24\"></clr-icon>\n                        </div>\n                        <vdr-dropdown>\n                            <button class=\"icon-button\" vdrDropdownTrigger>\n                                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\n                            </button>\n                            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n                                <h4 class=\"dropdown-header\">{{ 'dashboard.widget-resize' | translate }}</h4>\n                                <button\n                                    vdrDropdownItem\n                                    [disabled]=\"width === widget.width\"\n                                    *ngFor=\"let width of getSupportedWidths(widget.config)\"\n                                    (click)=\"setWidgetWidth(widget, width)\"\n                                >\n                                    {{ 'dashboard.widget-width' | translate : { width: width } }}\n                                </button>\n                                <div class=\"dropdown-divider\" role=\"separator\"></div>\n                                <button vdrDropdownItem (click)=\"removeWidget(widget)\">\n                                    <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\n                                    {{ 'dashboard.remove-widget' | translate }}\n                                </button>\n                            </vdr-dropdown-menu>\n                        </vdr-dropdown>\n                    </div>\n                </vdr-dashboard-widget>\n            </div>\n        </div>\n    </div>\n</vdr-page-block>\n", "import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    Input,\n    OnDestroy,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { DashboardWidgetConfig } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-dashboard-widget',\n    templateUrl: './dashboard-widget.component.html',\n    styleUrls: ['./dashboard-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false,\n})\nexport class DashboardWidgetComponent implements AfterViewInit, OnDestroy {\n    @Input() widgetConfig: DashboardWidgetConfig;\n\n    @ViewChild('portal', { read: ViewContainerRef })\n    private portal: ViewContainerRef;\n\n    private componentRef: ComponentRef<any>;\n\n    ngAfterViewInit(): void {\n        this.loadWidget();\n    }\n\n    private async loadWidget() {\n        const loadComponentResult = this.widgetConfig.loadComponent();\n        const componentType =\n            loadComponentResult instanceof Promise ? await loadComponentResult : loadComponentResult;\n        this.componentRef = this.portal.createComponent(componentType);\n        this.componentRef.changeDetectorRef.detectChanges();\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n        }\n    }\n}\n", "<vdr-card [title]=\"widgetConfig.title ?? '' | translate\">\n    <ng-template vdrCardControls>\n        <ng-content></ng-content>\n    </ng-template>\n    <ng-template #portal></ng-template>\n</vdr-card>\n", "import { Routes } from '@angular/router';\n\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nexport const dashboardRoutes: Routes = [\n    {\n        path: '',\n        component: DashboardComponent,\n        pathMatch: 'full',\n    },\n];\n", "import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\nimport {\n    CoreModule,\n    DataService,\n    GetLatestOrdersDocument,\n    GetLatestOrdersQuery,\n    GetOrderListQuery,\n    ItemOf,\n    SharedModule,\n    SortOrder,\n} from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\nimport { Observable } from 'rxjs';\n\nconst GET_LATEST_ORDERS = gql`\n    query GetLatestOrders($options: OrderListOptions) {\n        orders(options: $options) {\n            items {\n                id\n                createdAt\n                updatedAt\n                type\n                orderPlacedAt\n                code\n                state\n                total\n                totalWithTax\n                currencyCode\n                customer {\n                    id\n                    firstName\n                    lastName\n                }\n            }\n        }\n    }\n`;\n\n@Component({\n    selector: 'vdr-latest-orders-widget',\n    templateUrl: './latest-orders-widget.component.html',\n    styleUrls: ['./latest-orders-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false,\n})\nexport class LatestOrdersWidgetComponent implements OnInit {\n    latestOrders$: Observable<Array<ItemOf<GetLatestOrdersQuery, 'orders'>>>;\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        this.latestOrders$ = this.dataService\n            .query(GetLatestOrdersDocument, {\n                options: {\n                    take: 10,\n                    filter: {\n                        active: { eq: false },\n                        state: { notIn: ['Cancelled', 'Draft'] },\n                    },\n                    sort: {\n                        orderPlacedAt: SortOrder.DESC,\n                    },\n                },\n            })\n            .refetchOnChannelChange()\n            .mapStream(data => data.orders.items);\n    }\n}\n\n@NgModule({\n    imports: [CoreModule, SharedModule],\n    declarations: [LatestOrdersWidgetComponent],\n})\nexport class LatestOrdersWidgetModule {}\n", "<vdr-data-table-2 [items]=\"latestOrders$ | async\" id=\"latest-orders-widget-list\">\n    <vdr-dt2-column [heading]=\"'common.code' | translate\" id=\"code\">\n        <ng-template let-order=\"item\">\n            <a class=\"button-ghost\" [routerLink]=\"['/orders/', order.id]\"\n                ><span>{{ order.code }}</span>\n                <clr-icon shape=\"arrow right\"></clr-icon>\n            </a>\n        </ng-template>\n    </vdr-dt2-column>\n    <vdr-dt2-column [heading]=\"'order.state' | translate\" id=\"state\" [hiddenByDefault]=\"true\">\n        <ng-template let-order=\"item\">\n            <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\n        </ng-template>\n    </vdr-dt2-column>\n    <vdr-dt2-column [heading]=\"'customer.customer' | translate\" id=\"customer\" [hiddenByDefault]=\"true\">\n        <ng-template let-order=\"item\">\n            <vdr-customer-label [customer]=\"order.customer\"></vdr-customer-label>\n        </ng-template>\n    </vdr-dt2-column>\n    <vdr-dt2-column [heading]=\"'order.total' | translate\" id=\"total\">\n        <ng-template let-order=\"item\">\n            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\n        </ng-template>\n    </vdr-dt2-column>\n    <vdr-dt2-column [heading]=\"'order.placed-at' | translate\" id=\"placed-at\">\n        <ng-template let-order=\"item\">\n            {{ order.orderPlacedAt | timeAgo }}\n        </ng-template>\n    </vdr-dt2-column>\n</vdr-data-table-2>\n", "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n    ChartEntry,\n    ChartFormatOptions,\n    DataService,\n    GetOrderChartDataDocument,\n    MetricType,\n} from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\nimport { BehaviorSubject, combineLatest, Observable, Subject, switchMap } from 'rxjs';\nimport { distinctUntilChanged, map, startWith } from 'rxjs/operators';\n\nexport const GET_ORDER_CHART_DATA = gql`\n    query GetOrderChartData($refresh: Boolean, $types: [MetricType!]!) {\n        metricSummary(input: { interval: Daily, types: $types, refresh: $refresh }) {\n            interval\n            type\n            entries {\n                label\n                value\n            }\n        }\n    }\n`;\n\n@Component({\n    selector: 'vdr-order-chart-widget',\n    templateUrl: './order-chart-widget.component.html',\n    styleUrls: ['./order-chart-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false,\n})\nexport class OrderChartWidgetComponent implements OnInit {\n    constructor(private dataService: DataService) {}\n    metrics$: Observable<ChartEntry[]>;\n    refresh$ = new Subject<boolean>();\n    metricType$ = new BehaviorSubject(MetricType.OrderTotal);\n    MetricType = MetricType;\n\n    ngOnInit() {\n        const currencyCode$ = this.dataService.settings\n            .getActiveChannel()\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\n        const uiState$ = this.dataService.client.uiState().mapStream(data => data.uiState);\n        const metricType$ = this.metricType$.pipe(distinctUntilChanged());\n        this.metrics$ = combineLatest(metricType$, currencyCode$, uiState$).pipe(\n            switchMap(([metricType, currencyCode, uiState]) =>\n                this.refresh$.pipe(\n                    startWith(false),\n                    switchMap(refresh =>\n                        this.dataService\n                            .query(GetOrderChartDataDocument, {\n                                types: [metricType],\n                                refresh,\n                            })\n                            .mapSingle(data => data.metricSummary)\n                            .pipe(\n                                map(metrics => {\n                                    const formatValueAs: 'currency' | 'number' =\n                                        metricType === MetricType.OrderCount ? 'number' : 'currency';\n                                    const locale = `${uiState.language}-${uiState.locale}`;\n\n                                    const formatOptions: ChartFormatOptions = {\n                                        formatValueAs,\n                                        currencyCode,\n                                        locale,\n                                    };\n                                    return (\n                                        metrics\n                                            .find(m => m.type === metricType)\n                                            ?.entries.map(entry => ({ ...entry, formatOptions })) ?? []\n                                    );\n                                }),\n                            ),\n                    ),\n                ),\n            ),\n        );\n    }\n\n    refresh() {\n        this.refresh$.next(true);\n    }\n}\n", "<vdr-chart [entries]=\"metrics$ | async\" />\n<div class=\"flex\" *ngIf=\"metricType$ | async as activeMetricType\">\n    <button\n        class=\"button-small\"\n        (click)=\"metricType$.next(MetricType.OrderTotal)\"\n        [class.active]=\"activeMetricType === MetricType.OrderTotal\"\n    >\n        {{ 'dashboard.metric-order-total-value' | translate }}\n    </button>\n    <button\n        class=\"ml-1 button-small\"\n        (click)=\"metricType$.next(MetricType.OrderCount)\"\n        [class.active]=\"activeMetricType === MetricType.OrderCount\"\n    >\n        {{ 'dashboard.metric-number-of-orders' | translate }}\n    </button>\n    <button\n        class=\"ml-1 button-small\"\n        (click)=\"metricType$.next(MetricType.AverageOrderValue)\"\n        [class.active]=\"activeMetricType === MetricType.AverageOrderValue\"\n    >\n        {{ 'dashboard.metric-average-order-value' | translate }}\n    </button>\n    <div class=\"flex-spacer\"></div>\n    <button class=\"button-small\" (click)=\"refresh()\">\n        <clr-icon shape=\"refresh\"></clr-icon>\n    </button>\n</div>\n", "import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\nimport { CoreModule, DataService, GetOrderSummaryDocument } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\nimport dayjs from 'dayjs';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, switchMap } from 'rxjs/operators';\n\nexport type Timeframe = 'day' | 'week' | 'month';\n\nexport const GET_ORDER_SUMMARY = gql`\n    query GetOrderSummary($start: DateTime!, $end: DateTime!) {\n        orders(options: { filter: { orderPlacedAt: { between: { start: $start, end: $end } } } }) {\n            totalItems\n            items {\n                id\n                totalWithTax\n                currencyCode\n            }\n        }\n    }\n`;\n\n@Component({\n    selector: 'vdr-order-summary-widget',\n    templateUrl: './order-summary-widget.component.html',\n    styleUrls: ['./order-summary-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false,\n})\nexport class OrderSummaryWidgetComponent implements OnInit {\n    today = new Date();\n    yesterday = new Date(new Date().setDate(this.today.getDate() - 1));\n    totalOrderCount$: Observable<number>;\n    totalOrderValue$: Observable<number>;\n    currencyCode$: Observable<string | undefined>;\n    selection$ = new BehaviorSubject<{ timeframe: Timeframe; date?: Date }>({\n        timeframe: 'day',\n        date: this.today,\n    });\n    dateRange$: Observable<{ start: Date; end: Date }>;\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        this.dateRange$ = this.selection$.pipe(\n            distinctUntilChanged(),\n            map(selection => ({\n                start: dayjs(selection.date).startOf(selection.timeframe).toDate(),\n                end: dayjs(selection.date).endOf(selection.timeframe).toDate(),\n            })),\n            shareReplay(1),\n        );\n        const orderSummary$ = this.dateRange$.pipe(\n            switchMap(({ start, end }) =>\n                this.dataService\n                    .query(GetOrderSummaryDocument, { start: start.toISOString(), end: end.toISOString() })\n                    .refetchOnChannelChange()\n                    .mapStream(data => data.orders),\n            ),\n            shareReplay(1),\n        );\n        this.totalOrderCount$ = orderSummary$.pipe(map(res => res.totalItems));\n        this.totalOrderValue$ = orderSummary$.pipe(\n            map(res => res.items.reduce((total, order) => total + order.totalWithTax, 0)),\n        );\n        this.currencyCode$ = this.dataService.settings\n            .getActiveChannel()\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\n    }\n}\n\n@NgModule({\n    imports: [CoreModule],\n    declarations: [OrderSummaryWidgetComponent],\n})\nexport class OrderSummaryWidgetModule {}\n", "<div class=\"stats\">\n    <div class=\"stat\">\n        <div class=\"stat-figure\">{{ totalOrderCount$ | async }}</div>\n        <div class=\"stat-label\">{{ 'dashboard.total-orders' | translate }}</div>\n    </div>\n    <div class=\"stat\">\n        <div class=\"stat-figure\">\n            {{ totalOrderValue$ | async | localeCurrency: (currencyCode$ | async) || undefined }}\n        </div>\n        <div class=\"stat-label\">{{ 'dashboard.total-order-value' | translate }}</div>\n    </div>\n</div>\n<div class=\"footer\">\n    <div class=\"flex\" *ngIf=\"selection$ | async as selection\">\n        <button class=\"button-small\" [class.active]=\"selection.date === today\" (click)=\"selection$.next({timeframe: 'day', date: today})\">\n            {{ 'dashboard.today' | translate }}\n        </button>\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.date === yesterday\" (click)=\"selection$.next({timeframe: 'day', date: yesterday})\">\n            {{ 'dashboard.yesterday' | translate }}\n        </button>\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.timeframe === 'week'\" (click)=\"selection$.next({timeframe: 'week'})\">\n            {{ 'dashboard.thisWeek' | translate }}\n        </button>\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.timeframe === 'month'\" (click)=\"selection$.next({timeframe: 'month'})\">\n            {{ 'dashboard.thisMonth' | translate }}\n        </button>\n    </div>\n\n    <div class=\"date-range\" *ngIf=\"dateRange$ | async as range\">\n        {{ range.start | localeDate }} - {{ range.end | localeDate }}\n    </div>\n</div>\n", "import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { DashboardWidgetConfig, Permission, WidgetLayoutDefinition } from '@vendure/admin-ui/core';\n\nimport { LatestOrdersWidgetComponent } from './widgets/latest-orders-widget/latest-orders-widget.component';\nimport { OrderChartWidgetComponent } from './widgets/order-chart-widget/order-chart-widget.component';\nimport { OrderSummaryWidgetComponent } from './widgets/order-summary-widget/order-summary-widget.component';\n\nexport const DEFAULT_DASHBOARD_WIDGET_LAYOUT: WidgetLayoutDefinition = [\n    { id: 'metrics', width: 12 },\n    { id: 'orderSummary', width: 6 },\n    { id: 'latestOrders', width: 6 },\n];\n\nexport const DEFAULT_WIDGETS: { [id: string]: DashboardWidgetConfig } = {\n    metrics: {\n        title: _('dashboard.metrics'),\n        supportedWidths: [6, 8, 12],\n        loadComponent: () => OrderChartWidgetComponent,\n        requiresPermissions: [Permission.ReadOrder],\n    },\n    orderSummary: {\n        title: _('dashboard.orders-summary'),\n        loadComponent: () => OrderSummaryWidgetComponent,\n        supportedWidths: [4, 6, 8, 12],\n        requiresPermissions: [Permission.ReadOrder],\n    },\n    latestOrders: {\n        title: _('dashboard.latest-orders'),\n        loadComponent: () => LatestOrdersWidgetComponent,\n        supportedWidths: [6, 8, 12],\n        requiresPermissions: [Permission.ReadOrder],\n    },\n};\n", "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DashboardWidgetService, SharedModule } from '@vendure/admin-ui/core';\n\nimport { DashboardWidgetComponent } from './components/dashboard-widget/dashboard-widget.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { dashboardRoutes } from './dashboard.routes';\nimport { DEFAULT_DASHBOARD_WIDGET_LAYOUT, DEFAULT_WIDGETS } from './default-widgets';\nimport { OrderChartWidgetComponent } from './widgets/order-chart-widget/order-chart-widget.component';\n\n@NgModule({\n    imports: [SharedModule, RouterModule.forChild(dashboardRoutes)],\n    declarations: [DashboardComponent, DashboardWidgetComponent, OrderChartWidgetComponent],\n})\nexport class DashboardModule {\n    constructor(dashboardWidgetService: DashboardWidgetService) {\n        Object.entries(DEFAULT_WIDGETS).map(([id, config]) => {\n            if (!dashboardWidgetService.getWidgetById(id)) {\n                dashboardWidgetService.registerWidget(id, config);\n            }\n        });\n        if (dashboardWidgetService.getDefaultLayout().length === 0) {\n            dashboardWidgetService.setDefaultLayout(DEFAULT_DASHBOARD_WIDGET_LAYOUT);\n        }\n    }\n}\n", "import { ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\n\n@Component({\n    selector: 'vdr-test-widget',\n    templateUrl: './test-widget.component.html',\n    styleUrls: ['./test-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false,\n})\nexport class TestWidgetComponent {}\n\n@NgModule({\n    declarations: [TestWidgetComponent],\n})\nexport class TestWidgetModule {}\n", "<p>This is a test widget!</p>\n", "import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\nimport {\n    ADMIN_UI_VERSION,\n    CoreModule,\n    DataService,\n    GetActiveAdministratorQuery,\n    getAppConfig,\n} from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'vdr-welcome-widget',\n    templateUrl: './welcome-widget.component.html',\n    styleUrls: ['./welcome-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false,\n})\nexport class WelcomeWidgetComponent implements OnInit {\n    version = ADMIN_UI_VERSION;\n    administrator$: Observable<GetActiveAdministratorQuery['activeAdministrator']>;\n    brand = getAppConfig().brand;\n    hideVendureBranding = getAppConfig().hideVendureBranding;\n    hideVersion = getAppConfig().hideVersion;\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        this.administrator$ = this.dataService.administrator\n            .getActiveAdministrator()\n            .mapStream(data => data.activeAdministrator || null);\n    }\n}\n\n@NgModule({\n    imports: [CoreModule],\n    declarations: [WelcomeWidgetComponent],\n})\nexport class WelcomeWidgetModule {}\n", "<div *ngIf=\"administrator$ | async as administrator\">\n    <h4 class=\"\">\n        Welcome, {{ administrator.firstName }} {{ administrator.lastName }}<br />\n        <small class=\"p5\">Last login: {{ administrator.user.lastLogin | timeAgo }}</small>\n    </h4>\n\n    <p class=\"p5\" *ngIf=\"!hideVendureBranding || !hideVersion\">\n        {{ hideVendureBranding ? '' : 'Vendure' }} {{ hideVersion ? '' : ('Admin UI v' + version) }}\n    </p>\n</div>\n<div class=\"placeholder\">\n    <clr-icon shape=\"line-chart\" size=\"128\"></clr-icon>\n</div>\n"],
  "mappings": "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",
  "names": ["import_shared_utils", "\u0275\u0275projection", "DashboardWidgetComponent", "ngAfterViewInit", "loadWidget", "__async", "loadComponentResult", "widgetConfig", "loadComponent", "componentType", "Promise", "componentRef", "portal", "createComponent", "changeDetectorRef", "detectChanges", "ngOnDestroy", "destroy", "selectors", "viewQuery", "rf", "ctx", "ViewContainerRef", "\u0275\u0275elementStart", "\u0275\u0275template", "DashboardWidgetComponent_ng_template_2_Template", "DashboardWidgetComponent_ng_template_3_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275pipeBind1", "tmp_1_0", "title", "undefined", "\u0275\u0275elementStart", "\u0275\u0275listener", "widget_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "addWidget", "id", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "tmp_2_0", "config", "title", "undefined", "width_r7", "_r6", "widget_r8", "setWidgetWidth", "\u0275\u0275property", "width", "\u0275\u0275pipeBind2", "\u0275\u0275pureFunction1", "_c1", "\u0275\u0275element", "\u0275\u0275template", "DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_button_11_Template", "_r5", "removeWidget", "\u0275\u0275textInterpolate", "getSupportedWidths", "DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_Template", "getClassForWidth", "requiresPermissions", "$event", "_r4", "drop", "DashboardComponent_div_12_div_1_Template", "_c0", "rowIndex_r10", "row_r9", "trackRowItem", "DashboardComponent", "constructor", "dashboardWidgetService", "localStorageService", "changedDetectorRef", "dataService", "deletionMarker", "setTitle", "titleSetter", "ngOnInit", "availableWidgets$", "client", "userStatus", "stream$", "pipe", "map", "permissions", "getAvailableWidgets", "tap", "widgets", "widgetLayout", "initLayout", "w", "assertNever", "supportedWidths", "widget", "recalculateLayout", "trackRow", "index", "row", "item", "join", "getWidgetById", "targetRow", "length", "push", "event", "currentIndex", "previousIndex", "previousContainer", "container", "data", "previousLayoutRow", "newLayoutRow", "splice", "availableIds", "savedLayoutDef", "get", "layoutDef", "filter", "includes", "getWidgetLayout", "newLayoutDef", "reduce", "flat", "set", "setTimeout", "markForCheck", "\u0275\u0275directiveInject", "DashboardWidgetService", "LocalStorageService", "ChangeDetectorRef", "DataService", "selectors", "standalone", "decls", "vars", "consts", "template", "rf", "ctx", "DashboardComponent_button_9_Template", "DashboardComponent_div_12_Template", "dashboardRoutes", "path", "component", "DashboardComponent", "pathMatch", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c0", "order_r1", "id", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "code", "order_r2", "state", "order_r3", "customer", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind2", "order_r4", "totalWithTax", "currencyCode", "\u0275\u0275pipeBind1", "order_r5", "orderPlacedAt", "GET_LATEST_ORDERS", "gql", "LatestOrdersWidgetComponent", "constructor", "dataService", "ngOnInit", "latestOrders$", "query", "GetLatestOrdersDocument", "options", "take", "filter", "active", "eq", "notIn", "sort", "SortOrder", "DESC", "refetchOnChannelChange", "mapStream", "data", "orders", "items", "\u0275\u0275directiveInject", "DataService", "selectors", "standalone", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "LatestOrdersWidgetComponent_ng_template_4_Template", "LatestOrdersWidgetComponent_ng_template_7_Template", "LatestOrdersWidgetComponent_ng_template_10_Template", "LatestOrdersWidgetComponent_ng_template_13_Template", "LatestOrdersWidgetComponent_ng_template_16_Template", "LatestOrdersWidgetModule", "CoreModule", "SharedModule", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "metricType$", "next", "MetricType", "OrderTotal", "\u0275\u0275text", "\u0275\u0275elementEnd", "OrderCount", "AverageOrderValue", "\u0275\u0275element", "refresh", "\u0275\u0275advance", "\u0275\u0275classProp", "activeMetricType_r3", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "GET_ORDER_CHART_DATA", "gql", "OrderChartWidgetComponent", "constructor", "dataService", "refresh$", "Subject", "BehaviorSubject", "ngOnInit", "currencyCode$", "settings", "getActiveChannel", "refetchOnChannelChange", "mapStream", "data", "activeChannel", "defaultCurrencyCode", "undefined", "uiState$", "client", "uiState", "pipe", "distinctUntilChanged", "metrics$", "combineLatest", "switchMap", "metricType", "currencyCode", "startWith", "query", "GetOrderChartDataDocument", "types", "mapSingle", "metricSummary", "map", "metrics", "formatValueAs", "locale", "language", "formatOptions", "find", "m", "type", "entries", "entry", "__spreadProps", "__spreadValues", "\u0275\u0275directiveInject", "DataService", "selectors", "standalone", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "OrderChartWidgetComponent_div_2_Template", "\u0275\u0275property", "import_dayjs", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "selection$", "next", "timeframe", "date", "today", "\u0275\u0275text", "\u0275\u0275elementEnd", "yesterday", "\u0275\u0275advance", "\u0275\u0275classProp", "selection_r3", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275textInterpolate2", "range_r4", "start", "end", "GET_ORDER_SUMMARY", "gql", "OrderSummaryWidgetComponent", "constructor", "dataService", "Date", "setDate", "getDate", "BehaviorSubject", "ngOnInit", "dateRange$", "pipe", "distinctUntilChanged", "map", "selection", "dayjs", "startOf", "toDate", "endOf", "shareReplay", "orderSummary$", "switchMap", "query", "GetOrderSummaryDocument", "toISOString", "refetchOnChannelChange", "mapStream", "data", "orders", "totalOrderCount$", "res", "totalItems", "totalOrderValue$", "items", "reduce", "total", "order", "totalWithTax", "currencyCode$", "settings", "getActiveChannel", "activeChannel", "defaultCurrencyCode", "undefined", "\u0275\u0275directiveInject", "DataService", "selectors", "standalone", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "OrderSummaryWidgetComponent_div_18_Template", "OrderSummaryWidgetComponent_div_20_Template", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind2", "\u0275\u0275property", "OrderSummaryWidgetModule", "CoreModule", "DEFAULT_DASHBOARD_WIDGET_LAYOUT", "id", "width", "DEFAULT_WIDGETS", "metrics", "title", "supportedWidths", "loadComponent", "OrderChartWidgetComponent", "requiresPermissions", "Permission", "ReadOrder", "orderSummary", "OrderSummaryWidgetComponent", "latestOrders", "LatestOrdersWidgetComponent", "DashboardModule", "constructor", "dashboardWidgetService", "Object", "entries", "DEFAULT_WIDGETS", "map", "id", "config", "getWidgetById", "registerWidget", "getDefaultLayout", "length", "setDefaultLayout", "DEFAULT_DASHBOARD_WIDGET_LAYOUT", "\u0275\u0275inject", "DashboardWidgetService", "SharedModule", "RouterModule", "forChild", "dashboardRoutes", "TestWidgetComponent", "selectors", "standalone", "decls", "vars", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "TestWidgetModule", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate2", "ctx_r0", "hideVendureBranding", "hideVersion", "version", "\u0275\u0275element", "\u0275\u0275template", "WelcomeWidgetComponent_div_0_p_7_Template", "administrator_r2", "firstName", "lastName", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "user", "lastLogin", "\u0275\u0275property", "WelcomeWidgetComponent", "constructor", "dataService", "ADMIN_UI_VERSION", "brand", "getAppConfig", "ngOnInit", "administrator$", "administrator", "getActiveAdministrator", "mapStream", "data", "activeAdministrator", "\u0275\u0275directiveInject", "DataService", "selectors", "standalone", "decls", "vars", "consts", "template", "rf", "ctx", "WelcomeWidgetComponent_div_0_Template", "WelcomeWidgetModule", "CoreModule"]
}
